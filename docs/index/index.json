{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Getting Started",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/quick-start",
            "title" : "Quick start",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/examples",
            "title" : "Examples",
            "type" : "article"
          },
          {
            "title" : "Backends",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/defaultbackend",
            "title" : "DefaultBackend",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/appkitbackend",
            "title" : "AppKitBackend",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/uikitbackend",
            "title" : "UIKitBackend",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/winuibackend",
            "title" : "WinUIBackend",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/gtkbackend",
            "title" : "GtkBackend",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/gtk3backend",
            "title" : "Gtk3Backend",
            "type" : "article"
          },
          {
            "title" : "App Structure",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/app\/backend-swift.associatedtype",
                "title" : "Backend",
                "type" : "associatedtype"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/app\/body-swift.associatedtype",
                "title" : "Body",
                "type" : "associatedtype"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/app\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/app\/backend-swift.property",
                "title" : "var backend: Self.Backend",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/app\/body-swift.property",
                "title" : "var body: Self.Body",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/app\/metadata-3rxf9",
                        "title" : "static var metadata: AppMetadata?",
                        "type" : "property"
                      }
                    ],
                    "title" : "App Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/app\/metadata-8wl5c",
                "title" : "static var metadata: AppMetadata?",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/app\/main()",
                "title" : "static func main()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/app",
            "title" : "App",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:)",
                "title" : "static func buildBlock<Content>(Content) -> Content",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1>(Scene0, Scene1) -> TupleScene2<Scene0, Scene1>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2>(Scene0, Scene1, Scene2) -> TupleScene3<Scene0, Scene1, Scene2>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3>(Scene0, Scene1, Scene2, Scene3) -> TupleScene4<Scene0, Scene1, Scene2, Scene3>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3, Scene4>(Scene0, Scene1, Scene2, Scene3, Scene4) -> TupleScene5<Scene0, Scene1, Scene2, Scene3, Scene4>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5>(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5) -> TupleScene6<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6>(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6) -> TupleScene7<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7>(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7) -> TupleScene8<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8>(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8) -> TupleScene9<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenebuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9>(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9) -> TupleScene10<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9>",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/scenebuilder",
            "title" : "SceneBuilder",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock()",
                "title" : "static func buildBlock() -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:)",
                "title" : "static func buildBlock<V0>(V0) -> TupleView1<V0>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:)",
                "title" : "static func buildBlock<V0, V1>(V0, V1) -> TupleView2<V0, V1>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2>(V0, V1, V2) -> TupleView3<V0, V1, V2>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3>(V0, V1, V2, V3) -> TupleView4<V0, V1, V2, V3>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3, V4>(V0, V1, V2, V3, V4) -> TupleView5<V0, V1, V2, V3, V4>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3, V4, V5>(V0, V1, V2, V3, V4, V5) -> TupleView6<V0, V1, V2, V3, V4, V5>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3, V4, V5, V6>(V0, V1, V2, V3, V4, V5, V6) -> TupleView7<V0, V1, V2, V3, V4, V5, V6>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7>(V0, V1, V2, V3, V4, V5, V6, V7) -> TupleView8<V0, V1, V2, V3, V4, V5, V6, V7>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8>(V0, V1, V2, V3, V4, V5, V6, V7, V8) -> TupleView9<V0, V1, V2, V3, V4, V5, V6, V7, V8>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9>(V0, V1, V2, V3, V4, V5, V6, V7, V8, V9) -> TupleView10<V0, V1, V2, V3, V4, V5, V6, V7, V8, V9>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildeither(first:)",
                "title" : "static func buildEither<A, B>(first: A) -> EitherView<A, B>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildeither(second:)",
                "title" : "static func buildEither<A, B>(second: B) -> EitherView<A, B>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewbuilder\/buildif(_:)",
                "title" : "static func buildIf<V>(V?) -> OptionalView<V>",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewbuilder",
            "title" : "ViewBuilder",
            "type" : "struct"
          },
          {
            "title" : "Views",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/button\/init(_:action:)",
                "title" : "init(String, action: () -> Void)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/button\/aswidget(backend:)",
                "title" : "func asWidget<Backend>(backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/button\/update(_:proposedsize:environment:backend:dryrun:)",
                "title" : "func update<Backend>(Backend.Widget, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/button\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/button\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/button",
            "title" : "Button",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/cellposition\/init(_:_:)",
                "title" : "init(Int, Int)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/cellposition\/column",
                "title" : "var column: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/cellposition\/row",
                "title" : "var row: Int",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/cellposition",
            "title" : "CellPosition",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/init(_:_:_:_:)",
                "title" : "init(Float, Float, Float, Float)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/alpha",
                "title" : "var alpha: Float",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/blue-swift.property",
                "title" : "var blue: Float",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/green-swift.property",
                "title" : "var green: Float",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/red-swift.property",
                "title" : "var red: Float",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/opacity(_:)",
                "title" : "func opacity(Float) -> Color",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/black",
                "title" : "static let black: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/blue-swift.type.property",
                "title" : "static let blue: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/brown",
                "title" : "static let brown: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/clear",
                "title" : "static let clear: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/cyan",
                "title" : "static let cyan: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/gray",
                "title" : "static let gray: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/green-swift.type.property",
                "title" : "static let green: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/indigo",
                "title" : "static let indigo: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/mint",
                "title" : "static let mint: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/orange",
                "title" : "static let orange: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/pink",
                "title" : "static let pink: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/purple",
                "title" : "static let purple: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/red-swift.type.property",
                "title" : "static let red: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/teal",
                "title" : "static let teal: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/white",
                "title" : "static let white: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/color\/yellow",
                "title" : "static let yellow: Color",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/color\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/color\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/color",
            "title" : "Color",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/foreach\/init(_:_:)-31nmb",
                "title" : "init(Items, (Items.Element) -> [MenuItem])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/foreach\/init(_:_:)-6x5b3",
                "title" : "init(Items, (Items.Element) -> Child)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/body",
                    "title" : "var body: EmptyView",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/foreach\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/foreach\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/foreach",
            "title" : "ForEach",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hstack\/init(alignment:spacing:_:)",
                "title" : "init(alignment: VerticalAlignment, spacing: Int?, () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hstack\/body",
                "title" : "var body: Content",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hstack\/aswidget(_:backend:)-4sgca",
                "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hstack\/update(_:children:proposedsize:environment:backend:dryrun:)-622kg",
                "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/aswidget(_:backend:)-14ezo",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hstack\/update(_:children:proposedsize:environment:backend:dryrun:)-8ugp1",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/hstack\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/hstack",
            "title" : "HStack",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/image\/init(_:)",
                "title" : "init(Image<RGBA>)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/image\/init(_:usefileextension:)",
                "title" : "init(URL, useFileExtension: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/image\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/image\/resizable()",
                "title" : "func resizable() -> Image",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/image\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/image\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/image",
            "title" : "Image",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationlink\/init(_:value:path:)",
                "title" : "init<C>(String, value: C, path: Binding<NavigationPath>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationlink\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationlink\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/navigationlink\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/navigationlink",
            "title" : "NavigationLink",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationpath\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationpath\/append(_:)",
                "title" : "func append<C>(C)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationpath\/removeall()",
                "title" : "func removeAll()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationpath\/removelast(_:)",
                "title" : "func removeLast(Int)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationpath\/init(from:)",
                    "title" : "init(from: any Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/navigationpath\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationpath\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/navigationpath\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/navigationpath",
            "title" : "NavigationPath",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/init(sidebar:content:detail:)",
                "title" : "init(sidebar: () -> Sidebar, content: () -> MiddleBar, detail: () -> Detail)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/init(sidebar:detail:)",
                "title" : "init(sidebar: () -> Sidebar, detail: () -> Detail)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/content",
                "title" : "var content: MiddleBar",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/detail",
                "title" : "var detail: Detail",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/sidebar",
                "title" : "var sidebar: Sidebar",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/navigationsplitview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/navigationsplitview",
            "title" : "NavigationSplitView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationstack\/init(path:_:)",
                "title" : "init(path: Binding<NavigationPath>, () -> Detail)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationstack\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/navigationstack\/navigationdestination(for:destination:)",
                "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> NavigationStack<EitherView<Detail, C>>",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/navigationstack\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/navigationstack\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/navigationstack",
            "title" : "NavigationStack",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/picker\/init(of:selection:)",
                "title" : "init(of: [Value], selection: Binding<Value?>)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/picker\/aswidget(backend:)",
                "title" : "func asWidget<Backend>(backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/picker\/update(_:proposedsize:environment:backend:dryrun:)",
                "title" : "func update<Backend>(Backend.Widget, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/picker\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/picker\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/picker",
            "title" : "Picker",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scrollview\/init(_:_:)",
                "title" : "init(Axis.Set, () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scrollview\/axes",
                "title" : "var axes: Axis.Set",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scrollview\/body",
                "title" : "var body: VStack<Content>",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/scrollview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/scrollview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/scrollview",
            "title" : "ScrollView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/slider\/init(_:minimum:maximum:)-8qa1u",
                "title" : "init<T>(Binding<T>?, minimum: T, maximum: T)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/slider\/init(_:minimum:maximum:)-bs2t",
                "title" : "init<T>(Binding<T>?, minimum: T, maximum: T)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/slider\/aswidget(backend:)",
                "title" : "func asWidget<Backend>(backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/slider\/update(_:proposedsize:environment:backend:dryrun:)",
                "title" : "func update<Backend>(Backend.Widget, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/slider\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/slider\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/slider",
            "title" : "Slider",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/spacer\/init(minlength:)",
                "title" : "init(minLength: Int?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/spacer\/aswidget(backend:)",
                "title" : "func asWidget<Backend>(backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/spacer\/update(_:proposedsize:environment:backend:dryrun:)",
                "title" : "func update<Backend>(Backend.Widget, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/spacer\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/spacer\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/spacer",
            "title" : "Spacer",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/table\/init(_:_:)",
                "title" : "init([RowValue], () -> RowContent)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/table\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/table\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/table\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/table",
            "title" : "Table",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablecolumn\/init(_:content:)",
                "title" : "init(String, content: (RowValue) -> Content)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablecolumn\/init(_:value:)",
                "title" : "init(String, value: KeyPath<RowValue, String>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablecolumn\/content",
                "title" : "var content: (RowValue) -> Content",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablecolumn\/label",
                "title" : "var label: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tablecolumn",
            "title" : "TableColumn",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/text\/init(_:)",
                "title" : "init(String)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/text\/aswidget(backend:)",
                "title" : "func asWidget<Backend>(backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/text\/update(_:proposedsize:environment:backend:dryrun:)",
                "title" : "func update<Backend>(Backend.Widget, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/text\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/text\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/text",
            "title" : "Text",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/textfield\/init(_:_:)",
                "title" : "init(String, Binding<String>?)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/textfield\/aswidget(backend:)",
                "title" : "func asWidget<Backend>(backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/textfield\/update(_:proposedsize:environment:backend:dryrun:)",
                "title" : "func update<Backend>(Backend.Widget, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/textfield\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/textfield\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/textfield",
            "title" : "TextField",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/toggle\/init(_:active:)",
                "title" : "init(String, active: Binding<Bool>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/toggle\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/toggle\/togglestyle(_:)",
                "title" : "func toggleStyle(ToggleStyle) -> Toggle",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/toggle\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/toggle\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/toggle",
            "title" : "Toggle",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/content",
                "title" : "Content",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/body",
                "title" : "var body: Self.Content",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/alert(_:ispresented:actions:)",
                "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/view\/aswidget(_:backend:)-7s16u",
                        "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "View Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/view\/aswidget(_:backend:)-88tbd",
                "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/background(_:)",
                "title" : "func background<Background>(Background) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/bold()",
                "title" : "func bold() -> some View",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/view\/children(backend:snapshots:environment:)-5v4xq",
                        "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                        "type" : "method"
                      }
                    ],
                    "title" : "View Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/view\/children(backend:snapshots:environment:)-3yoia",
                "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/colorscheme(_:)",
                "title" : "func colorScheme(ColorScheme) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/cornerradius(_:)",
                "title" : "func cornerRadius(Int) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/font(_:)",
                "title" : "func font(Font) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/foregroundcolor(_:)",
                "title" : "func foregroundColor(Color) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/frame(width:height:alignment:)",
                "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/if(_:apply:)",
                "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/iflet(_:apply:)",
                "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/view\/layoutablechildren(backend:children:)-182zg",
                        "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                        "type" : "method"
                      }
                    ],
                    "title" : "View Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/view\/layoutablechildren(backend:children:)-5lkh8",
                "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/multilinetextalignment(_:)",
                "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/onappear(perform:)",
                "title" : "func onAppear(perform: () -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/onchange(of:initial:perform:)",
                "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/onclick(perform:)",
                "title" : "func onClick(perform: () -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/ondisappear(perform:)",
                "title" : "func onDisappear(perform: () -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/onopenurl(perform:)",
                "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/onsubmit(perform:)",
                "title" : "func onSubmit(perform: () -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/ontapgesture(gesture:perform:)",
                "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/overlay(content:)",
                "title" : "func overlay(content: () -> some View) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/padding(_:)",
                "title" : "func padding(Int?) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/padding(_:_:)",
                "title" : "func padding(Edge.Set, Int?) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/preference(key:value:)",
                "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/submitscope()",
                "title" : "func submitScope() -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/task(id:priority:_:)",
                "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/view\/task(priority:_:)",
                "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/view\/update(_:children:proposedsize:environment:backend:dryrun:)-27j1y",
                        "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                        "type" : "method"
                      }
                    ],
                    "title" : "View Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/view\/update(_:children:proposedsize:environment:backend:dryrun:)-3tixh",
                "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/view",
            "title" : "View",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/viewcontent",
            "title" : "ViewContent",
            "type" : "typealias"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/vstack\/init(alignment:spacing:content:)",
                "title" : "init(alignment: HorizontalAlignment, spacing: Int?, content: () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/vstack\/body",
                "title" : "var body: Content",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/vstack\/aswidget(_:backend:)-xlz8",
                "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/vstack\/update(_:children:proposedsize:environment:backend:dryrun:)-12my7",
                "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/aswidget(_:backend:)-17pw2",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/vstack\/update(_:children:proposedsize:environment:backend:dryrun:)-9qtz1",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/vstack\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/vstack",
            "title" : "VStack",
            "type" : "struct"
          },
          {
            "title" : "States",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/state\/init(wrappedvalue:)",
                "title" : "init(wrappedValue: Value)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/state\/projectedvalue",
                "title" : "var projectedValue: Binding<Value>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/state\/wrappedvalue",
                "title" : "var wrappedValue: Value",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/state\/update(with:previousvalue:)",
                "title" : "func update(with: EnvironmentValues, previousValue: State<Value>?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/state",
            "title" : "State",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/binding\/init(get:set:)",
                "title" : "init(get: () -> Value, set: (Value) -> Void)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/binding\/wrappedvalue",
                "title" : "var wrappedValue: Value",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/binding\/onchange(_:)",
                "title" : "func onChange((Value) -> Void) -> Binding<Value>",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/binding\/subscript(dynamicmember:)",
                "title" : "subscript<T>(dynamicMember _: WritableKeyPath<Value, T>) -> Binding<T>",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/binding",
            "title" : "Binding",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/observableobject\/didchange-s8vt",
                        "title" : "var didChange: Publisher",
                        "type" : "property"
                      }
                    ],
                    "title" : "ObservableObject Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/observableobject\/didchange-1n22b",
                "title" : "var didChange: Publisher",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/observableobject",
            "title" : "ObservableObject",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/init(wrappedvalue:)-17tmo",
                "title" : "init(wrappedValue: Value)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/init(wrappedvalue:)-5ffvr",
                "title" : "init(wrappedValue: Value)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/init(wrappedvalue:)-7i6yg",
                "title" : "init(wrappedValue: Value)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/didchange",
                "title" : "let didChange: Publisher",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/projectedvalue",
                "title" : "var projectedValue: Binding<Value>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/wrappedvalue",
                "title" : "var wrappedValue: Value",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/published\/valuedidchange(publish:)",
                "title" : "func valueDidChange(publish: Bool)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/published\/init(from:)",
                    "title" : "convenience init(from: any Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/published\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/published\/encode(to:)",
                    "title" : "func encode(to: any Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/published\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/published",
            "title" : "Published",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/publisher\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/publisher\/link(toupstream:)",
                "title" : "func link(toUpstream: Publisher) -> Cancellable",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/publisher\/observe(with:)",
                "title" : "func observe(with: () -> Void) -> Cancellable",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/publisher\/send()",
                "title" : "func send()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/publisher",
            "title" : "Publisher",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/cancellable\/init(closure:)",
                "title" : "init(closure: () -> Void)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/cancellable\/cancel()",
                "title" : "func cancel()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/cancellable",
            "title" : "Cancellable",
            "type" : "class"
          },
          {
            "title" : "Implementation Details",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/init(_:)",
                "title" : "init<Backend>(ViewGraphNode<NodeView, Backend>)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/init(for:backend:snapshot:environment:)",
                "title" : "convenience init<Backend>(for: NodeView, backend: Backend, snapshot: ViewGraphSnapshotter.NodeSnapshot?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/node",
                "title" : "var node: Any",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/widget",
                "title" : "var widget: AnyWidget",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/concretenode(for:)",
                "title" : "func concreteNode<Backend>(for: Backend.Type) -> ViewGraphNode<NodeView, Backend>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/getbackend()",
                "title" : "func getBackend() -> any AppBackend",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/getchildren()",
                "title" : "func getChildren() -> any ViewGraphNodeChildren",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/getview()",
                "title" : "func getView() -> NodeView",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode\/update(with:proposedsize:environment:dryrun:)",
                "title" : "func update(with: NodeView?, proposedSize: SIMD2<Int>, environment: EnvironmentValues, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/anyviewgraphnode",
            "title" : "AnyViewGraphNode",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/eitherview\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/eitherview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/eitherview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/eitherview",
            "title" : "EitherView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/body",
                "title" : "var body: Never",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/aswidget(_:backend:)-6lxpl",
                "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/children(backend:snapshots:environment:)-guha",
                "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/layoutablechildren(backend:children:)-84jza",
                "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/update(_:children:proposedsize:environment:backend:dryrun:)-4dpu7",
                "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyview\/updatechildren(_:backend:)",
                "title" : "func updateChildren<Backend>(any ViewGraphNodeChildren, backend: Backend)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/aswidget(_:backend:)-wmuy",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/children(backend:snapshots:environment:)-5ggrm",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/layoutablechildren(backend:children:)-9isjd",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyview\/update(_:children:proposedsize:environment:backend:dryrun:)-8krr7",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/emptyview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/emptyview",
            "title" : "EmptyView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyviewchildren\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyviewchildren\/erasednodes",
                "title" : "let erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptyviewchildren\/widgets",
                "title" : "let widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/emptyviewchildren\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/emptyviewchildren\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/emptyviewchildren",
            "title" : "EmptyViewChildren",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/optionalview\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/optionalview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/optionalview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/optionalview",
            "title" : "OptionalView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraph\/init(for:backend:environment:)",
                "title" : "init<Backend>(for: Root, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraph\/rootnode-swift.property",
                "title" : "var rootNode: ViewGraph<Root>.RootNode",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraph\/snapshot()",
                "title" : "func snapshot() -> ViewGraphSnapshotter.NodeSnapshot",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraph\/update(with:proposedsize:environment:dryrun:)",
                "title" : "func update(with: Root?, proposedSize: SIMD2<Int>, environment: EnvironmentValues, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraph\/rootnode-swift.typealias",
                "title" : "ViewGraph.RootNode",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewgraph",
            "title" : "ViewGraph",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnode\/init(for:backend:snapshot:environment:)",
                "title" : "init(for: NodeView, backend: Backend, snapshot: ViewGraphSnapshotter.NodeSnapshot?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnode\/backend",
                "title" : "var backend: Backend",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnode\/children",
                "title" : "var children: any ViewGraphNodeChildren",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnode\/view",
                "title" : "var view: NodeView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnode\/widget",
                "title" : "var widget: Backend.Widget",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnode\/update(with:proposedsize:environment:dryrun:)",
                "title" : "func update(with: NodeView?, proposedSize: SIMD2<Int>, environment: EnvironmentValues, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewgraphnode",
            "title" : "ViewGraphNode",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnodechildren\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnodechildren\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphnodechildren\/widgets(for:)",
                "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewgraphnodechildren",
            "title" : "ViewGraphNodeChildren",
            "type" : "protocol"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anywidget\/init(_:)",
                "title" : "init(Any)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anywidget\/concretewidget(for:)",
                "title" : "func concreteWidget<Backend>(for: Backend.Type) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anywidget\/into()",
                "title" : "func into<T>() -> T",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/anywidget",
            "title" : "AnyWidget",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifiernode\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: CommandsModifierNode<Content>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifiernode\/update(_:backend:environment:)",
                "title" : "func update<Backend>(CommandsModifierNode<Content>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifiernode\/nodescene",
                "title" : "CommandsModifierNode.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/commandsmodifiernode",
            "title" : "CommandsModifierNode",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode10\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode10<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode10\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode10<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode10\/nodescene",
                "title" : "TupleSceneNode10.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode10",
            "title" : "TupleSceneNode10",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode2\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode2<Scene0, Scene1>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode2\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode2<Scene0, Scene1>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode2\/nodescene",
                "title" : "TupleSceneNode2.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode2",
            "title" : "TupleSceneNode2",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode3\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode3<Scene0, Scene1, Scene2>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode3\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode3<Scene0, Scene1, Scene2>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode3\/nodescene",
                "title" : "TupleSceneNode3.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode3",
            "title" : "TupleSceneNode3",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode4\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode4<Scene0, Scene1, Scene2, Scene3>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode4\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode4<Scene0, Scene1, Scene2, Scene3>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode4\/nodescene",
                "title" : "TupleSceneNode4.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode4",
            "title" : "TupleSceneNode4",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode5\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode5<Scene0, Scene1, Scene2, Scene3, Scene4>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode5\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode5<Scene0, Scene1, Scene2, Scene3, Scene4>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode5\/nodescene",
                "title" : "TupleSceneNode5.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode5",
            "title" : "TupleSceneNode5",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode6\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode6<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode6\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode6<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode6\/nodescene",
                "title" : "TupleSceneNode6.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode6",
            "title" : "TupleSceneNode6",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode7\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode7<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode7\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode7<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode7\/nodescene",
                "title" : "TupleSceneNode7.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode7",
            "title" : "TupleSceneNode7",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode8\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode8<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode8\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode8<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode8\/nodescene",
                "title" : "TupleSceneNode8.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode8",
            "title" : "TupleSceneNode8",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode9\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: TupleSceneNode9<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8>.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode9\/update(_:backend:environment:)",
                "title" : "func update<Backend>(TupleSceneNode9<Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8>.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescenenode9\/nodescene",
                "title" : "TupleSceneNode9.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescenenode9",
            "title" : "TupleSceneNode9",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroupnode\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: WindowGroup<Content>, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroupnode\/computenewwindowsize(currentproposedsize:backend:contentsize:environment:)",
                "title" : "func computeNewWindowSize<Backend>(currentProposedSize: SIMD2<Int>, backend: Backend, contentSize: ViewSize, environment: EnvironmentValues) -> SIMD2<Int>?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroupnode\/update(_:backend:environment:)",
                "title" : "func update<Backend>(WindowGroup<Content>?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroupnode\/update(_:proposedwindowsize:backend:environment:windowsizeisfinal:)",
                "title" : "func update<Backend>(WindowGroup<Content>?, proposedWindowSize: SIMD2<Int>, backend: Backend, environment: EnvironmentValues, windowSizeIsFinal: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroupnode\/nodescene",
                "title" : "WindowGroupNode.NodeScene",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/windowgroupnode",
            "title" : "WindowGroupNode",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/alert",
                "title" : "Alert",
                "type" : "associatedtype"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/menu",
                "title" : "Menu",
                "type" : "associatedtype"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/widget",
                "title" : "Widget",
                "type" : "associatedtype"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/window",
                "title" : "Window",
                "type" : "associatedtype"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/defaultpaddingamount",
                "title" : "var defaultPaddingAmount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/defaulttablecellverticalpadding",
                "title" : "var defaultTableCellVerticalPadding: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/defaulttablerowcontentheight",
                "title" : "var defaultTableRowContentHeight: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/defaulttogglestyle",
                "title" : "var defaultToggleStyle: ToggleStyle",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/requiresimageupdateonscalefactorchange",
                "title" : "var requiresImageUpdateOnScaleFactorChange: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/requirestoggleswitchspacer",
                "title" : "var requiresToggleSwitchSpacer: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/scrollbarwidth",
                "title" : "var scrollBarWidth: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/activate(window:)",
                "title" : "func activate(window: Self.Window)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/addchild(_:to:)",
                "title" : "func addChild(Self.Widget, to: Self.Widget)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/computerootenvironment(defaultenvironment:)",
                "title" : "func computeRootEnvironment(defaultEnvironment: EnvironmentValues) -> EnvironmentValues",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/computewindowenvironment(window:rootenvironment:)",
                "title" : "func computeWindowEnvironment(window: Self.Window, rootEnvironment: EnvironmentValues) -> EnvironmentValues",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createalert()-5t1c1",
                        "title" : "func createAlert() -> Self.Alert",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createalert()-1lm92",
                "title" : "func createAlert() -> Self.Alert",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createbutton()-qy86",
                        "title" : "func createButton() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createbutton()-3d182",
                "title" : "func createButton() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createcolorablerectangle()-20n6x",
                        "title" : "func createColorableRectangle() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createcolorablerectangle()-2zngl",
                "title" : "func createColorableRectangle() -> Self.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createcontainer()",
                "title" : "func createContainer() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createimageview()-2xr9m",
                        "title" : "func createImageView() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createimageview()-1ap9w",
                "title" : "func createImageView() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createpicker()-2oehi",
                        "title" : "func createPicker() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createpicker()-70yve",
                "title" : "func createPicker() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createpopovermenu()-9qdz1",
                        "title" : "func createPopoverMenu() -> Self.Menu",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createpopovermenu()-88em5",
                "title" : "func createPopoverMenu() -> Self.Menu",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createprogressbar()-3e2ys",
                        "title" : "func createProgressBar() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createprogressbar()-8rygo",
                "title" : "func createProgressBar() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createprogressspinner()-5ka0d",
                        "title" : "func createProgressSpinner() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createprogressspinner()-7impu",
                "title" : "func createProgressSpinner() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createscrollcontainer(for:)-96edi",
                        "title" : "func createScrollContainer(for: Self.Widget) -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createscrollcontainer(for:)-1q6bx",
                "title" : "func createScrollContainer(for: Self.Widget) -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createslider()-8h24z",
                        "title" : "func createSlider() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createslider()-24c8w",
                "title" : "func createSlider() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createsplitview(leadingchild:trailingchild:)-2deoe",
                        "title" : "func createSplitView(leadingChild: Self.Widget, trailingChild: Self.Widget) -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createsplitview(leadingchild:trailingchild:)-3iqgg",
                "title" : "func createSplitView(leadingChild: Self.Widget, trailingChild: Self.Widget) -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createswitch()-6cmnl",
                        "title" : "func createSwitch() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createswitch()-2f7xv",
                "title" : "func createSwitch() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createtable()-3i6jg",
                        "title" : "func createTable() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createtable()-3xtll",
                "title" : "func createTable() -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createtapgesturetarget(wrapping:gesture:)-1we4u",
                        "title" : "func createTapGestureTarget(wrapping: Self.Widget, gesture: TapGesture) -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createtapgesturetarget(wrapping:gesture:)-1ftxc",
                "title" : "func createTapGestureTarget(wrapping: Self.Widget, gesture: TapGesture) -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createtextfield()-41eqk",
                        "title" : "func createTextField() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createtextfield()-6jp68",
                "title" : "func createTextField() -> Self.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createtextview()",
                "title" : "func createTextView() -> Self.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createtextview(content:shouldwrap:)",
                "title" : "func createTextView(content: String, shouldWrap: Bool) -> Self.Widget",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/createtoggle()-2vmr9",
                        "title" : "func createToggle() -> Self.Widget",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createtoggle()-814v1",
                "title" : "func createToggle() -> Self.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/createwindow(withdefaultsize:)",
                "title" : "func createWindow(withDefaultSize: SIMD2<Int>?) -> Self.Window",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/dismissalert(_:window:)-40857",
                        "title" : "func dismissAlert(Self.Alert, window: Self.Window?)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/dismissalert(_:window:)-7rv6o",
                "title" : "func dismissAlert(Self.Alert, window: Self.Window?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/getcontent(oftextfield:)-nkan",
                        "title" : "func getContent(ofTextField: Self.Widget) -> String",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/getcontent(oftextfield:)-755gm",
                "title" : "func getContent(ofTextField: Self.Widget) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/iswindowprogrammaticallyresizable(_:)",
                "title" : "func isWindowProgrammaticallyResizable(Self.Window) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/naturalsize(of:)",
                "title" : "func naturalSize(of: Self.Widget) -> SIMD2<Int>",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/openexternalurl(_:)-5d30",
                        "title" : "func openExternalURL(URL) throws",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/openexternalurl(_:)-59ruj",
                "title" : "func openExternalURL(URL) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/removeallchildren(of:)",
                "title" : "func removeAllChildren(of: Self.Widget)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/removechild(_:from:)",
                "title" : "func removeChild(Self.Widget, from: Self.Widget)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/runinmainthread(action:)",
                "title" : "func runInMainThread(action: () -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/runmainloop(_:)",
                "title" : "func runMainLoop(() -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setapplicationmenu(_:)-37jhz",
                        "title" : "func setApplicationMenu([ResolvedMenu.Submenu])",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setapplicationmenu(_:)-9pswa",
                "title" : "func setApplicationMenu([ResolvedMenu.Submenu])",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setcells(oftable:to:withrowheights:)-4rma4",
                        "title" : "func setCells(ofTable: Self.Widget, to: [Self.Widget], withRowHeights: [Int])",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setcells(oftable:to:withrowheights:)-74ru1",
                "title" : "func setCells(ofTable: Self.Widget, to: [Self.Widget], withRowHeights: [Int])",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setchild(ofwindow:to:)",
                "title" : "func setChild(ofWindow: Self.Window, to: Self.Widget)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setcolor(ofcolorablerectangle:to:)-4cnbq",
                        "title" : "func setColor(ofColorableRectangle: Self.Widget, to: Color)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setcolor(ofcolorablerectangle:to:)-48g9t",
                "title" : "func setColor(ofColorableRectangle: Self.Widget, to: Color)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setcolumnlabels(oftable:to:environment:)-41tt3",
                        "title" : "func setColumnLabels(ofTable: Self.Widget, to: [String], environment: EnvironmentValues)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setcolumnlabels(oftable:to:environment:)-5znlm",
                "title" : "func setColumnLabels(ofTable: Self.Widget, to: [String], environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setcontent(oftextfield:to:)-2xhxj",
                        "title" : "func setContent(ofTextField: Self.Widget, to: String)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setcontent(oftextfield:to:)-21686",
                "title" : "func setContent(ofTextField: Self.Widget, to: String)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setcornerradius(of:to:)-4n6vz",
                        "title" : "func setCornerRadius(of: Self.Widget, to: Int)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setcornerradius(of:to:)-8esk3",
                "title" : "func setCornerRadius(of: Self.Widget, to: Int)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setincomingurlhandler(to:)-6830g",
                        "title" : "func setIncomingURLHandler(to: (URL) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setincomingurlhandler(to:)-5515d",
                "title" : "func setIncomingURLHandler(to: (URL) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setminimumsize(ofwindow:to:)",
                "title" : "func setMinimumSize(ofWindow: Self.Window, to: SIMD2<Int>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setposition(ofchildat:in:to:)",
                "title" : "func setPosition(ofChildAt: Int, in: Self.Widget, to: SIMD2<Int>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setresizability(ofwindow:to:)",
                "title" : "func setResizability(ofWindow: Self.Window, to: Bool)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofsplitview:to:)-9xvqr",
                        "title" : "func setResizeHandler(ofSplitView: Self.Widget, to: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofsplitview:to:)-8py41",
                "title" : "func setResizeHandler(ofSplitView: Self.Widget, to: () -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)",
                "title" : "func setResizeHandler(ofWindow: Self.Window, to: (SIMD2<Int>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setrootenvironmentchangehandler(to:)",
                "title" : "func setRootEnvironmentChangeHandler(to: () -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setrowcount(oftable:to:)-4bto0",
                        "title" : "func setRowCount(ofTable: Self.Widget, to: Int)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setrowcount(oftable:to:)-28yce",
                "title" : "func setRowCount(ofTable: Self.Widget, to: Int)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setscrollbarpresence(ofscrollcontainer:hasverticalscrollbar:hashorizontalscrollbar:)-8kvlc",
                        "title" : "func setScrollBarPresence(ofScrollContainer: Self.Widget, hasVerticalScrollBar: Bool, hasHorizontalScrollBar: Bool)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setscrollbarpresence(ofscrollcontainer:hasverticalscrollbar:hashorizontalscrollbar:)-htuo",
                "title" : "func setScrollBarPresence(ofScrollContainer: Self.Widget, hasVerticalScrollBar: Bool, hasHorizontalScrollBar: Bool)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setselectedoption(ofpicker:to:)-41904",
                        "title" : "func setSelectedOption(ofPicker: Self.Widget, to: Int?)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setselectedoption(ofpicker:to:)-2b5qx",
                "title" : "func setSelectedOption(ofPicker: Self.Widget, to: Int?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setsidebarwidthbounds(ofsplitview:minimum:maximum:)-4x2js",
                        "title" : "func setSidebarWidthBounds(ofSplitView: Self.Widget, minimum: Int, maximum: Int)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setsidebarwidthbounds(ofsplitview:minimum:maximum:)-7gspe",
                "title" : "func setSidebarWidthBounds(ofSplitView: Self.Widget, minimum: Int, maximum: Int)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setsize(of:to:)",
                "title" : "func setSize(of: Self.Widget, to: SIMD2<Int>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setsize(ofwindow:to:)",
                "title" : "func setSize(ofWindow: Self.Window, to: SIMD2<Int>)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setstate(ofswitch:to:)-u2ww",
                        "title" : "func setState(ofSwitch: Self.Widget, to: Bool)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setstate(ofswitch:to:)-70pzc",
                "title" : "func setState(ofSwitch: Self.Widget, to: Bool)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setstate(oftoggle:to:)-6sng1",
                        "title" : "func setState(ofToggle: Self.Widget, to: Bool)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setstate(oftoggle:to:)-5y479",
                "title" : "func setState(ofToggle: Self.Widget, to: Bool)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/settitle(ofwindow:to:)",
                "title" : "func setTitle(ofWindow: Self.Window, to: String)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/setvalue(ofslider:to:)-4476u",
                        "title" : "func setValue(ofSlider: Self.Widget, to: Double)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setvalue(ofslider:to:)-9cjjs",
                "title" : "func setValue(ofSlider: Self.Widget, to: Double)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/setwindowenvironmentchangehandler(of:to:)",
                "title" : "func setWindowEnvironmentChangeHandler(of: Self.Window, to: () -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/show(widget:)",
                "title" : "func show(widget: Self.Widget)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/show(window:)",
                "title" : "func show(window: Self.Window)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/showalert(_:window:responsehandler:)-2mwls",
                        "title" : "func showAlert(Self.Alert, window: Self.Window?, responseHandler: (Int) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/showalert(_:window:responsehandler:)-9iu82",
                "title" : "func showAlert(Self.Alert, window: Self.Window?, responseHandler: (Int) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/showopendialog(filedialogoptions:opendialogoptions:window:resulthandler:)-6din8",
                        "title" : "func showOpenDialog(fileDialogOptions: FileDialogOptions, openDialogOptions: OpenDialogOptions, window: Self.Window?, resultHandler: (DialogResult<[URL]>) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/showopendialog(filedialogoptions:opendialogoptions:window:resulthandler:)-8cgw",
                "title" : "func showOpenDialog(fileDialogOptions: FileDialogOptions, openDialogOptions: OpenDialogOptions, window: Self.Window?, resultHandler: (DialogResult<[URL]>) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/showpopovermenu(_:at:relativeto:closehandler:)-3p1ct",
                        "title" : "func showPopoverMenu(Self.Menu, at: SIMD2<Int>, relativeTo: Self.Widget, closeHandler: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/showpopovermenu(_:at:relativeto:closehandler:)-u69a",
                "title" : "func showPopoverMenu(Self.Menu, at: SIMD2<Int>, relativeTo: Self.Widget, closeHandler: () -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/showsavedialog(filedialogoptions:savedialogoptions:window:resulthandler:)-5zi9x",
                        "title" : "func showSaveDialog(fileDialogOptions: FileDialogOptions, saveDialogOptions: SaveDialogOptions, window: Self.Window?, resultHandler: (DialogResult<URL>) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/showsavedialog(filedialogoptions:savedialogoptions:window:resulthandler:)-6dk1p",
                "title" : "func showSaveDialog(fileDialogOptions: FileDialogOptions, saveDialogOptions: SaveDialogOptions, window: Self.Window?, resultHandler: (DialogResult<URL>) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/sidebarwidth(ofsplitview:)-6uxft",
                        "title" : "func sidebarWidth(ofSplitView: Self.Widget) -> Int",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/sidebarwidth(ofsplitview:)-3dz2f",
                "title" : "func sidebarWidth(ofSplitView: Self.Widget) -> Int",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/size(of:whendisplayedin:proposedframe:environment:)-8ajql",
                        "title" : "func size(of: String, whenDisplayedIn: Self.Widget, proposedFrame: SIMD2<Int>?, environment: EnvironmentValues) -> SIMD2<Int>",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/size(of:whendisplayedin:proposedframe:environment:)-7w5de",
                "title" : "func size(of: String, whenDisplayedIn: Self.Widget, proposedFrame: SIMD2<Int>?, environment: EnvironmentValues) -> SIMD2<Int>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appbackend\/size(ofwindow:)",
                "title" : "func size(ofWindow: Self.Window) -> SIMD2<Int>",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/tag(widget:as:)-643kf",
                        "title" : "func tag(widget: Self.Widget, as: String)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/tag(widget:as:)-6ohtd",
                "title" : "func tag(widget: Self.Widget, as: String)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatealert(_:title:actionlabels:environment:)-ty8j",
                        "title" : "func updateAlert(Self.Alert, title: String, actionLabels: [String], environment: EnvironmentValues)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatealert(_:title:actionlabels:environment:)-8tkm4",
                "title" : "func updateAlert(Self.Alert, title: String, actionLabels: [String], environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatebutton(_:label:action:environment:)-8warc",
                        "title" : "func updateButton(Self.Widget, label: String, action: () -> Void, environment: EnvironmentValues)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatebutton(_:label:action:environment:)-w9qd",
                "title" : "func updateButton(Self.Widget, label: String, action: () -> Void, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updateimageview(_:rgbadata:width:height:targetwidth:targetheight:datahaschanged:)-26vof",
                        "title" : "func updateImageView(Self.Widget, rgbaData: [UInt8], width: Int, height: Int, targetWidth: Int, targetHeight: Int, dataHasChanged: Bool)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updateimageview(_:rgbadata:width:height:targetwidth:targetheight:datahaschanged:)-69rlk",
                "title" : "func updateImageView(Self.Widget, rgbaData: [UInt8], width: Int, height: Int, targetWidth: Int, targetHeight: Int, dataHasChanged: Bool)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatepicker(_:options:environment:onchange:)-3viw7",
                        "title" : "func updatePicker(Self.Widget, options: [String], environment: EnvironmentValues, onChange: (Int?) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatepicker(_:options:environment:onchange:)-23us",
                "title" : "func updatePicker(Self.Widget, options: [String], environment: EnvironmentValues, onChange: (Int?) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatepopovermenu(_:content:environment:)-6cws8",
                        "title" : "func updatePopoverMenu(Self.Menu, content: ResolvedMenu, environment: EnvironmentValues)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatepopovermenu(_:content:environment:)-6o9qa",
                "title" : "func updatePopoverMenu(Self.Menu, content: ResolvedMenu, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updateprogressbar(_:progressfraction:environment:)-w578",
                        "title" : "func updateProgressBar(Self.Widget, progressFraction: Double?, environment: EnvironmentValues)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updateprogressbar(_:progressfraction:environment:)-6qqia",
                "title" : "func updateProgressBar(Self.Widget, progressFraction: Double?, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updateslider(_:minimum:maximum:decimalplaces:onchange:)-tkt2",
                        "title" : "func updateSlider(Self.Widget, minimum: Double, maximum: Double, decimalPlaces: Int, onChange: (Double) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updateslider(_:minimum:maximum:decimalplaces:onchange:)-8we73",
                "title" : "func updateSlider(Self.Widget, minimum: Double, maximum: Double, decimalPlaces: Int, onChange: (Double) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updateswitch(_:onchange:)-7nqm8",
                        "title" : "func updateSwitch(Self.Widget, onChange: (Bool) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updateswitch(_:onchange:)-9nbu9",
                "title" : "func updateSwitch(Self.Widget, onChange: (Bool) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetapgesturetarget(_:gesture:action:)-ls0d",
                        "title" : "func updateTapGestureTarget(Self.Widget, gesture: TapGesture, action: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetapgesturetarget(_:gesture:action:)-2rz1h",
                "title" : "func updateTapGestureTarget(Self.Widget, gesture: TapGesture, action: () -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetextfield(_:placeholder:environment:onchange:onsubmit:)-4hnsl",
                        "title" : "func updateTextField(Self.Widget, placeholder: String, environment: EnvironmentValues, onChange: (String) -> Void, onSubmit: () -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetextfield(_:placeholder:environment:onchange:onsubmit:)-43yir",
                "title" : "func updateTextField(Self.Widget, placeholder: String, environment: EnvironmentValues, onChange: (String) -> Void, onSubmit: () -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetextview(_:content:environment:)-7ym8g",
                        "title" : "func updateTextView(Self.Widget, content: String, environment: EnvironmentValues)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetextview(_:content:environment:)-3p9mh",
                "title" : "func updateTextView(Self.Widget, content: String, environment: EnvironmentValues)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetoggle(_:label:onchange:)-7xe03",
                        "title" : "func updateToggle(Self.Widget, label: String, onChange: (Bool) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "AppBackend Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/appbackend\/updatetoggle(_:label:onchange:)-4usuo",
                "title" : "func updateToggle(Self.Widget, label: String, onChange: (Bool) -> Void)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/appbackend",
            "title" : "AppBackend",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/doubleconvertible\/init(_:)",
                "title" : "init(Double)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/doubleconvertible\/doublerepresentation",
                "title" : "var doubleRepresentation: Double",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/doubleconvertible",
            "title" : "DoubleConvertible",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/dynamicproperty\/update(with:previousvalue:)",
                "title" : "func update(with: EnvironmentValues, previousValue: Self?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/dynamicproperty",
            "title" : "DynamicProperty",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentkey\/value",
                "title" : "Value",
                "type" : "associatedtype"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentkey\/defaultvalue",
                "title" : "static var defaultValue: Self.Value",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/environmentkey",
            "title" : "EnvironmentKey",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnodetransformer\/return",
                "title" : "Return",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnodetransformer\/transform(node:)",
                "title" : "func transform<V, Backend>(node: ViewGraphNode<V, Backend>) -> Self.Return",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnodetransformer",
            "title" : "ErasedViewGraphNodeTransformer",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/publishedmarkerprotocol",
            "title" : "PublishedMarkerProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scene\/node",
                "title" : "Node",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scene\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scene\/commands(_:)",
                "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/scene",
            "title" : "Scene",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenegraphnode\/nodescene",
                "title" : "NodeScene",
                "type" : "associatedtype"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenegraphnode\/init(from:backend:environment:)",
                "title" : "init<Backend>(from: Self.NodeScene, backend: Backend, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/scenegraphnode\/update(_:backend:environment:)",
                "title" : "func update<Backend>(Self.NodeScene?, backend: Backend, environment: EnvironmentValues)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/scenegraphnode",
            "title" : "SceneGraphNode",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowcontent\/rowcontent",
                "title" : "RowContent",
                "type" : "associatedtype"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowcontent\/rowvalue",
                "title" : "RowValue",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowcontent\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowcontent\/content(for:)",
                "title" : "func content(for: Self.RowValue) -> Self.RowContent",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tablerowcontent",
            "title" : "TableRowContent",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertaction\/action",
                "title" : "var action: () -> Void",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertaction\/label",
                "title" : "var label: String",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertaction\/ok",
                "title" : "static let ok: AlertAction",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/alertaction",
            "title" : "AlertAction",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/block",
                "title" : "AlertActionsBuilder.Block",
                "type" : "struct"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildeither(first:)",
                "title" : "static func buildEither(first: [AlertAction]) -> AlertActionsBuilder.Block",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildeither(second:)",
                "title" : "static func buildEither(second: [AlertAction]) -> AlertActionsBuilder.Block",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildoptional(_:)",
                "title" : "static func buildOptional([AlertAction]?) -> AlertActionsBuilder.Block",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildpartialblock(accumulated:next:)-7pfj8",
                "title" : "static func buildPartialBlock(accumulated: [AlertAction], next: AlertActionsBuilder.Block) -> [AlertAction]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildpartialblock(accumulated:next:)-9uv5r",
                "title" : "static func buildPartialBlock(accumulated: [AlertAction], next: Button) -> [AlertAction]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildpartialblock(first:)-3g9oq",
                "title" : "static func buildPartialBlock(first: Button) -> [AlertAction]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder\/buildpartialblock(first:)-46b4k",
                "title" : "static func buildPartialBlock(first: AlertActionsBuilder.Block) -> [AlertAction]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/alertactionsbuilder",
            "title" : "AlertActionsBuilder",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/init(horizontal:vertical:)",
                "title" : "init(horizontal: HorizontalAlignment, vertical: VerticalAlignment)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/horizontal",
                "title" : "var horizontal: HorizontalAlignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/vertical",
                "title" : "var vertical: VerticalAlignment",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/position(ofchild:in:)",
                "title" : "func position(ofChild: SIMD2<Int>, in: SIMD2<Int>) -> SIMD2<Int>",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/bottom",
                "title" : "static let bottom: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/bottomleading",
                "title" : "static let bottomLeading: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/bottomtrailing",
                "title" : "static let bottomTrailing: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/center",
                "title" : "static let center: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/leading",
                "title" : "static let leading: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/top",
                "title" : "static let top: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/topleading",
                "title" : "static let topLeading: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/toptrailing",
                "title" : "static let topTrailing: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/alignment\/trailing",
                "title" : "static let trailing: Alignment",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/alignment\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/alignment\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/alignment",
            "title" : "Alignment",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyview\/init(_:)",
                "title" : "init(any View)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/anyview\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/anyview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/anyview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/anyview",
            "title" : "AnyView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appmetadata\/init(identifier:version:additionalmetadata:)",
                "title" : "init(identifier: String, version: String, additionalMetadata: [String : Any])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appmetadata\/additionalmetadata",
                "title" : "var additionalMetadata: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appmetadata\/identifier",
                "title" : "var identifier: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/appmetadata\/version",
                "title" : "var version: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/appmetadata",
            "title" : "AppMetadata",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandmenu\/init(_:content:)",
                "title" : "init(String, content: () -> [MenuItem])",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/commandmenu",
            "title" : "CommandMenu",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commands\/overlayed(with:)",
                "title" : "func overlayed(with: Commands) -> Commands",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commands\/empty",
                "title" : "static var empty: Commands",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/commands",
            "title" : "Commands",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsbuilder\/buildblock(_:)",
                "title" : "static func buildBlock(CommandMenu...) -> Commands",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/commandsbuilder",
            "title" : "CommandsBuilder",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifier\/init(content:newcommands:)",
                "title" : "init(content: Content, newCommands: Commands)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifier\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifier\/content",
                "title" : "var content: Content",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/commandsmodifier\/node",
                "title" : "CommandsModifier.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/commandsmodifier\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/commandsmodifier\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/commandsmodifier",
            "title" : "CommandsModifier",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/contenttype\/init(name:mimetypes:fileextensions:)",
                "title" : "init(name: String, mimeTypes: [String], fileExtensions: [String])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/contenttype\/fileextensions",
                "title" : "var fileExtensions: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/contenttype\/mimetypes",
                "title" : "var mimeTypes: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/contenttype\/name",
                "title" : "var name: String",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/contenttype\/html",
                "title" : "static let html: ContentType",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/contenttype",
            "title" : "ContentType",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/divider\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/divider\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/divider\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/divider\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/divider",
            "title" : "Divider",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptytablerowcontent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptytablerowcontent\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptytablerowcontent\/content(for:)",
                "title" : "func content(for: RowValue) -> EmptyView",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/emptytablerowcontent\/rowcontent",
                "title" : "EmptyTableRowContent.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/emptytablerowcontent",
            "title" : "EmptyTableRowContent",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environment\/init(_:)",
                "title" : "init(KeyPath<EnvironmentValues, Value>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environment\/wrappedvalue",
                "title" : "var wrappedValue: Value",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environment\/update(with:previousvalue:)",
                "title" : "func update(with: EnvironmentValues, previousValue: Environment<Value>?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/environment",
            "title" : "Environment",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/choosefile",
                "title" : "var chooseFile: PresentSingleFileOpenDialogAction",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/choosefilesavedestination",
                "title" : "var chooseFileSaveDestination: PresentFileSaveDialogAction",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/colorscheme",
                "title" : "var colorScheme: ColorScheme",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/font",
                "title" : "var font: Font",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/foregroundcolor",
                "title" : "var foregroundColor: Color?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/layoutalignment",
                "title" : "var layoutAlignment: StackAlignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/layoutorientation",
                "title" : "var layoutOrientation: Orientation",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/layoutspacing",
                "title" : "var layoutSpacing: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/multilinetextalignment",
                "title" : "var multilineTextAlignment: HorizontalAlignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/onsubmit",
                "title" : "var onSubmit: (() -> Void)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/openurl",
                "title" : "var openURL: OpenURLAction",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/presentalert",
                "title" : "var presentAlert: PresentAlertAction",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/suggestedforegroundcolor",
                "title" : "var suggestedForegroundColor: Color",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/windowscalefactor",
                "title" : "var windowScaleFactor: Int",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/with(_:_:)",
                "title" : "func with<T>(WritableKeyPath<EnvironmentValues, T>, T) -> EnvironmentValues",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/environmentvalues\/subscript(_:)",
                "title" : "subscript<T>(T.Type) -> T.Value",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/environmentvalues",
            "title" : "EnvironmentValues",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/init(for:backend:snapshot:environment:)",
                "title" : "init<V, Backend>(for: V, backend: Backend, snapshot: ViewGraphSnapshotter.NodeSnapshot?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/init(wrapping:)-9jp0a",
                "title" : "init<V>(wrapping: AnyViewGraphNode<V>)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/init(wrapping:)-9xgtd",
                "title" : "init<V, Backend>(wrapping: ViewGraphNode<V, Backend>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/backendtype",
                "title" : "var backendType: any AppBackend.Type",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/getwidget",
                "title" : "var getWidget: () -> AnyWidget",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/node",
                "title" : "var node: Any",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/updatewithnewview",
                "title" : "var updateWithNewView: (Any?, SIMD2<Int>, EnvironmentValues, Bool) -> (viewTypeMatched: Bool, size: ViewUpdateResult)",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/viewtype",
                "title" : "var viewType: any View.Type",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode\/transform(with:)",
                "title" : "func transform<R>(with: any ErasedViewGraphNodeTransformer<R>) -> R",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/erasedviewgraphnode",
            "title" : "ErasedViewGraphNode",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/exprlocation\/init(line:column:)",
                "title" : "init(line: Int, column: Int)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/exprlocation\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/exprlocation\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/exprlocation",
            "title" : "ExprLocation",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filedialogoptions\/allowothercontenttypes",
                "title" : "var allowOtherContentTypes: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filedialogoptions\/allowedcontenttypes",
                "title" : "var allowedContentTypes: [ContentType]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filedialogoptions\/defaultbuttonlabel",
                "title" : "var defaultButtonLabel: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filedialogoptions\/initialdirectory",
                "title" : "var initialDirectory: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filedialogoptions\/showhiddenfiles",
                "title" : "var showHiddenFiles: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filedialogoptions\/title",
                "title" : "var title: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/filedialogoptions",
            "title" : "FileDialogOptions",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/group\/init(content:)",
                "title" : "init(content: () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/group\/body",
                "title" : "var body: Content",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/group\/aswidget(_:backend:)-dxqd",
                "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/group\/update(_:children:proposedsize:environment:backend:dryrun:)-84905",
                "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/aswidget(_:backend:)-99pbh",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/group\/update(_:children:proposedsize:environment:backend:dryrun:)-5w9zm",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/group\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/group",
            "title" : "Group",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/init(_:)-80rbw",
                "title" : "init(any View)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/init(_:)-85pqu",
                "title" : "init(() -> some View)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/hotreloadableview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/hotreloadableview",
            "title" : "HotReloadableView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menu\/init(_:items:)",
                "title" : "init(String, items: () -> [MenuItem])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menu\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menu\/items",
                "title" : "var items: [MenuItem]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menu\/label",
                "title" : "var label: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/menu\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/menu\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/menu",
            "title" : "Menu",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/block",
                "title" : "MenuItemsBuilder.Block",
                "type" : "struct"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildeither(first:)",
                "title" : "static func buildEither(first: [MenuItem]) -> MenuItemsBuilder.Block",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildeither(second:)",
                "title" : "static func buildEither(second: [MenuItem]) -> MenuItemsBuilder.Block",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildoptional(_:)",
                "title" : "static func buildOptional([MenuItem]?) -> MenuItemsBuilder.Block",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(accumulated:next:)-1x91u",
                "title" : "static func buildPartialBlock(accumulated: [MenuItem], next: MenuItemsBuilder.Block) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(accumulated:next:)-4rtxw",
                "title" : "static func buildPartialBlock<Items>(accumulated: [MenuItem], next: ForEach<Items, [MenuItem]>) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(accumulated:next:)-4vrq0",
                "title" : "static func buildPartialBlock(accumulated: [MenuItem], next: Menu) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(accumulated:next:)-955oh",
                "title" : "static func buildPartialBlock(accumulated: [MenuItem], next: Button) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(accumulated:next:)-9nknk",
                "title" : "static func buildPartialBlock(accumulated: [MenuItem], next: Text) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(first:)-3o5jz",
                "title" : "static func buildPartialBlock(first: MenuItemsBuilder.Block) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(first:)-4qy1x",
                "title" : "static func buildPartialBlock(first: Text) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(first:)-5u68e",
                "title" : "static func buildPartialBlock(first: Button) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(first:)-8coi5",
                "title" : "static func buildPartialBlock(first: Menu) -> [MenuItem]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder\/buildpartialblock(first:)-9ic8l",
                "title" : "static func buildPartialBlock<Items>(first: ForEach<Items, [MenuItem]>) -> [MenuItem]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/menuitemsbuilder",
            "title" : "MenuItemsBuilder",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/opendialogoptions\/allowmultipleselections",
                "title" : "var allowMultipleSelections: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/opendialogoptions\/allowselectingdirectories",
                "title" : "var allowSelectingDirectories: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/opendialogoptions\/allowselectingfiles",
                "title" : "var allowSelectingFiles: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/opendialogoptions",
            "title" : "OpenDialogOptions",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/openurlaction\/callasfunction(_:)",
                "title" : "func callAsFunction(URL)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/openurlaction",
            "title" : "OpenURLAction",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/preferencevalues\/init(merging:)",
                "title" : "init(merging: [PreferenceValues])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/preferencevalues\/init(onopenurl:)",
                "title" : "init(onOpenURL: ((URL) -> Void)?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/preferencevalues\/onopenurl",
                "title" : "var onOpenURL: ((URL) -> Void)?",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/preferencevalues\/default",
                "title" : "static let `default`: PreferenceValues",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/preferencevalues",
            "title" : "PreferenceValues",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/presentalertaction\/callasfunction(_:actions:)",
                "title" : "func callAsFunction(String, actions: () -> [AlertAction]) async -> Int",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/presentalertaction",
            "title" : "PresentAlertAction",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/presentfilesavedialogaction\/callasfunction(title:message:defaultbuttonlabel:initialdirectory:showhiddenfiles:namefieldlabel:defaultfilename:)",
                "title" : "func callAsFunction(title: String, message: String, defaultButtonLabel: String, initialDirectory: URL?, showHiddenFiles: Bool, nameFieldLabel: String?, defaultFileName: String?) async -> URL?",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/presentfilesavedialogaction",
            "title" : "PresentFileSaveDialogAction",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/presentsinglefileopendialogaction\/callasfunction(title:message:defaultbuttonlabel:initialdirectory:showhiddenfiles:allowselectingfiles:allowselectingdirectories:)",
                "title" : "func callAsFunction(title: String, message: String, defaultButtonLabel: String, initialDirectory: URL?, showHiddenFiles: Bool, allowSelectingFiles: Bool, allowSelectingDirectories: Bool) async -> URL?",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/presentsinglefileopendialogaction",
            "title" : "PresentSingleFileOpenDialogAction",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:)-2zod5",
                "title" : "init(Label)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:)-70svx",
                "title" : "init(String)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:)-899t0",
                "title" : "init(Progress)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:_:)-4x5pv",
                "title" : "init(String, Progress)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:_:)-8uqta",
                "title" : "init(Label, Progress)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:value:)-5992i",
                "title" : "init<Value>(String, value: Value?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(_:value:)-6nw6i",
                "title" : "init<Value>(Label, value: Value?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/init(value:)",
                "title" : "init<Value>(value: Value?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/progressview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/progressview\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/progressview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/progressview",
            "title" : "ProgressView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/submenu\/init(label:content:)",
                    "title" : "init(label: String, content: ResolvedMenu)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/submenu\/content",
                    "title" : "var content: ResolvedMenu",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/submenu\/label",
                    "title" : "var label: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/submenu",
                "title" : "ResolvedMenu.Submenu",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/init(items:)",
                "title" : "init(items: [ResolvedMenu.Item])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/items",
                "title" : "var items: [ResolvedMenu.Item]",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/item\/button(_:_:)",
                    "title" : "case button(String, (() -> Void)?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/item\/submenu(_:)",
                    "title" : "case submenu(ResolvedMenu.Submenu)",
                    "type" : "case"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/resolvedmenu\/item",
                "title" : "ResolvedMenu.Item",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/resolvedmenu",
            "title" : "ResolvedMenu",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/savedialogoptions\/defaultfilename",
                "title" : "var defaultFileName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/savedialogoptions\/namefieldlabel",
                "title" : "var nameFieldLabel: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/savedialogoptions",
            "title" : "SaveDialogOptions",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock()",
                "title" : "static func buildBlock() -> EmptyTableRowContent<RowValue>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:)",
                "title" : "static func buildBlock<Content0>(TableColumn<RowValue, Content0>) -> TupleTableRowContent1<RowValue, Content0>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:)",
                "title" : "static func buildBlock<Content0, Content1>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>) -> TupleTableRowContent2<RowValue, Content0, Content1>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>) -> TupleTableRowContent3<RowValue, Content0, Content1, Content2>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>) -> TupleTableRowContent4<RowValue, Content0, Content1, Content2, Content3>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3, Content4>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>) -> TupleTableRowContent5<RowValue, Content0, Content1, Content2, Content3, Content4>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3, Content4, Content5>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>) -> TupleTableRowContent6<RowValue, Content0, Content1, Content2, Content3, Content4, Content5>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3, Content4, Content5, Content6>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>) -> TupleTableRowContent7<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>, TableColumn<RowValue, Content7>) -> TupleTableRowContent8<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7, Content8>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>, TableColumn<RowValue, Content7>, TableColumn<RowValue, Content8>) -> TupleTableRowContent9<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7, Content8>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tablerowbuilder\/buildblock(_:_:_:_:_:_:_:_:_:_:)",
                "title" : "static func buildBlock<Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7, Content8, Content9>(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>, TableColumn<RowValue, Content7>, TableColumn<RowValue, Content8>, TableColumn<RowValue, Content9>) -> TupleTableRowContent10<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7, Content8, Content9>",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tablerowbuilder",
            "title" : "TableRowBuilder",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tapgesture\/longpress",
                "title" : "static let longPress: TapGesture",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tapgesture\/primary",
                "title" : "static let primary: TapGesture",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tapgesture\/secondary",
                "title" : "static let secondary: TapGesture",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tapgesture\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tapgesture\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tapgesture",
            "title" : "TapGesture",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene10\/init(_:_:_:_:_:_:_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8, Scene9)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene10\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene10\/node",
                "title" : "TupleScene10.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene10\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene10\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene10",
            "title" : "TupleScene10",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene2\/init(_:_:)",
                "title" : "init(Scene0, Scene1)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene2\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene2\/node",
                "title" : "TupleScene2.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene2\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene2\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene2",
            "title" : "TupleScene2",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene3\/init(_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene3\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene3\/node",
                "title" : "TupleScene3.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene3\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene3\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene3",
            "title" : "TupleScene3",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene4\/init(_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene4\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene4\/node",
                "title" : "TupleScene4.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene4\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene4\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene4",
            "title" : "TupleScene4",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene5\/init(_:_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3, Scene4)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene5\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene5\/node",
                "title" : "TupleScene5.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene5\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene5\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene5",
            "title" : "TupleScene5",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene6\/init(_:_:_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene6\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene6\/node",
                "title" : "TupleScene6.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene6\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene6\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene6",
            "title" : "TupleScene6",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene7\/init(_:_:_:_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene7\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene7\/node",
                "title" : "TupleScene7.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene7\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene7\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene7",
            "title" : "TupleScene7",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene8\/init(_:_:_:_:_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene8\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene8\/node",
                "title" : "TupleScene8.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene8\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene8\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene8",
            "title" : "TupleScene8",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene9\/init(_:_:_:_:_:_:_:_:_:)",
                "title" : "init(Scene0, Scene1, Scene2, Scene3, Scene4, Scene5, Scene6, Scene7, Scene8)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene9\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tuplescene9\/node",
                "title" : "TupleScene9.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tuplescene9\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tuplescene9\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tuplescene9",
            "title" : "TupleScene9",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent1\/init(_:)",
                "title" : "init(TableColumn<RowValue, Content0>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent1\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent1\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent1\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent1<RowValue, Content0>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent1\/rowcontent",
                "title" : "TupleTableRowContent1.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent1",
            "title" : "TupleTableRowContent1",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/init(_:_:_:_:_:_:_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>, TableColumn<RowValue, Content7>, TableColumn<RowValue, Content8>, TableColumn<RowValue, Content9>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column4",
                "title" : "var column4: TableColumn<RowValue, Content4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column5",
                "title" : "var column5: TableColumn<RowValue, Content5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column6",
                "title" : "var column6: TableColumn<RowValue, Content6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column7",
                "title" : "var column7: TableColumn<RowValue, Content7>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column8",
                "title" : "var column8: TableColumn<RowValue, Content8>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/column9",
                "title" : "var column9: TableColumn<RowValue, Content9>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent10<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7, Content8, Content9>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10\/rowcontent",
                "title" : "TupleTableRowContent10.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent10",
            "title" : "TupleTableRowContent10",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2\/init(_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent2<RowValue, Content0, Content1>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2\/rowcontent",
                "title" : "TupleTableRowContent2.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent2",
            "title" : "TupleTableRowContent2",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/init(_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent3<RowValue, Content0, Content1, Content2>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3\/rowcontent",
                "title" : "TupleTableRowContent3.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent3",
            "title" : "TupleTableRowContent3",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/init(_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent4<RowValue, Content0, Content1, Content2, Content3>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4\/rowcontent",
                "title" : "TupleTableRowContent4.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent4",
            "title" : "TupleTableRowContent4",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/init(_:_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/column4",
                "title" : "var column4: TableColumn<RowValue, Content4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent5<RowValue, Content0, Content1, Content2, Content3, Content4>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5\/rowcontent",
                "title" : "TupleTableRowContent5.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent5",
            "title" : "TupleTableRowContent5",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/init(_:_:_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/column4",
                "title" : "var column4: TableColumn<RowValue, Content4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/column5",
                "title" : "var column5: TableColumn<RowValue, Content5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent6<RowValue, Content0, Content1, Content2, Content3, Content4, Content5>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6\/rowcontent",
                "title" : "TupleTableRowContent6.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent6",
            "title" : "TupleTableRowContent6",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/init(_:_:_:_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column4",
                "title" : "var column4: TableColumn<RowValue, Content4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column5",
                "title" : "var column5: TableColumn<RowValue, Content5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/column6",
                "title" : "var column6: TableColumn<RowValue, Content6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent7<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7\/rowcontent",
                "title" : "TupleTableRowContent7.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent7",
            "title" : "TupleTableRowContent7",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/init(_:_:_:_:_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>, TableColumn<RowValue, Content7>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column4",
                "title" : "var column4: TableColumn<RowValue, Content4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column5",
                "title" : "var column5: TableColumn<RowValue, Content5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column6",
                "title" : "var column6: TableColumn<RowValue, Content6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/column7",
                "title" : "var column7: TableColumn<RowValue, Content7>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent8<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8\/rowcontent",
                "title" : "TupleTableRowContent8.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent8",
            "title" : "TupleTableRowContent8",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/init(_:_:_:_:_:_:_:_:_:)",
                "title" : "init(TableColumn<RowValue, Content0>, TableColumn<RowValue, Content1>, TableColumn<RowValue, Content2>, TableColumn<RowValue, Content3>, TableColumn<RowValue, Content4>, TableColumn<RowValue, Content5>, TableColumn<RowValue, Content6>, TableColumn<RowValue, Content7>, TableColumn<RowValue, Content8>)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column0",
                "title" : "var column0: TableColumn<RowValue, Content0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column1",
                "title" : "var column1: TableColumn<RowValue, Content1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column2",
                "title" : "var column2: TableColumn<RowValue, Content2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column3",
                "title" : "var column3: TableColumn<RowValue, Content3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column4",
                "title" : "var column4: TableColumn<RowValue, Content4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column5",
                "title" : "var column5: TableColumn<RowValue, Content5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column6",
                "title" : "var column6: TableColumn<RowValue, Content6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column7",
                "title" : "var column7: TableColumn<RowValue, Content7>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/column8",
                "title" : "var column8: TableColumn<RowValue, Content8>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/labels",
                "title" : "var labels: [String]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/content(for:)",
                "title" : "func content(for: RowValue) -> TupleTableRowContent9<RowValue, Content0, Content1, Content2, Content3, Content4, Content5, Content6, Content7, Content8>.RowContent",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9\/rowcontent",
                "title" : "TupleTableRowContent9.RowContent",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupletablerowcontent9",
            "title" : "TupleTableRowContent9",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview1\/init(_:)",
                "title" : "init(View0)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview1\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview1\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview1\/content",
                "title" : "TupleView1.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview1\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview1\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview1",
            "title" : "TupleView1",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/init(_:_:_:_:_:_:_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3, View4, View5, View6, View7, View8, View9)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view4",
                "title" : "var view4: View4",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view5",
                "title" : "var view5: View5",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view6",
                "title" : "var view6: View6",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view7",
                "title" : "var view7: View7",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view8",
                "title" : "var view8: View8",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view9",
                "title" : "var view9: View9",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/content",
                "title" : "TupleView10.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview10\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview10\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview10",
            "title" : "TupleView10",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview2\/init(_:_:)",
                "title" : "init(View0, View1)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview2\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview2\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview2\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview2\/content",
                "title" : "TupleView2.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview2\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview2\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview2",
            "title" : "TupleView2",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/init(_:_:_:)",
                "title" : "init(View0, View1, View2)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/content",
                "title" : "TupleView3.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview3\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview3\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview3",
            "title" : "TupleView3",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/init(_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/content",
                "title" : "TupleView4.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview4\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview4\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview4",
            "title" : "TupleView4",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/init(_:_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3, View4)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/view4",
                "title" : "var view4: View4",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/content",
                "title" : "TupleView5.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview5\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview5\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview5",
            "title" : "TupleView5",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/init(_:_:_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3, View4, View5)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view4",
                "title" : "var view4: View4",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view5",
                "title" : "var view5: View5",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/content",
                "title" : "TupleView6.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview6\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview6\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview6",
            "title" : "TupleView6",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/init(_:_:_:_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3, View4, View5, View6)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view4",
                "title" : "var view4: View4",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view5",
                "title" : "var view5: View5",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view6",
                "title" : "var view6: View6",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/content",
                "title" : "TupleView7.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview7\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview7\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview7",
            "title" : "TupleView7",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/init(_:_:_:_:_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3, View4, View5, View6, View7)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view4",
                "title" : "var view4: View4",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view5",
                "title" : "var view5: View5",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view6",
                "title" : "var view6: View6",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view7",
                "title" : "var view7: View7",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/content",
                "title" : "TupleView8.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview8\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview8\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview8",
            "title" : "TupleView8",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/init(_:_:_:_:_:_:_:_:_:)",
                "title" : "init(View0, View1, View2, View3, View4, View5, View6, View7, View8)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/body",
                "title" : "var body: EmptyView",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view0",
                "title" : "var view0: View0",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view1",
                "title" : "var view1: View1",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view2",
                "title" : "var view2: View2",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view3",
                "title" : "var view3: View3",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view4",
                "title" : "var view4: View4",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view5",
                "title" : "var view5: View5",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view6",
                "title" : "var view6: View6",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view7",
                "title" : "var view7: View7",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view8",
                "title" : "var view8: View8",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/content",
                "title" : "TupleView9.Content",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/aswidget(_:backend:)",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleview9\/update(_:children:proposedsize:environment:backend:dryrun:)",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleview9\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleview9",
            "title" : "TupleView9",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1\/init(_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren1",
            "title" : "TupleViewChildren1",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/init(_:_:_:_:_:_:_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, Child4, Child5, Child6, Child7, Child8, Child9, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child4",
                "title" : "var child4: AnyViewGraphNode<Child4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child5",
                "title" : "var child5: AnyViewGraphNode<Child5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child6",
                "title" : "var child6: AnyViewGraphNode<Child6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child7",
                "title" : "var child7: AnyViewGraphNode<Child7>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child8",
                "title" : "var child8: AnyViewGraphNode<Child8>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/child9",
                "title" : "var child9: AnyViewGraphNode<Child9>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren10",
            "title" : "TupleViewChildren10",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/init(_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren2",
            "title" : "TupleViewChildren2",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/init(_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren3",
            "title" : "TupleViewChildren3",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/init(_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren4",
            "title" : "TupleViewChildren4",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/init(_:_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, Child4, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/child4",
                "title" : "var child4: AnyViewGraphNode<Child4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren5",
            "title" : "TupleViewChildren5",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/init(_:_:_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, Child4, Child5, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/child4",
                "title" : "var child4: AnyViewGraphNode<Child4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/child5",
                "title" : "var child5: AnyViewGraphNode<Child5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren6",
            "title" : "TupleViewChildren6",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/init(_:_:_:_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, Child4, Child5, Child6, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child4",
                "title" : "var child4: AnyViewGraphNode<Child4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child5",
                "title" : "var child5: AnyViewGraphNode<Child5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/child6",
                "title" : "var child6: AnyViewGraphNode<Child6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren7",
            "title" : "TupleViewChildren7",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/init(_:_:_:_:_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, Child4, Child5, Child6, Child7, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child4",
                "title" : "var child4: AnyViewGraphNode<Child4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child5",
                "title" : "var child5: AnyViewGraphNode<Child5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child6",
                "title" : "var child6: AnyViewGraphNode<Child6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/child7",
                "title" : "var child7: AnyViewGraphNode<Child7>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren8",
            "title" : "TupleViewChildren8",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/init(_:_:_:_:_:_:_:_:_:backend:snapshots:environment:)",
                "title" : "init<Backend>(Child0, Child1, Child2, Child3, Child4, Child5, Child6, Child7, Child8, backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child0",
                "title" : "var child0: AnyViewGraphNode<Child0>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child1",
                "title" : "var child1: AnyViewGraphNode<Child1>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child2",
                "title" : "var child2: AnyViewGraphNode<Child2>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child3",
                "title" : "var child3: AnyViewGraphNode<Child3>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child4",
                "title" : "var child4: AnyViewGraphNode<Child4>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child5",
                "title" : "var child5: AnyViewGraphNode<Child5>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child6",
                "title" : "var child6: AnyViewGraphNode<Child6>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child7",
                "title" : "var child7: AnyViewGraphNode<Child7>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/child8",
                "title" : "var child8: AnyViewGraphNode<Child8>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/erasednodes",
                "title" : "var erasedNodes: [ErasedViewGraphNode]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/widgets",
                "title" : "var widgets: [AnyWidget]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/widgets(for:)",
                    "title" : "func widgets<Backend>(for: Backend) -> [Backend.Widget]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9\/viewgraphnodechildren-implementations",
                "title" : "ViewGraphNodeChildren Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/tupleviewchildren9",
            "title" : "TupleViewChildren9",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/nodesnapshot\/debugdescription",
                    "title" : "var debugDescription: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/nodesnapshot\/isvalid(for:)",
                    "title" : "func isValid<V>(for: V.Type) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/nodesnapshot\/restore(to:)",
                    "title" : "func restore<V>(to: V)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/nodesnapshot\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/nodesnapshot\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/nodesnapshot",
                "title" : "ViewGraphSnapshotter.NodeSnapshot",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/transform(node:)",
                "title" : "func transform<U, Backend>(node: ViewGraphNode<U, Backend>) -> ViewGraphSnapshotter.NodeSnapshot",
                "type" : "method"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/name(of:)",
                "title" : "static func name<V>(of: V.Type) -> String",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter\/snapshot(of:)",
                "title" : "static func snapshot<V>(of: AnyViewGraphNode<V>) -> ViewGraphSnapshotter.NodeSnapshot",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter",
            "title" : "ViewGraphSnapshotter",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)",
                "title" : "init(fixedSize: SIMD2<Int>)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)",
                "title" : "init(size: SIMD2<Int>, idealSize: SIMD2<Int>, idealWidthForProposedHeight: Int?, idealHeightForProposedWidth: Int?, minimumWidth: Int, minimumHeight: Int, maximumWidth: Double?, maximumHeight: Double?, participateInStackLayoutsWhenEmpty: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth",
                "title" : "var idealHeightForProposedWidth: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/idealsize",
                "title" : "var idealSize: SIMD2<Int>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight",
                "title" : "var idealWidthForProposedHeight: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/maximumheight",
                "title" : "var maximumHeight: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/maximumwidth",
                "title" : "var maximumWidth: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/minimumheight",
                "title" : "var minimumHeight: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/minimumwidth",
                "title" : "var minimumWidth: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty",
                "title" : "var participateInStackLayoutsWhenEmpty: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/size",
                "title" : "var size: SIMD2<Int>",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/empty",
                "title" : "static let empty: ViewSize",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewsize\/hidden",
                "title" : "static let hidden: ViewSize",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/viewsize\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/viewsize\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewsize",
            "title" : "ViewSize",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewupdateresult\/init(size:childresults:preferencesoverlay:)",
                "title" : "init(size: ViewSize, childResults: [ViewUpdateResult], preferencesOverlay: PreferenceValues?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewupdateresult\/init(size:preferences:)",
                "title" : "init(size: ViewSize, preferences: PreferenceValues)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewupdateresult\/participatesinstacklayouts",
                "title" : "var participatesInStackLayouts: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewupdateresult\/preferences",
                "title" : "var preferences: PreferenceValues",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewupdateresult\/size",
                "title" : "var size: ViewSize",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/viewupdateresult\/leafview(size:)",
                "title" : "static func leafView(size: ViewSize) -> ViewUpdateResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/viewupdateresult",
            "title" : "ViewUpdateResult",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroup\/init(_:_:)",
                "title" : "init(String?, () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroup\/commands",
                "title" : "var commands: Commands",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroup\/defaultsize(width:height:)",
                "title" : "func defaultSize(width: Int, height: Int) -> WindowGroup<Content>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroup\/windowresizability(_:)",
                "title" : "func windowResizability(WindowResizability) -> WindowGroup<Content>",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowgroup\/node",
                "title" : "WindowGroup.Node",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/windowgroup\/commands(_:)",
                    "title" : "func commands(() -> Commands) -> CommandsModifier<Self>",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/windowgroup\/scene-implementations",
                "title" : "Scene Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/windowgroup",
            "title" : "WindowGroup",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/zstack\/init(alignment:content:)",
                "title" : "init(alignment: Alignment, content: () -> Content)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/zstack\/alignment",
                "title" : "var alignment: Alignment",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/zstack\/body",
                "title" : "var body: Content",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/zstack\/aswidget(_:backend:)-71n71",
                "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/zstack\/update(_:children:proposedsize:environment:backend:dryrun:)-2yccq",
                "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/alert(_:ispresented:actions:)",
                    "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/aswidget(_:backend:)-6ij7f",
                    "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/background(_:)",
                    "title" : "func background<Background>(Background) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/bold()",
                    "title" : "func bold() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/children(backend:snapshots:environment:)",
                    "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/cornerradius(_:)",
                    "title" : "func cornerRadius(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/font(_:)",
                    "title" : "func font(Font) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/frame(width:height:alignment:)",
                    "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/if(_:apply:)",
                    "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/iflet(_:apply:)",
                    "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/layoutablechildren(backend:children:)",
                    "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/onappear(perform:)",
                    "title" : "func onAppear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/onchange(of:initial:perform:)",
                    "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/onclick(perform:)",
                    "title" : "func onClick(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/onsubmit(perform:)",
                    "title" : "func onSubmit(perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/ontapgesture(gesture:perform:)",
                    "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/overlay(content:)",
                    "title" : "func overlay(content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/padding(_:)",
                    "title" : "func padding(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/preference(key:value:)",
                    "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/submitscope()",
                    "title" : "func submitScope() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/task(id:priority:_:)",
                    "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/zstack\/update(_:children:proposedsize:environment:backend:dryrun:)-3h6xx",
                    "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/zstack\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/zstack",
            "title" : "ZStack",
            "type" : "struct"
          },
          {
            "title" : "Macros",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/hotreloadable()",
            "title" : "macro HotReloadable()",
            "type" : "macro"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/hotreloadable(_:)",
            "title" : "macro hotReloadable<T>(() -> T) -> HotReloadableView",
            "type" : "macro"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/observable",
            "title" : "Observable",
            "type" : "typealias"
          },
          {
            "path" : "\/documentation\/swiftcrossui\/observed",
            "title" : "Observed",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/init(rawvalue:)",
                    "title" : "init(rawValue: UInt8)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/rawvalue",
                    "title" : "var rawValue: UInt8",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/horizontal",
                    "title" : "static let horizontal: Axis.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/vertical",
                    "title" : "static let vertical: Axis.Set",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/init()",
                        "title" : "init()",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/contains(_:)",
                        "title" : "func contains(Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/formintersection(_:)",
                        "title" : "func formIntersection(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/formsymmetricdifference(_:)",
                        "title" : "func formSymmetricDifference(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/formunion(_:)",
                        "title" : "func formUnion(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/insert(_:)",
                        "title" : "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/intersection(_:)",
                        "title" : "func intersection(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/remove(_:)",
                        "title" : "func remove(Self.Element) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/symmetricdifference(_:)",
                        "title" : "func symmetricDifference(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/union(_:)",
                        "title" : "func union(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/update(with:)",
                        "title" : "func update(with: Self.Element) -> Self.Element?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/optionset-implementations",
                    "title" : "OptionSet Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/init(_:)",
                        "title" : "init<S>(S)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: Self.Element...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/isdisjoint(with:)",
                        "title" : "func isDisjoint(with: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/isstrictsubset(of:)",
                        "title" : "func isStrictSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/isstrictsuperset(of:)",
                        "title" : "func isStrictSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/issubset(of:)",
                        "title" : "func isSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/issuperset(of:)",
                        "title" : "func isSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/subtract(_:)",
                        "title" : "func subtract(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/axis\/set\/subtracting(_:)",
                        "title" : "func subtracting(Self) -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/axis\/set\/setalgebra-implementations",
                    "title" : "SetAlgebra Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/axis\/set",
                "title" : "Axis.Set",
                "type" : "struct"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/axis\/horizontal",
                "title" : "case horizontal",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/axis\/vertical",
                "title" : "case vertical",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/axis\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/axis\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/axis",
            "title" : "Axis",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/colorscheme\/dark",
                "title" : "case dark",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/colorscheme\/light",
                "title" : "case light",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/colorscheme\/defaultforegroundcolor",
                "title" : "var defaultForegroundColor: Color",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/colorscheme\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/colorscheme\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/colorscheme",
            "title" : "ColorScheme",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/dialogresult\/cancelled",
                "title" : "case cancelled",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/dialogresult\/success(_:)",
                "title" : "case success(T)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/dialogresult",
            "title" : "DialogResult",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/init(_:)-1jzph",
                    "title" : "init(Edge)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/init(rawvalue:)",
                    "title" : "init(rawValue: Int8)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/rawvalue",
                    "title" : "let rawValue: Int8",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/all",
                    "title" : "static let all: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/bottom",
                    "title" : "static let bottom: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/horizontal",
                    "title" : "static let horizontal: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/leading",
                    "title" : "static let leading: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/top",
                    "title" : "static let top: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/trailing",
                    "title" : "static let trailing: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/vertical",
                    "title" : "static let vertical: Edge.Set",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/init()",
                        "title" : "init()",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/contains(_:)",
                        "title" : "func contains(Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/formintersection(_:)",
                        "title" : "func formIntersection(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/formsymmetricdifference(_:)",
                        "title" : "func formSymmetricDifference(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/formunion(_:)",
                        "title" : "func formUnion(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/insert(_:)",
                        "title" : "func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/intersection(_:)",
                        "title" : "func intersection(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/remove(_:)",
                        "title" : "func remove(Self.Element) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/symmetricdifference(_:)",
                        "title" : "func symmetricDifference(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/union(_:)",
                        "title" : "func union(Self) -> Self",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/update(with:)",
                        "title" : "func update(with: Self.Element) -> Self.Element?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/optionset-implementations",
                    "title" : "OptionSet Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/init(_:)-6ielq",
                        "title" : "init<S>(S)",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/init(arrayliteral:)",
                        "title" : "init(arrayLiteral: Self.Element...)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/isdisjoint(with:)",
                        "title" : "func isDisjoint(with: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/isstrictsubset(of:)",
                        "title" : "func isStrictSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/isstrictsuperset(of:)",
                        "title" : "func isStrictSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/issubset(of:)",
                        "title" : "func isSubset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/issuperset(of:)",
                        "title" : "func isSuperset(of: Self) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/subtract(_:)",
                        "title" : "func subtract(Self)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/edge\/set\/subtracting(_:)",
                        "title" : "func subtracting(Self) -> Self",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/edge\/set\/setalgebra-implementations",
                    "title" : "SetAlgebra Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/edge\/set",
                "title" : "Edge.Set",
                "type" : "struct"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/edge\/bottom",
                "title" : "case bottom",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/edge\/leading",
                "title" : "case leading",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/edge\/top",
                "title" : "case top",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/edge\/trailing",
                "title" : "case trailing",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/edge\/init(rawvalue:)",
                "title" : "init?(rawValue: Int8)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/edge\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/edge\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/edge\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/edge",
            "title" : "Edge",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filechooserresult\/cancelled",
                "title" : "case cancelled",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/filechooserresult\/success(_:)",
                "title" : "case success(URL)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/filechooserresult",
            "title" : "FileChooserResult",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/font\/system(size:weight:design:)",
                "title" : "case system(size: Int, weight: Font.Weight?, design: Font.Design?)",
                "type" : "case"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/design\/default",
                    "title" : "case `default`",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/design\/monospaced",
                    "title" : "case monospaced",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/font\/design\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/font\/design\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/font\/design",
                "title" : "Font.Design",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/black",
                    "title" : "case black",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/bold",
                    "title" : "case bold",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/heavy",
                    "title" : "case heavy",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/light",
                    "title" : "case light",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/medium",
                    "title" : "case medium",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/regular",
                    "title" : "case regular",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/semibold",
                    "title" : "case semibold",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/thin",
                    "title" : "case thin",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/ultralight",
                    "title" : "case ultraLight",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/font\/weight\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/font\/weight\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/font\/weight",
                "title" : "Font.Weight",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/font",
            "title" : "Font",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/horizontalalignment\/center",
                "title" : "case center",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/horizontalalignment\/leading",
                "title" : "case leading",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/horizontalalignment\/trailing",
                "title" : "case trailing",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/horizontalalignment\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/horizontalalignment\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/horizontalalignment",
            "title" : "HorizontalAlignment",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/inheritedorientation\/horizontal",
                "title" : "case horizontal",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/inheritedorientation\/vertical",
                "title" : "case vertical",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/inheritedorientation\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/inheritedorientation\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/inheritedorientation",
            "title" : "InheritedOrientation",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/layoutsystem\/layoutablechild\/init(update:tag:)",
                    "title" : "init(update: (SIMD2<Int>, EnvironmentValues, Bool) -> ViewUpdateResult, tag: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/layoutsystem\/layoutablechild\/update(proposedsize:environment:dryrun:)",
                    "title" : "func update(proposedSize: SIMD2<Int>, environment: EnvironmentValues, dryRun: Bool) -> ViewUpdateResult",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/layoutsystem\/layoutablechild",
                "title" : "LayoutSystem.LayoutableChild",
                "type" : "struct"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/layoutsystem\/updatestacklayout(container:children:proposedsize:environment:backend:dryrun:inheritstacklayoutparticipation:)",
                "title" : "static func updateStackLayout<Backend>(container: Backend.Widget, children: [LayoutSystem.LayoutableChild], proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool, inheritStackLayoutParticipation: Bool) -> ViewUpdateResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/layoutsystem",
            "title" : "LayoutSystem",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitem\/button(_:)",
                "title" : "case button(Button)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitem\/submenu(_:)",
                "title" : "case submenu(Menu)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/menuitem\/text(_:)",
                "title" : "case text(Text)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/menuitem",
            "title" : "MenuItem",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/orientation\/horizontal",
                "title" : "case horizontal",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/orientation\/vertical",
                "title" : "case vertical",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/orientation\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/orientation\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/orientation",
            "title" : "Orientation",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/stackalignment\/center",
                "title" : "case center",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/stackalignment\/leading",
                "title" : "case leading",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/stackalignment\/trailing",
                "title" : "case trailing",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/stackalignment\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/stackalignment\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/stackalignment",
            "title" : "StackAlignment",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/togglestyle\/button",
                "title" : "case button",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/togglestyle\/switch",
                "title" : "case `switch`",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/togglestyle\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/togglestyle\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/togglestyle",
            "title" : "ToggleStyle",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/verticalalignment\/bottom",
                "title" : "case bottom",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/verticalalignment\/center",
                "title" : "case center",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/verticalalignment\/top",
                "title" : "case top",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/verticalalignment\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/verticalalignment\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/verticalalignment",
            "title" : "VerticalAlignment",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowresizability\/automatic",
                "title" : "case automatic",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowresizability\/contentminsize",
                "title" : "case contentMinSize",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/swiftcrossui\/windowresizability\/contentsize",
                "title" : "case contentSize",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/windowresizability\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/windowresizability\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/windowresizability",
            "title" : "WindowResizability",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/swiftcrossui\/swift\/never\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/body",
                        "title" : "var body: Never",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/alert(_:ispresented:actions:)",
                        "title" : "func alert(String, isPresented: Binding<Bool>, actions: () -> [AlertAction]) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/aswidget(_:backend:)",
                        "title" : "func asWidget<Backend>(any ViewGraphNodeChildren, backend: Backend) -> Backend.Widget",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/background(_:)",
                        "title" : "func background<Background>(Background) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/bold()",
                        "title" : "func bold() -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/children(backend:snapshots:environment:)",
                        "title" : "func children<Backend>(backend: Backend, snapshots: [ViewGraphSnapshotter.NodeSnapshot]?, environment: EnvironmentValues) -> any ViewGraphNodeChildren",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/colorscheme(_:)",
                        "title" : "func colorScheme(ColorScheme) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/cornerradius(_:)",
                        "title" : "func cornerRadius(Int) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/font(_:)",
                        "title" : "func font(Font) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/foregroundcolor(_:)",
                        "title" : "func foregroundColor(Color) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                        "title" : "func frame(minWidth: Int?, idealWidth: Int?, maxWidth: Int?, minHeight: Int?, idealHeight: Int?, maxHeight: Int?, alignment: Alignment) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/frame(width:height:alignment:)",
                        "title" : "func frame(width: Int?, height: Int?, alignment: Alignment) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/if(_:apply:)",
                        "title" : "func `if`<Result>(Bool, apply: (Self) -> Result) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/iflet(_:apply:)",
                        "title" : "func ifLet<Value, Result>(Value?, apply: (Self, Value) -> Result) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/layoutablechildren(backend:children:)",
                        "title" : "func layoutableChildren<Backend>(backend: Backend, children: any ViewGraphNodeChildren) -> [LayoutSystem.LayoutableChild]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/multilinetextalignment(_:)",
                        "title" : "func multilineTextAlignment(HorizontalAlignment) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/onappear(perform:)",
                        "title" : "func onAppear(perform: () -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/onchange(of:initial:perform:)",
                        "title" : "func onChange<Value>(of: Value, initial: Bool, perform: () -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/onclick(perform:)",
                        "title" : "func onClick(perform: () -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/ondisappear(perform:)",
                        "title" : "func onDisappear(perform: () -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/onopenurl(perform:)",
                        "title" : "func onOpenURL(perform: (URL) -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/onsubmit(perform:)",
                        "title" : "func onSubmit(perform: () -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/ontapgesture(gesture:perform:)",
                        "title" : "func onTapGesture(gesture: TapGesture, perform: () -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/overlay(content:)",
                        "title" : "func overlay(content: () -> some View) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/padding(_:)",
                        "title" : "func padding(Int?) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/padding(_:_:)",
                        "title" : "func padding(Edge.Set, Int?) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/preference(key:value:)",
                        "title" : "func preference<V>(key: WritableKeyPath<PreferenceValues, V>, value: V) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/submitscope()",
                        "title" : "func submitScope() -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/task(id:priority:_:)",
                        "title" : "func task<Id>(id: Id, priority: TaskPriority, () async -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/task(priority:_:)",
                        "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/swiftcrossui\/swift\/never\/update(_:children:proposedsize:environment:backend:dryrun:)",
                        "title" : "func update<Backend>(Backend.Widget, children: any ViewGraphNodeChildren, proposedSize: SIMD2<Int>, environment: EnvironmentValues, backend: Backend, dryRun: Bool) -> ViewUpdateResult",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/swiftcrossui\/swift\/never\/view-implementations",
                    "title" : "View Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/swiftcrossui\/swift\/never",
                "title" : "Never",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/swiftcrossui\/swift",
            "title" : "Swift",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/swiftcrossui",
        "title" : "SwiftCrossUI",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 1
  }
}