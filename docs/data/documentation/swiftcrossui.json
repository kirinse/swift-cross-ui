{
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [

      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "SwiftCrossUI",
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "role" : "collection",
    "roleHeading" : "Framework",
    "symbolKind" : "module",
    "title" : "SwiftCrossUI"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "SwiftCrossUI takes inspiration from SwiftUI, allowing you to use the basic concepts of SwiftUI to create cross-platform desktop apps. SwiftCrossUI provides your users with a native experience on every platform via a suite of backends built on top of various UI frameworks (see ",
              "type" : "text"
            },
            {
              "identifier" : "#backends",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ").",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Quick-Start",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Examples"
      ],
      "title" : "Getting Started"
    },
    {
      "abstract" : [
        {
          "text" : "SwiftCrossUI has a variety of backends tailored to different operating systems. The beauty of SwiftCrossUI is that you can write your app once and have it look native everywhere. For this reason I recommend using ",
          "type" : "text"
        },
        {
          "code" : "DefaultBackend",
          "type" : "codeVoice"
        },
        {
          "text" : " unless youâ€™ve got particular constraints.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DefaultBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppKitBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/UIKitBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WinUIBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/GtkBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Gtk3Backend"
      ],
      "title" : "Backends"
    },
    {
      "abstract" : [
        {
          "text" : "The top level of your app.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/App",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"
      ],
      "title" : "App Structure"
    },
    {
      "abstract" : [
        {
          "text" : "The wide variety of views available that you can combine to create complex UIs.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Button",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CellPosition",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Color",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HStack",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationLink",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationPath",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationSplitView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationStack",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Picker",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ScrollView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Slider",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Spacer",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Table",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableColumn",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TextField",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Toggle",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewContent",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VStack"
      ],
      "title" : "Views"
    },
    {
      "abstract" : [
        {
          "text" : "Objects that are read from and\/or written to as part of your app.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"
      ],
      "title" : "States"
    },
    {
      "abstract" : [
        {
          "text" : "The detailed components that are part of the low level of SwiftCrossUI.",
          "type" : "text"
        }
      ],
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewChildren",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren"
      ],
      "title" : "Implementation Details"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandsModifierNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroupNode"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DoubleConvertible",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EnvironmentKey",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNodeTransformer",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableRowContent"
      ],
      "title" : "Protocols"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AlertAction",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AlertActionsBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Alignment",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppMetadata",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandMenu",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Commands",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandsBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandsModifier",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ContentType",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Divider",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyTableRowContent",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EnvironmentValues",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ExprLocation",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/FileDialogOptions",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Group",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Menu",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/MenuItemsBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OpenDialogOptions",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OpenURLAction",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PreferenceValues",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PresentAlertAction",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PresentFileSaveDialogAction",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PresentSingleFileOpenDialogAction",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ProgressView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ResolvedMenu",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SaveDialogOptions",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableRowBuilder",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphSnapshotter",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ZStack"
      ],
      "title" : "Structures"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadable()",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/hotReloadable(_:)"
      ],
      "title" : "Macros"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed"
      ],
      "title" : "Type Aliases"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Axis",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ColorScheme",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DialogResult",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Edge",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/FileChooserResult",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Font",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HorizontalAlignment",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/InheritedOrientation",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/MenuItem",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Orientation",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/StackAlignment",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ToggleStyle",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VerticalAlignment",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowResizability"
      ],
      "title" : "Enumerations"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Swift"
      ],
      "title" : "Extended Modules"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"#backends": {
  "identifier" : "#backends",
  "title" : "Backends",
  "titleInlineContent" : [
    {
      "text" : "Backends",
      "type" : "text"
    }
  ],
  "type" : "link",
  "url" : "#backends"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AlertAction": {
  "abstract" : [
    {
      "text" : "An alert action button. Only backends should interface with this type",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "directly. See ",
      "type" : "text"
    },
    {
      "code" : "View\/alert(_:isPresented:actions:message:)",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AlertAction"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AlertAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AlertAction"
    }
  ],
  "role" : "symbol",
  "title" : "AlertAction",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/alertaction"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AlertActionsBuilder": {
  "abstract" : [
    {
      "text" : "A builder for ",
      "type" : "text"
    },
    {
      "code" : "[AlertAction]",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AlertActionsBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AlertActionsBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AlertActionsBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "AlertActionsBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/alertactionsbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Alignment": {
  "abstract" : [
    {
      "text" : "The 2d alignment of a view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Alignment"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Alignment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Alignment"
    }
  ],
  "role" : "symbol",
  "title" : "Alignment",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/alignment"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyView": {
  "abstract" : [
    {
      "text" : "A view which erases the type of its child. Useful in dynamic",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "use-cases such as hot reloading, but not recommended if there",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "are alternate strongly-typed solutions to your problem since",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " has significantly more overhead than strongly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "typed views.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyView"
    }
  ],
  "role" : "symbol",
  "title" : "AnyView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anyview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyViewGraphNode": {
  "abstract" : [
    {
      "text" : "A type-erased ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Used by implementations of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to avoid leaking the selected backend into ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations (which would be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "an annoying complexity for users of the library and it worth the slight sacrifice",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in performance and strong-typing). The user never sees such type-erased wrappers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "AnyViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anyviewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget": {
  "abstract" : [
    {
      "text" : "A type-erased widget which can be stored without having to propagate",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the selected backend type through the type system of the whole view graph",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "system of types, which would leak it back into user view implementations",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "making the backend hard to switch for developers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "role" : "symbol",
  "title" : "AnyWidget",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anywidget"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/App": {
  "abstract" : [
    {
      "text" : "An application.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "App"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/App",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "App"
    }
  ],
  "role" : "symbol",
  "title" : "App",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/app"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend": {
  "abstract" : [
    {
      "text" : "A backend that can be used to run an app (e.g. Gtk or Qt).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "role" : "symbol",
  "title" : "AppBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppKitBackend": {
  "abstract" : [
    {
      "text" : "SwiftCrossUIâ€™s native macOS backend built on AppKit.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppKitBackend",
  "kind" : "article",
  "role" : "article",
  "title" : "AppKitBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appkitbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppMetadata": {
  "abstract" : [
    {
      "text" : "Metadata loaded at app start up.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppMetadata"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppMetadata",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppMetadata"
    }
  ],
  "role" : "symbol",
  "title" : "AppMetadata",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appmetadata"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Axis": {
  "abstract" : [
    {
      "text" : "An axis in a 2D coordinate system.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Axis"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Axis",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Axis"
    }
  ],
  "role" : "symbol",
  "title" : "Axis",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/axis"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding": {
  "abstract" : [
    {
      "text" : "A value that can read and write a value owned by a source of truth. Can be thought of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a writable reference to the value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "role" : "symbol",
  "title" : "Binding",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/binding"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Button": {
  "abstract" : [
    {
      "text" : "A control that initiates an action.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Button"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Button",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Button"
    }
  ],
  "role" : "symbol",
  "title" : "Button",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/button"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable": {
  "abstract" : [
    {
      "text" : "Will run a â€˜cancelâ€™ action when the cancellable falls out of scope (gets",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deinitâ€™d by ARC). Protects against calling the action twice.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "role" : "symbol",
  "title" : "Cancellable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cancellable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/CellPosition": {
  "abstract" : [
    {
      "text" : "The position of a cell in a table (with row and column numbers starting from 0).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CellPosition"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CellPosition",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CellPosition"
    }
  ],
  "role" : "symbol",
  "title" : "CellPosition",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cellposition"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Color": {
  "abstract" : [
    {
      "text" : "An RGBA representation of a color.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Color"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Color",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Color"
    }
  ],
  "role" : "symbol",
  "title" : "Color",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/color"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ColorScheme": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ColorScheme"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ColorScheme",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ColorScheme"
    }
  ],
  "role" : "symbol",
  "title" : "ColorScheme",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/colorscheme"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/CommandMenu": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CommandMenu"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandMenu",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CommandMenu"
    }
  ],
  "role" : "symbol",
  "title" : "CommandMenu",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/commandmenu"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Commands": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Commands"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Commands",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Commands"
    }
  ],
  "role" : "symbol",
  "title" : "Commands",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/commands"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/CommandsBuilder": {
  "abstract" : [
    {
      "text" : "A builder for ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Commands",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CommandsBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandsBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CommandsBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "CommandsBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/commandsbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/CommandsModifier": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CommandsModifier"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandsModifier",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CommandsModifier"
    }
  ],
  "role" : "symbol",
  "title" : "CommandsModifier",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/commandsmodifier"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/CommandsModifierNode": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CommandsModifierNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandsModifierNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CommandsModifierNode"
    }
  ],
  "role" : "symbol",
  "title" : "CommandsModifierNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/commandsmodifiernode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ContentType": {
  "abstract" : [
    {
      "text" : "A content type corresponding to a specific file\/data format.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ContentType"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ContentType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ContentType"
    }
  ],
  "role" : "symbol",
  "title" : "ContentType",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/contenttype"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DefaultBackend": {
  "abstract" : [
    {
      "text" : "An adaptive backend which uses different backends under the hood depending on the target operating system.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DefaultBackend",
  "kind" : "article",
  "role" : "article",
  "title" : "DefaultBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/defaultbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DialogResult": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DialogResult"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DialogResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DialogResult"
    }
  ],
  "role" : "symbol",
  "title" : "DialogResult",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/dialogresult"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Divider": {
  "abstract" : [
    {
      "text" : "A divider that expands along the minor axis of the containing stack layout",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(or horizontally otherwise). In dark mode itâ€™s white with 10% opacity, and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in light mode itâ€™s black with 10% opacity.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Divider"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Divider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Divider"
    }
  ],
  "role" : "symbol",
  "title" : "Divider",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/divider"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DoubleConvertible": {
  "abstract" : [
    {
      "text" : "A value convertible to and from a ",
      "type" : "text"
    },
    {
      "code" : "Double",
      "type" : "codeVoice"
    },
    {
      "text" : ".`",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DoubleConvertible"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DoubleConvertible",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DoubleConvertible"
    }
  ],
  "role" : "symbol",
  "title" : "DoubleConvertible",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/doubleconvertible"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty": {
  "abstract" : [
    {
      "text" : "A property wrapper updated by the view graph before each access to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Conforming types should use internal mutability (see ",
      "type" : "text"
    },
    {
      "code" : "Box",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to implement this protocolâ€™s non-mutable methods if required. This",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "protocol avoids mutation to allow state properties and such to be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "captured even though views are structs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DynamicProperty"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DynamicProperty"
    }
  ],
  "role" : "symbol",
  "title" : "DynamicProperty",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/dynamicproperty"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Edge": {
  "abstract" : [
    {
      "text" : "Indicates a specific edge of a rectangle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Edge"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Edge",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Edge"
    }
  ],
  "role" : "symbol",
  "title" : "Edge",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/edge"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support if\/else conditional statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "role" : "symbol",
  "title" : "EitherView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/eitherview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyTableRowContent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyTableRowContent"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyTableRowContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyTableRowContent"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyTableRowContent",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptytablerowcontent"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView": {
  "abstract" : [
    {
      "text" : "A placeholder view used by elementary ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations which donâ€™t have bodies. Fatally",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "crashes if rendered.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyViewChildren": {
  "abstract" : [
    {
      "text" : "The children of a node with no children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyViewChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyViewChildren"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyViewChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyviewchildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment": {
  "abstract" : [
    {
      "text" : "A property wrapper used to access environment values within a ",
      "type" : "text"
    },
    {
      "code" : "View",
      "type" : "codeVoice"
    },
    {
      "text" : " or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "App",
      "type" : "codeVoice"
    },
    {
      "text" : ". Must not be used before the view graph accesses the view or appâ€™s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "body",
      "type" : "codeVoice"
    },
    {
      "text" : " (i.e. donâ€™t access it from an initializer).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Environment"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Environment"
    }
  ],
  "role" : "symbol",
  "title" : "Environment",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/environment"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EnvironmentKey": {
  "abstract" : [
    {
      "text" : "A key that can be used to extend the environment with new properties.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EnvironmentKey"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EnvironmentKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EnvironmentKey"
    }
  ],
  "role" : "symbol",
  "title" : "EnvironmentKey",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/environmentkey"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EnvironmentValues": {
  "abstract" : [
    {
      "text" : "The environment used when constructing scenes and views. Each scene or view",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "gets to modify the environment before passing it on to its children, which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is the basis of many view modifiers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EnvironmentValues"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EnvironmentValues",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EnvironmentValues"
    }
  ],
  "role" : "symbol",
  "title" : "EnvironmentValues",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/environmentvalues"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ErasedViewGraphNode": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ErasedViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/erasedviewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ErasedViewGraphNodeTransformer": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNodeTransformer"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNodeTransformer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNodeTransformer"
    }
  ],
  "role" : "symbol",
  "title" : "ErasedViewGraphNodeTransformer",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/erasedviewgraphnodetransformer"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Examples": {
  "abstract" : [
    {
      "text" : "An overview of the examples included with SwiftCrossUI.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Examples",
  "kind" : "article",
  "role" : "article",
  "title" : "Examples",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/examples"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ExprLocation": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ExprLocation"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ExprLocation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ExprLocation"
    }
  ],
  "role" : "symbol",
  "title" : "ExprLocation",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/exprlocation"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/FileChooserResult": {
  "abstract" : [
    {
      "text" : "The result returned when a user either selects a file or dismisses the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "file chooser dialog.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileChooserResult"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/FileChooserResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileChooserResult"
    }
  ],
  "role" : "symbol",
  "title" : "FileChooserResult",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/filechooserresult"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/FileDialogOptions": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FileDialogOptions"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/FileDialogOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FileDialogOptions"
    }
  ],
  "role" : "symbol",
  "title" : "FileDialogOptions",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/filedialogoptions"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Font": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Font"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Font",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Font"
    }
  ],
  "role" : "symbol",
  "title" : "Font",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/font"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ForEach": {
  "abstract" : [
    {
      "text" : "A view that displays a variable amount of children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "role" : "symbol",
  "title" : "ForEach",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/foreach"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Group": {
  "abstract" : [
    {
      "text" : "A view that groups views together without affecting their layout (allowing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "modifiers to be applied to a whole group of views at once).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Group"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Group",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Group"
    }
  ],
  "role" : "symbol",
  "title" : "Group",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/group"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Gtk3Backend": {
  "abstract" : [
    {
      "text" : "A secondary Linux backend built on Gtk 3 (for older distros without Gtk 4).",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Gtk3Backend",
  "kind" : "article",
  "role" : "article",
  "title" : "Gtk3Backend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/gtk3backend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/GtkBackend": {
  "abstract" : [
    {
      "text" : "SwiftCrossUIâ€™s native Linux backend built on Gtk 4.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/GtkBackend",
  "kind" : "article",
  "role" : "article",
  "title" : "GtkBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/gtkbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HStack": {
  "abstract" : [
    {
      "text" : "A view that arranges its subviews horizontally.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HStack"
    }
  ],
  "role" : "symbol",
  "title" : "HStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HorizontalAlignment": {
  "abstract" : [
    {
      "text" : "Alignment of items layed out along the horizontal axis.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HorizontalAlignment"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HorizontalAlignment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HorizontalAlignment"
    }
  ],
  "role" : "symbol",
  "title" : "HorizontalAlignment",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/horizontalalignment"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadable()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "macro"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HotReloadable"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadable()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "HotReloadable()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hotreloadable()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView": {
  "abstract" : [
    {
      "text" : "A view which attempts to persist the state of its view subtree even",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "when the subtreeâ€™s structure changes. Uses state serialization (via",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "view graph snapshotting) to persist view state even when a child",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "viewâ€™s implementation gets swapped out with an implementation from",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a newly-loaded dylib (this is what makes this useful for hot reloading).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HotReloadableView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HotReloadableView"
    }
  ],
  "role" : "symbol",
  "title" : "HotReloadableView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hotreloadableview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Image": {
  "abstract" : [
    {
      "text" : "A view that displays an image.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Image"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Image"
    }
  ],
  "role" : "symbol",
  "title" : "Image",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/image"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/InheritedOrientation": {
  "abstract" : [
    {
      "text" : "The layout orientation inherited by a widget from its nearest oriented parent.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "InheritedOrientation"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/InheritedOrientation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "InheritedOrientation"
    }
  ],
  "role" : "symbol",
  "title" : "InheritedOrientation",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/inheritedorientation"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LayoutSystem"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LayoutSystem"
    }
  ],
  "role" : "symbol",
  "title" : "LayoutSystem",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/layoutsystem"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Menu": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Menu"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Menu",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Menu"
    }
  ],
  "role" : "symbol",
  "title" : "Menu",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/menu"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/MenuItem": {
  "abstract" : [
    {
      "text" : "An item of a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Menu",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " or ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/CommandMenu",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MenuItem"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/MenuItem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MenuItem"
    }
  ],
  "role" : "symbol",
  "title" : "MenuItem",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/menuitem"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/MenuItemsBuilder": {
  "abstract" : [
    {
      "text" : "A builder for ",
      "type" : "text"
    },
    {
      "code" : "[MenuItem]",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "MenuItemsBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/MenuItemsBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "MenuItemsBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "MenuItemsBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/menuitemsbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationLink": {
  "abstract" : [
    {
      "text" : "A navigation primitive that appends a value to the current navigation path on click.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationLink"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationLink",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationLink"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationLink",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationlink"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationPath": {
  "abstract" : [
    {
      "text" : "A type-erased list of data representing the content of a navigation stack.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationPath"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationPath",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationPath"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationPath",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationpath"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationSplitView": {
  "abstract" : [
    {
      "text" : "A view that presents views in two or three columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationSplitView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationSplitView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationSplitView"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationSplitView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationsplitview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/NavigationStack": {
  "abstract" : [
    {
      "text" : "A view that displays a root view and enables you to present additional views over the root view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "NavigationStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/NavigationStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "NavigationStack"
    }
  ],
  "role" : "symbol",
  "title" : "NavigationStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/navigationstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observable": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Observable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Observable"
    }
  ],
  "role" : "symbol",
  "title" : "Observable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observableobject"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Observed": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Observed"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Observed",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Observed"
    }
  ],
  "role" : "symbol",
  "title" : "Observed",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observed"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OpenDialogOptions": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OpenDialogOptions"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OpenDialogOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OpenDialogOptions"
    }
  ],
  "role" : "symbol",
  "title" : "OpenDialogOptions",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/opendialogoptions"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OpenURLAction": {
  "abstract" : [
    {
      "text" : "Opens a URL with the default application. May present an application picker",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "if multiple applications are registered for the given URL protocol.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OpenURLAction"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OpenURLAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OpenURLAction"
    }
  ],
  "role" : "symbol",
  "title" : "OpenURLAction",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/openurlaction"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support non-exhaustive if statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "role" : "symbol",
  "title" : "OptionalView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/optionalview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Orientation": {
  "abstract" : [
    {
      "text" : "The orientation of a view (usually in reference to a stack view).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Orientation"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Orientation",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Orientation"
    }
  ],
  "role" : "symbol",
  "title" : "Orientation",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/orientation"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Picker": {
  "abstract" : [
    {
      "text" : "A control for selecting from a set of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Picker"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Picker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Picker"
    }
  ],
  "role" : "symbol",
  "title" : "Picker",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/picker"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PreferenceValues": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PreferenceValues"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PreferenceValues",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PreferenceValues"
    }
  ],
  "role" : "symbol",
  "title" : "PreferenceValues",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/preferencevalues"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PresentAlertAction": {
  "abstract" : [
    {
      "text" : "Presents an alert to the user. Returns once an action has been selected and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the corresponding action handler has been run. Returns the index of the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "selected action. By default, the alert will have a single button labelled",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "OK",
      "type" : "codeVoice"
    },
    {
      "text" : ". All buttons will dismiss the alert even if you provide your own",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "actions.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PresentAlertAction"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PresentAlertAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PresentAlertAction"
    }
  ],
  "role" : "symbol",
  "title" : "PresentAlertAction",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/presentalertaction"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PresentFileSaveDialogAction": {
  "abstract" : [
    {
      "text" : "Presents a â€˜Save fileâ€™ dialog fit for selecting a save destination. Returns",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " if the user cancels the operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PresentFileSaveDialogAction"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PresentFileSaveDialogAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PresentFileSaveDialogAction"
    }
  ],
  "role" : "symbol",
  "title" : "PresentFileSaveDialogAction",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/presentfilesavedialogaction"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PresentSingleFileOpenDialogAction": {
  "abstract" : [
    {
      "text" : "Presents an â€˜Open fileâ€™ dialog fit for selecting a single file. Some",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "backends only allow selecting either files or directories but not both",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in a single dialog. Returns ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " if the user cancels the operation.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PresentSingleFileOpenDialogAction"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PresentSingleFileOpenDialogAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PresentSingleFileOpenDialogAction"
    }
  ],
  "role" : "symbol",
  "title" : "PresentSingleFileOpenDialogAction",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/presentsinglefileopendialogaction"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ProgressView": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ProgressView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ProgressView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ProgressView"
    }
  ],
  "role" : "symbol",
  "title" : "ProgressView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/progressview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the wrapped value is ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "also be forwarded to the wrapperâ€™s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "role" : "symbol",
  "title" : "Published",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/published"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values nested within an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will only have their changes published by the parent ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "if marked with this marker protocol. This avoids uncertainty around which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "properties will or will not have their changes published by the parent.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For clarity reasons, you shouldnâ€™t conform your own types to this protocol.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Instead, apply the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " property wrapper when needed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PublishedMarkerProtocol"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PublishedMarkerProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "PublishedMarkerProtocol",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publishedmarkerprotocol"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher": {
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "role" : "symbol",
  "title" : "Publisher",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Quick-Start": {
  "abstract" : [
    {
      "text" : "Creating a cross-platform SwiftCrossUI app with Swift Bundler.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Quick-Start",
  "kind" : "article",
  "role" : "article",
  "title" : "Quick start",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/quick-start"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ResolvedMenu": {
  "abstract" : [
    {
      "text" : "A generic representation of an application menu, pop-up menu, or context menu.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is what eventually gets passed through to the backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ResolvedMenu"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ResolvedMenu",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ResolvedMenu"
    }
  ],
  "role" : "symbol",
  "title" : "ResolvedMenu",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/resolvedmenu"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/SaveDialogOptions": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SaveDialogOptions"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SaveDialogOptions",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SaveDialogOptions"
    }
  ],
  "role" : "symbol",
  "title" : "SaveDialogOptions",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/savedialogoptions"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene": {
  "abstract" : [
    {
      "text" : "A scene wraps a root view and dictates how it is displayed (e.g. in a window or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a menu bar). Scenes can also be a composition of multiple child scenes instead",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of wrapping a root view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scene"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scene"
    }
  ],
  "role" : "symbol",
  "title" : "Scene",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scene"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/SceneBuilder": {
  "abstract" : [
    {
      "text" : "Builds an appâ€™s root scene by composing other scenes together.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SceneBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SceneBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "SceneBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scenebuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/SceneGraphNode": {
  "abstract" : [
    {
      "text" : "A persistent representation of a scene that maintains its state even when the scene",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "itself gets recomputed. Required to store view graphs and widget handles etc.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SceneGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SceneGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "SceneGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scenegraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ScrollView": {
  "abstract" : [
    {
      "text" : "A view that is scrollable when it would otherwise overflow available space. Use the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "View\/frame",
      "type" : "codeVoice"
    },
    {
      "text" : " modifier to constrain height if necessary.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ScrollView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ScrollView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ScrollView"
    }
  ],
  "role" : "symbol",
  "title" : "ScrollView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scrollview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Slider": {
  "abstract" : [
    {
      "text" : "A control for selecting a value from a bounded range of numerical values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Slider"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Slider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Slider"
    }
  ],
  "role" : "symbol",
  "title" : "Slider",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/slider"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Spacer": {
  "abstract" : [
    {
      "text" : "A flexible space that expands along the major axis of its containing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "stack layout, or on both axes if not contained in a stack.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Spacer"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Spacer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Spacer"
    }
  ],
  "role" : "symbol",
  "title" : "Spacer",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/spacer"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/StackAlignment": {
  "abstract" : [
    {
      "text" : "Alignment of items layed out along either a horizontal or vertical axis.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "StackAlignment"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/StackAlignment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "StackAlignment"
    }
  ],
  "role" : "symbol",
  "title" : "StackAlignment",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/stackalignment"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/State": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "role" : "symbol",
  "title" : "State",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/state"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Swift": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Swift",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Swift",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/swift"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Table": {
  "abstract" : [
    {
      "text" : "A container that presents rows of data arranged in columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Table"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Table",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Table"
    }
  ],
  "role" : "symbol",
  "title" : "Table",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/table"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TableColumn": {
  "abstract" : [
    {
      "text" : "A labelled column with a view for each row in a table.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TableColumn"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableColumn",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TableColumn"
    }
  ],
  "role" : "symbol",
  "title" : "TableColumn",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tablecolumn"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TableRowBuilder": {
  "abstract" : [
    {
      "text" : "A result builder for constructing a collection of table columns.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TableRowBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableRowBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TableRowBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "TableRowBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tablerowbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TableRowContent": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TableRowContent"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TableRowContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TableRowContent"
    }
  ],
  "role" : "symbol",
  "title" : "TableRowContent",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tablerowcontent"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Text": {
  "abstract" : [
    {
      "text" : "A text view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "role" : "symbol",
  "title" : "Text",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/text"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TextField": {
  "abstract" : [
    {
      "text" : "A control that displays an editable text interface.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TextField"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TextField",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TextField"
    }
  ],
  "role" : "symbol",
  "title" : "TextField",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/textfield"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Toggle": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Toggle"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Toggle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Toggle"
    }
  ],
  "role" : "symbol",
  "title" : "Toggle",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/toggle"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ToggleStyle": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ToggleStyle"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ToggleStyle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ToggleStyle"
    }
  ],
  "role" : "symbol",
  "title" : "ToggleStyle",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/togglestyle"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene10": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene9": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode10": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode9": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent1": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent1"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent10": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleTableRowContent9": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleTableRowContent9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleTableRowContent9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleTableRowContent9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupletablerowcontent9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView1": {
  "abstract" : [
    {
      "text" : "A view with exactly 1 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView1"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView10": {
  "abstract" : [
    {
      "text" : "A view with exactly 10 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView2": {
  "abstract" : [
    {
      "text" : "A view with exactly 2 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView3": {
  "abstract" : [
    {
      "text" : "A view with exactly 3 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView4": {
  "abstract" : [
    {
      "text" : "A view with exactly 4 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView5": {
  "abstract" : [
    {
      "text" : "A view with exactly 5 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView6": {
  "abstract" : [
    {
      "text" : "A view with exactly 6 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView7": {
  "abstract" : [
    {
      "text" : "A view with exactly 7 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView8": {
  "abstract" : [
    {
      "text" : "A view with exactly 8 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView9": {
  "abstract" : [
    {
      "text" : "A view with exactly 9 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren1": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 1 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren1"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren10": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 10 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView10",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren2": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 2 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren3": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 3 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView3",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren4": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 4 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView4",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren5": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 5 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView5",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren6": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 6 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView6",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren7": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 7 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView7",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren8": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 8 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView8",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren9": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 9 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView9",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/UIKitBackend": {
  "abstract" : [
    {
      "text" : "SwiftCrossUIâ€™s native iOS and tvOS backend built on UIKit.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/UIKitBackend",
  "kind" : "article",
  "role" : "article",
  "title" : "UIKitBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/uikitbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VStack": {
  "abstract" : [
    {
      "text" : "A view that arranges its subviews vertically.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VStack"
    }
  ],
  "role" : "symbol",
  "title" : "VStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/vstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/VerticalAlignment": {
  "abstract" : [
    {
      "text" : "Alignment of items layed out along the vertical axis.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "VerticalAlignment"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VerticalAlignment",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "VerticalAlignment"
    }
  ],
  "role" : "symbol",
  "title" : "VerticalAlignment",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/verticalalignment"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View": {
  "abstract" : [
    {
      "text" : "A view that can be rendered by any backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "role" : "symbol",
  "title" : "View",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body": {
  "abstract" : [
    {
      "text" : "The viewâ€™s contents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "body"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI4ViewP7ContentQa",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "body",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view\/body"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder": {
  "abstract" : [
    {
      "text" : "A result builder used to compose views together into composite views in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a declarative manner.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "ViewBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewContent": {
  "abstract" : [

  ],
  "deprecated" : true,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewContent"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewContent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewContent"
    }
  ],
  "role" : "symbol",
  "title" : "ViewContent",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewcontent"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraph": {
  "abstract" : [
    {
      "text" : "The root of the view graph which shadows a root viewâ€™s structure with extra metadata,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "cross-update state persistence, and behind the scenes backend widget handling.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraph",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraph"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode": {
  "abstract" : [
    {
      "text" : "A view graph node storing a view, its widget, and its children (likely a collection of more nodes).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren": {
  "abstract" : [
    {
      "text" : "The children of a view graph node. This is implemented by a few different",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "types for various purposes. E.g. variable length with same-typed elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "), and fixed length with distinctly-typed elements (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", etc).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphSnapshotter": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphSnapshotter"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphSnapshotter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphSnapshotter"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphSnapshotter",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize": {
  "abstract" : [
    {
      "text" : "The size of a view. Includes ideal size, and minimum\/maximum width and height",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "along with the size youâ€™d expect.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewSize"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewSize"
    }
  ],
  "role" : "symbol",
  "title" : "ViewSize",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewsize"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewUpdateResult"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewUpdateResult"
    }
  ],
  "role" : "symbol",
  "title" : "ViewUpdateResult",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewupdateresult"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WinUIBackend": {
  "abstract" : [
    {
      "text" : "SwiftCrossUIâ€™s native Windows backend built on WinUI 3.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WinUIBackend",
  "kind" : "article",
  "role" : "article",
  "title" : "WinUIBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/winuibackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowGroup": {
  "abstract" : [
    {
      "text" : "A scene that presents a group of identically structured windows. Currently",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "only supports having a single instance of the window but will eventually",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "support duplicating the window.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowGroup"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowGroup"
    }
  ],
  "role" : "symbol",
  "title" : "WindowGroup",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowgroup"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowGroupNode": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " corresponding to a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " scene. Holds",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the sceneâ€™s view graph and window handle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowGroupNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroupNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowGroupNode"
    }
  ],
  "role" : "symbol",
  "title" : "WindowGroupNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowgroupnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowResizability": {
  "abstract" : [
    {
      "text" : "The level of resizability of a window.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowResizability"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowResizability",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowResizability"
    }
  ],
  "role" : "symbol",
  "title" : "WindowResizability",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowresizability"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ZStack": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ZStack"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ZStack",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ZStack"
    }
  ],
  "role" : "symbol",
  "title" : "ZStack",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/zstack"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/hotReloadable(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "macro"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hotReloadable"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">(() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17HotReloadableViewV",
      "text" : "HotReloadableView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/hotReloadable(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hotReloadable(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hotreloadable(_:)"
}
}
}