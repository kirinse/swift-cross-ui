{"schemaVersion":{"patch":0,"minor":3,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult"},"kind":"symbol","metadata":{"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"externalID":"s:12SwiftCrossUI16ViewUpdateResultV","role":"symbol","symbolKind":"struct","remoteSource":{"fileName":"ViewUpdateResult.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewUpdateResult.swift#L1"},"title":"ViewUpdateResult","modules":[{"name":"SwiftCrossUI"}]},"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)"],"anchor":"Type-Methods","title":"Type Methods","generated":true}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewupdateresult"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"type":"topic","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"kind":"symbol","title":"OptionalView","role":"symbol","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"type":"text","text":" to support non-exhaustive if statements."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/optionalview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"kind":"symbol","role":"symbol","title":"EitherView","url":"\/documentation\/swiftcrossui\/eitherview","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support if\/else conditional statements.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"abstract":[{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":" values nested within an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"role":"symbol","title":"PublishedMarkerProtocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","title":"LayoutSystem","abstract":[],"role":"symbol","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ViewSize","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"kind":"article","role":"collectionGroup","abstract":[],"type":"topic","title":"Scene graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","url":"\/documentation\/swiftcrossui\/scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"type":"topic","title":"SwiftCrossUI","role":"collection","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/preferences":{"type":"topic","role":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/preferences","abstract":[],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preferences","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","text":"PreferenceValues","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","title":"preferences"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"title":"Published","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:preferences:)":{"title":"init(size:preferences:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"preferences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PreferenceValues","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)","type":"topic","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:preferences:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"role":"symbol","title":"ViewUpdateResult","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:childResults:preferencesOverlay:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"childResults","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","text":"ViewUpdateResult","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"preferencesOverlay","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","text":"PreferenceValues","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:childresults:preferencesoverlay:)","title":"init(size:childResults:preferencesOverlay:)","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}],"navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"type":"topic","url":"\/documentation\/swiftcrossui\/anywidget","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","title":"AnyWidget"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"kind":"article","abstract":[],"url":"\/documentation\/swiftcrossui\/view-graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","role":"collectionGroup","type":"topic","title":"View graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"title":"DynamicProperty","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier","text":"Content"}],"url":"\/documentation\/swiftcrossui\/view\/body","title":"body","kind":"symbol","type":"topic","defaultImplementations":1,"required":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","abstract":[{"type":"text","text":"The view’s contents."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","title":"HotReloadableView","role":"symbol","abstract":[{"text":"A view which attempts to persist the state of its view subtree even","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","type":"topic","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"type":"topic","url":"\/documentation\/swiftcrossui\/viewbuilder","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"title":"ViewBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/leafView(size:)":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/leafview(size:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)","role":"symbol","title":"leafView(size:)","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"leafView"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","text":"ViewUpdateResult"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/participatesInStackLayouts":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","title":"participatesInStackLayouts","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/participatesinstacklayouts","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"participatesInStackLayouts","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"title":"ObservableObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"url":"\/documentation\/swiftcrossui\/observableobject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/size":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/size","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier"}],"title":"size","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","navigatorTitle":[{"text":"View","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/view","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"url":"\/documentation\/swiftcrossui\/emptyview","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"title":"EmptyView"}}}