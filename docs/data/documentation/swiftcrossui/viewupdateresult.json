{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"SwiftCrossUI"}],"remoteSource":{"fileName":"ViewUpdateResult.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewUpdateResult.swift#L1"},"navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"title":"ViewUpdateResult","externalID":"s:12SwiftCrossUI16ViewUpdateResultV","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"],"anchor":"Instance-Properties"},{"generated":true,"title":"Type Methods","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)"],"anchor":"Type-Methods"}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"sections":[],"variants":[{"paths":["\/documentation\/swiftcrossui\/viewupdateresult"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:preferences:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"},{"text":", ","kind":"text"},{"text":"preferences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PreferenceValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"},{"text":")","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:preferences:)","type":"topic","title":"init(size:preferences:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"type":"topic","url":"\/documentation\/swiftcrossui\/view","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"kind":"symbol","title":"View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"title":"EitherView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"kind":"symbol","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/eitherview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"title":"ViewSize","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","type":"topic","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/preferences":{"title":"preferences","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/preferences","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preferences","kind":"identifier"},{"text":": ","kind":"text"},{"text":"PreferenceValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" values nested within an ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"type":"topic","title":"PublishedMarkerProtocol","role":"symbol","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/participatesInStackLayouts":{"abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","title":"participatesInStackLayouts","role":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/participatesinstacklayouts","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"participatesInStackLayouts","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/size":{"url":"\/documentation\/swiftcrossui\/viewupdateresult\/size","title":"size","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ViewSize","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size","abstract":[],"type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"title":"OptionalView","kind":"symbol","abstract":[{"text":"A view used by ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"text":" to support non-exhaustive if statements.","type":"text"}],"url":"\/documentation\/swiftcrossui\/optionalview","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"kind":"article","type":"topic","url":"\/documentation\/swiftcrossui\/view-graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","title":"View graph","role":"collectionGroup","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","kind":"article","type":"topic","role":"collectionGroup","title":"Scene graph","abstract":[],"url":"\/documentation\/swiftcrossui\/scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:childResults:preferencesOverlay:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:childresults:preferencesoverlay:)","title":"init(size:childResults:preferencesOverlay:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"childResults","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"ViewUpdateResult","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"preferencesOverlay","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PreferenceValues","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"},{"kind":"text","text":"?)"}],"role":"symbol","type":"topic","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","kind":"symbol","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"title":"HotReloadableView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"role":"symbol","title":"LayoutSystem","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"url":"\/documentation\/swiftcrossui\/view\/body","abstract":[{"type":"text","text":"The view’s contents."}],"defaultImplementations":1,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"type":"topic","role":"symbol","kind":"symbol","title":"body"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"title":"EmptyView","kind":"symbol","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","type":"topic","url":"\/documentation\/swiftcrossui\/emptyview","abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"title":"DynamicProperty","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true,"type":"reference"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"type":"codeVoice","code":"Box"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"url":"\/documentation\/swiftcrossui\/anywidget","title":"AnyWidget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}],"abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/leafView(size:)":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leafView","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"},{"text":") -> ","kind":"text"},{"text":"ViewUpdateResult","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV"}],"abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/leafview(size:)","title":"leafView(size:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"url":"\/documentation\/swiftcrossui\/viewbuilder","title":"ViewBuilder","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","title":"ViewUpdateResult","abstract":[],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","title":"Published","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Published","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":", its ","type":"text"},{"type":"codeVoice","code":"didChange"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}]}}}