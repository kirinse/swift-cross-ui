{"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"kind":"symbol","seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"metadata":{"roleHeading":"Structure","remoteSource":{"fileName":"ViewUpdateResult.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewUpdateResult.swift#L1"},"externalID":"s:12SwiftCrossUI16ViewUpdateResultV","symbolKind":"struct","modules":[{"name":"SwiftCrossUI"}],"role":"symbol","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"title":"ViewUpdateResult"},"topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)"],"generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"],"generated":true},{"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewupdateresult"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"languages":["swift"]}]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" values nested within an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"title":"PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"role":"collectionGroup","url":"\/documentation\/swiftcrossui\/scene-graph","title":"Scene graph","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","title":"ViewBuilder","type":"topic","role":"symbol","url":"\/documentation\/swiftcrossui\/viewbuilder","kind":"symbol","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"title":"HotReloadableView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"title":"View graph","abstract":[],"url":"\/documentation\/swiftcrossui\/view-graph","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/participatesInStackLayouts":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participatesInStackLayouts"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic","title":"participatesInStackLayouts","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/participatesinstacklayouts"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"url":"\/documentation\/swiftcrossui\/eitherview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","type":"topic","title":"EitherView","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"title":"Published","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"role":"symbol","url":"\/documentation\/swiftcrossui\/view","title":"View","navigatorTitle":[{"text":"View","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:childResults:preferencesOverlay:)":{"url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:childresults:preferencesoverlay:)","type":"topic","abstract":[],"title":"init(size:childResults:preferencesOverlay:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"childResults","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"ViewUpdateResult","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"preferencesOverlay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PreferenceValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"},{"text":"?)","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"type":"topic","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"role":"symbol","kind":"symbol","title":"AnyWidget","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/anywidget"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic","title":"ViewUpdateResult","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","url":"\/documentation\/swiftcrossui\/viewupdateresult"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"url":"\/documentation\/swiftcrossui\/layoutsystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","title":"LayoutSystem","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"role":"symbol","abstract":[],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"kind":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content"}],"type":"topic","url":"\/documentation\/swiftcrossui\/view\/body","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","required":true,"role":"symbol","defaultImplementations":1,"abstract":[{"type":"text","text":"The view’s contents."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","kind":"symbol","title":"SwiftCrossUI","role":"collection","url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:preferences:)":{"abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:preferences:)","title":"init(size:preferences:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"},{"text":", ","kind":"text"},{"text":"preferences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PreferenceValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"},{"text":")","kind":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/preferences":{"abstract":[],"title":"preferences","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preferences","kind":"identifier"},{"text":": ","kind":"text"},{"text":"PreferenceValues","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","url":"\/documentation\/swiftcrossui\/viewupdateresult\/preferences","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","title":"ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"title":"ViewSize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"url":"\/documentation\/swiftcrossui\/viewsize","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/leafView(size:)":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leafView","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","text":"ViewUpdateResult","kind":"typeIdentifier"}],"title":"leafView(size:)","role":"symbol","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/leafview(size:)","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"title":"DynamicProperty","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"role":"symbol","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"type":"codeVoice","code":"Box"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","abstract":[{"text":"A view used by ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/optionalview","role":"symbol","title":"OptionalView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/size":{"type":"topic","kind":"symbol","role":"symbol","abstract":[],"title":"size","url":"\/documentation\/swiftcrossui\/viewupdateresult\/size","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"title":"EmptyView","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true,"type":"reference"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/emptyview"}}}