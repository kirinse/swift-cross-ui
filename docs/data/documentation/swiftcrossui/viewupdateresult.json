{"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewupdateresult"]}],"metadata":{"title":"ViewUpdateResult","externalID":"s:12SwiftCrossUI16ViewUpdateResultV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"modules":[{"name":"SwiftCrossUI"}],"symbolKind":"struct","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewUpdateResult.swift#L1","fileName":"ViewUpdateResult.swift"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)"],"title":"Type Methods","generated":true,"anchor":"Type-Methods"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/preferences":{"url":"\/documentation\/swiftcrossui\/viewupdateresult\/preferences","abstract":[],"type":"topic","role":"symbol","title":"preferences","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preferences","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","text":"PreferenceValues","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/preferences","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:childResults:preferencesOverlay:)":{"abstract":[],"title":"init(size:childResults:preferencesOverlay:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"childResults","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","text":"ViewUpdateResult","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"preferencesOverlay","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV","text":"PreferenceValues","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:childResults:preferencesOverlay:)","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:childresults:preferencesoverlay:)","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"abstract":[],"role":"collectionGroup","kind":"article","title":"View graph","url":"\/documentation\/swiftcrossui\/view-graph","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/size":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/size","role":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/size","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","text":"ViewSize","kind":"typeIdentifier"}],"kind":"symbol","abstract":[],"title":"size"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","type":"topic","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"url":"\/documentation\/swiftcrossui\/anywidget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}],"title":"AnyWidget","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/init(size:preferences:)":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/init(size:preferences:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"},{"text":", ","kind":"text"},{"text":"preferences","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PreferenceValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16PreferenceValuesV"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult\/init(size:preferences:)","type":"topic","title":"init(size:preferences:)","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"url":"\/documentation\/swiftcrossui\/dynamicproperty","title":"DynamicProperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","role":"collectionGroup","kind":"article","url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic","title":"Scene graph","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","kind":"symbol","title":"ViewSize","role":"symbol","type":"topic","navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"defaultImplementations":1,"role":"symbol","title":"body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","url":"\/documentation\/swiftcrossui\/view\/body","abstract":[{"type":"text","text":"The view’s contents."}],"required":true},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"title":"Published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/participatesInStackLayouts":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/participatesInStackLayouts","title":"participatesInStackLayouts","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"participatesInStackLayouts","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/participatesinstacklayouts","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","role":"symbol","navigatorTitle":[{"text":"View","kind":"identifier"}],"type":"topic","kind":"symbol","title":"View","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"url":"\/documentation\/swiftcrossui\/view"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"abstract":[],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"title":"LayoutSystem","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"role":"symbol","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"type":"topic","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"title":"PublishedMarkerProtocol","abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" values nested within an ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","title":"HotReloadableView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"topic","kind":"symbol","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"title":"ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"kind":"symbol","abstract":[{"text":"A view used by ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","url":"\/documentation\/swiftcrossui\/optionalview","type":"topic","title":"OptionalView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"EitherView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"url":"\/documentation\/swiftcrossui\/eitherview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"role":"symbol","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","type":"topic","abstract":[],"title":"ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"role":"symbol","title":"EmptyView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","kind":"symbol","url":"\/documentation\/swiftcrossui\/emptyview","abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult/leafView(size:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leafView","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ViewUpdateResult","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult\/leafView(size:)","abstract":[],"url":"\/documentation\/swiftcrossui\/viewupdateresult\/leafview(size:)","type":"topic","role":"symbol","title":"leafView(size:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","title":"ObservableObject","role":"symbol","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]}}}