{
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12SwiftCrossUI9PublisherC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Publisher"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Publisher"
      }
    ],
    "remoteSource" : {
      "fileName" : "Publisher.swift",
      "url" : "https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/Publisher.swift#L5"
    },
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Publisher"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Publisher"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"
      ]
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/link(toUpstream:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/observe(with:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/send()"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/publisher"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding": {
  "abstract" : [
    {
      "text" : "A value that can read and write a value owned by a source of truth. Can be thought of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a writable reference to the value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "role" : "symbol",
  "title" : "Binding",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/binding"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable": {
  "abstract" : [
    {
      "text" : "Will run a ‘cancel’ action when the cancellable falls out of scope (gets",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deinit’d by ARC). Protects against calling the action twice.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "role" : "symbol",
  "title" : "Cancellable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cancellable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observableobject"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the wrapped value is ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "also be forwarded to the wrapper’s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "role" : "symbol",
  "title" : "Published",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/published"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher": {
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "role" : "symbol",
  "title" : "Publisher",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/init()": {
  "abstract" : [
    {
      "text" : "Creates a new independent publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher\/init()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/link(toUpstream:)": {
  "abstract" : [
    {
      "text" : "Links the publisher to an upstream, meaning that observations from the upstream",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "effectively get forwarded to all observers of this publisher as well.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "link"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "toUpstream"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI9PublisherC",
      "text" : "Publisher"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI11CancellableC",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/link(toUpstream:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "link(toUpstream:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher\/link(toupstream:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/observe(with:)": {
  "abstract" : [
    {
      "text" : "Registers a handler to observe future events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "observe"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI11CancellableC",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/observe(with:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "observe(with:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher\/observe(with:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher/send()": {
  "abstract" : [
    {
      "text" : "Publishes a change to all observers serially on the current thread.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "send"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher\/send()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "send()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher\/send()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/State": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "role" : "symbol",
  "title" : "State",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/state"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/State-basics": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "State basics",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/state-basics"
}
}
}