{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewgraphnode\/children"]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP","text":"ViewGraphNodeChildren"}],"modules":[{"name":"SwiftCrossUI"}],"role":"symbol","externalID":"s:12SwiftCrossUI13ViewGraphNodeC8childrenAA0deF8Children_pvp","symbolKind":"property","title":"children","roleHeading":"Instance Property","remoteSource":{"fileName":"ViewGraphNode.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/ViewGraph\/ViewGraphNode.swift#L22"}},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"children","kind":"identifier"},{"text":": any ","kind":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren","text":"ViewGraphNodeChildren","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"It’s type-erased because otherwise complex implementation details would be forced to the user","type":"text"},{"text":" ","type":"text"},{"text":"or other compromises would have to be made. I believe that this is the best option with Swift’s","type":"text"},{"text":" ","type":"text"},{"text":"current generics landscape.","type":"text"}],"type":"paragraph"}]}],"sections":[],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/children","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode"]]},"abstract":[{"text":"The view’s children (usually just contains more view graph nodes, but can handle extra logic","type":"text"},{"text":" ","type":"text"},{"text":"such as figuring out how to update variable length array of children efficiently).","type":"text"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView1":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TupleView1","kind":"identifier"}],"title":"TupleView1","type":"topic","kind":"symbol","abstract":[{"text":"A view with exactly 1 children. Autogenerated as an alternative to Swift’s not yet","type":"text"},{"text":" ","type":"text"},{"text":"production ready variadic generics.","type":"text"}],"url":"\/documentation\/swiftcrossui\/tupleview1","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1","navigatorTitle":[{"text":"TupleView1","kind":"identifier"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ForEach":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/foreach","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEach","kind":"identifier"}],"navigatorTitle":[{"text":"ForEach","kind":"identifier"}],"title":"ForEach","role":"symbol","abstract":[{"text":"A view that displays a variable amount of children.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewGraphNodeChildren"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewgraphnodechildren","navigatorTitle":[{"kind":"identifier","text":"ViewGraphNodeChildren"}],"title":"ViewGraphNodeChildren","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren","abstract":[{"type":"text","text":"The children of a view graph node. This is implemented by a few different"},{"type":"text","text":" "},{"type":"text","text":"types for various purposes. E.g. variable length with same-typed elements"},{"type":"text","text":" "},{"type":"text","text":"("},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach","type":"reference","isActive":true},{"type":"text","text":"), and fixed length with distinctly-typed elements ("},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1","type":"reference","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2","type":"reference","isActive":true},{"type":"text","text":", etc)."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView2":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TupleView2"}],"title":"TupleView2","role":"symbol","abstract":[{"text":"A view with exactly 2 children. Autogenerated as an alternative to Swift’s not yet","type":"text"},{"text":" ","type":"text"},{"text":"production ready variadic generics.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2","url":"\/documentation\/swiftcrossui\/tupleview2","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TupleView2"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode/children":{"abstract":[{"type":"text","text":"The view’s children (usually just contains more view graph nodes, but can handle extra logic"},{"type":"text","text":" "},{"type":"text","text":"such as figuring out how to update variable length array of children efficiently)."}],"title":"children","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"children"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI21ViewGraphNodeChildrenP","text":"ViewGraphNodeChildren"}],"url":"\/documentation\/swiftcrossui\/viewgraphnode\/children","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode\/children","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode":{"url":"\/documentation\/swiftcrossui\/viewgraphnode","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode","title":"ViewGraphNode","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewGraphNode"}],"abstract":[{"type":"text","text":"A view graph node storing a view, its widget, and its children (likely a collection of more nodes)."}],"navigatorTitle":[{"kind":"identifier","text":"ViewGraphNode"}],"type":"topic","role":"symbol"}}}