{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/appbackend\/runmainloop(_:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"kind":"symbol","identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runMainLoop(_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Often in UI frameworks (such as Gtk), code is run in a callback","type":"text"},{"text":" ","type":"text"},{"text":"after starting the app, and hence this generic root window creation","type":"text"},{"text":" ","type":"text"},{"text":"API must reflect that. This is always the first method to be called","type":"text"},{"text":" ","type":"text"},{"text":"and is where boilerplate app setup should happen.","type":"text"}],"metadata":{"remoteSource":{"fileName":"AppBackend.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L120"},"modules":[{"name":"SwiftCrossUI"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runMainLoop","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true,"externalID":"s:12SwiftCrossUI10AppBackendP11runMainLoopyyyycF","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","title":"runMainLoop(_:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runMainLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Runs the backend’s main run loop. The app will exit when this method"},{"type":"text","text":" "},{"type":"text","text":"returns. This wall always be the first method called by SwiftCrossUI."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The callback is where SwiftCrossUI will create windows, render"},{"type":"text","text":" "},{"type":"text","text":"initial views, start state handlers, etc. The setup action must be"},{"type":"text","text":" "},{"type":"text","text":"run exactly once. The backend must be fully functional before the"},{"type":"text","text":" "},{"type":"text","text":"callback is ready."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"It is up to the backend to decide whether the callback runs before or"},{"type":"text","text":" "},{"type":"text","text":"after the main loop starts. For example, some backends such as the "},{"type":"codeVoice","code":"AppKit"},{"type":"text","text":" "},{"type":"text","text":"backend can create windows and widgets before the run loop starts, so it"},{"type":"text","text":" "},{"type":"text","text":"makes the most sense to run the setup before the main run loop starts (it’s"},{"type":"text","text":" "},{"type":"text","text":"also not possible to run the setup function once the main run loop starts"},{"type":"text","text":" "},{"type":"text","text":"anyway). On the other side is the "},{"type":"codeVoice","code":"Gtk"},{"type":"text","text":" backend which must be on the"},{"type":"text","text":" "},{"type":"text","text":"main loop to create windows and widgets (because otherwise the root"},{"type":"text","text":" "},{"type":"text","text":"window has not yet been created, which is essential in Gtk), so the"},{"type":"text","text":" "},{"type":"text","text":"setup function is passed to "},{"type":"codeVoice","code":"Gtk"},{"type":"text","text":" as a callback to run once the main"},{"type":"text","text":" "},{"type":"text","text":"run loop starts."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/runMainLoop(_:)":{"required":true,"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runMainLoop(_:)","title":"runMainLoop(_:)","url":"\/documentation\/swiftcrossui\/appbackend\/runmainloop(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runMainLoop"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Often in UI frameworks (such as Gtk), code is run in a callback"},{"type":"text","text":" "},{"type":"text","text":"after starting the app, and hence this generic root window creation"},{"type":"text","text":" "},{"type":"text","text":"API must reflect that. This is always the first method to be called"},{"type":"text","text":" "},{"type":"text","text":"and is where boilerplate app setup should happen."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"role":"collection","title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"abstract":[{"type":"text","text":"A backend that can be used to run an app. Usually built on top of an"},{"type":"text","text":" "},{"type":"text","text":"existing UI framework."}],"url":"\/documentation\/swiftcrossui\/appbackend","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","kind":"symbol","role":"symbol","title":"AppBackend","navigatorTitle":[{"kind":"identifier","text":"AppBackend"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppBackend"}]}}}