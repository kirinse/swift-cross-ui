{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/appbackend\/setwindowenvironmentchangehandler(of:to:)"]}],"kind":"symbol","metadata":{"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L211","fileName":"AppBackend.swift"},"modules":[{"name":"SwiftCrossUI"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setWindowEnvironmentChangeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Window","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","required":true,"role":"symbol","symbolKind":"method","title":"setWindowEnvironmentChangeHandler(of:to:)","externalID":"s:12SwiftCrossUI10AppBackendP33setWindowEnvironmentChangeHandler2of2toy0G0Qz_yyctF"},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setWindowEnvironmentChangeHandler(of:to:)","interfaceLanguage":"swift"},"abstract":[{"text":"Sets the handler to be notified when the window’s contribution to the","type":"text"},{"text":" ","type":"text"},{"text":"environment may have to be recomputed. Use this for things such as","type":"text"},{"text":" ","type":"text"},{"text":"updating a window’s scale factor in the environment when the window","type":"text"},{"text":" ","type":"text"},{"text":"changes displays.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setWindowEnvironmentChangeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"window"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","kind":"typeIdentifier","text":"Window"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"In future this may be useful for color space handling."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setWindowEnvironmentChangeHandler(of:to:)":{"type":"topic","abstract":[{"type":"text","text":"Sets the handler to be notified when the window’s contribution to the"},{"type":"text","text":" "},{"type":"text","text":"environment may have to be recomputed. Use this for things such as"},{"type":"text","text":" "},{"type":"text","text":"updating a window’s scale factor in the environment when the window"},{"type":"text","text":" "},{"type":"text","text":"changes displays."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setWindowEnvironmentChangeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","text":"Window","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"setWindowEnvironmentChangeHandler(of:to:)","kind":"symbol","url":"\/documentation\/swiftcrossui\/appbackend\/setwindowenvironmentchangehandler(of:to:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setWindowEnvironmentChangeHandler(of:to:)","required":true,"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","title":"SwiftCrossUI","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Window":{"required":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window","kind":"symbol","abstract":[],"role":"symbol","title":"Window","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Window","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/appbackend\/window"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","navigatorTitle":[{"text":"AppBackend","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/appbackend","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppBackend","kind":"identifier"}],"title":"AppBackend","abstract":[{"text":"A backend that can be used to run an app. Usually built on top of an","type":"text"},{"text":" ","type":"text"},{"text":"existing UI framework.","type":"text"}]}}}