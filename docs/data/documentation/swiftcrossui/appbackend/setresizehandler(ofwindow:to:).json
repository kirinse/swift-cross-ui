{"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"required":true,"modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Instance Method","externalID":"s:12SwiftCrossUI10AppBackendP16setResizeHandler8ofWindow2toy0J0Qz_ys5SIMD2VySiGctF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setResizeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","text":"Window","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","title":"setResizeHandler(ofWindow:to:)","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L154","fileName":"AppBackend.swift"}},"kind":"symbol","identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Sets the handler for the window’s resizing events. "},{"type":"codeVoice","code":"action"},{"type":"text","text":" takes the proposed size"},{"type":"text","text":" "},{"type":"text","text":"of the window and returns the final size for the window (which allows SwiftCrossUI"},{"type":"text","text":" "},{"type":"text","text":"to implement features such as dynamic minimum window sizes based off the content’s"},{"type":"text","text":" "},{"type":"text","text":"minimum size). Setting the resize handler overrides any previous handler."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResizeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofWindow"},{"kind":"text","text":" "},{"kind":"internalParam","text":"window"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","text":"Window","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"navigatorTitle":[{"kind":"identifier","text":"AppBackend"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","url":"\/documentation\/swiftcrossui\/appbackend","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppBackend"}],"title":"AppBackend","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A backend that can be used to run an app. Usually built on top of an"},{"type":"text","text":" "},{"type":"text","text":"existing UI framework."}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Window":{"abstract":[],"kind":"symbol","title":"Window","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Window","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window","required":true,"role":"symbol","url":"\/documentation\/swiftcrossui\/appbackend\/window","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setResizeHandler(ofWindow:to:)":{"title":"setResizeHandler(ofWindow:to:)","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setResizeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","text":"Window","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)","role":"symbol","abstract":[{"text":"Sets the handler for the window’s resizing events. ","type":"text"},{"code":"action","type":"codeVoice"},{"text":" takes the proposed size","type":"text"},{"text":" ","type":"text"},{"text":"of the window and returns the final size for the window (which allows SwiftCrossUI","type":"text"},{"text":" ","type":"text"},{"text":"to implement features such as dynamic minimum window sizes based off the content’s","type":"text"},{"text":" ","type":"text"},{"text":"minimum size). Setting the resize handler overrides any previous handler.","type":"text"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"url":"\/documentation\/swiftcrossui","role":"collection","type":"topic"}}}