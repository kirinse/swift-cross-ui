{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResizeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofWindow"},{"kind":"text","text":" "},{"kind":"internalParam","text":"window"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Window","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"abstract":[{"type":"text","text":"Sets the handler for the window’s resizing events. "},{"type":"codeVoice","code":"action"},{"type":"text","text":" takes the proposed size"},{"type":"text","text":" "},{"type":"text","text":"of the window and returns the final size for the window (which allows SwiftCrossUI"},{"type":"text","text":" "},{"type":"text","text":"to implement features such as dynamic minimum window sizes based off the content’s"},{"type":"text","text":" "},{"type":"text","text":"minimum size). Setting the resize handler overrides any previous handler."}],"metadata":{"externalID":"s:12SwiftCrossUI10AppBackendP16setResizeHandler8ofWindow2toy0J0Qz_ys5SIMD2VySiGctF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResizeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","text":"Window"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","required":true,"modules":[{"name":"SwiftCrossUI"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L152","fileName":"AppBackend.swift"},"title":"setResizeHandler(ofWindow:to:)"},"sections":[],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setResizeHandler(ofWindow:to:)":{"type":"topic","url":"\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)","title":"setResizeHandler(ofWindow:to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setResizeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ofWindow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WindowQa","text":"Window"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V","text":"SIMD2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"kind":"symbol","abstract":[{"type":"text","text":"Sets the handler for the window’s resizing events. "},{"type":"codeVoice","code":"action"},{"type":"text","text":" takes the proposed size"},{"type":"text","text":" "},{"type":"text","text":"of the window and returns the final size for the window (which allows SwiftCrossUI"},{"type":"text","text":" "},{"type":"text","text":"to implement features such as dynamic minimum window sizes based off the content’s"},{"type":"text","text":" "},{"type":"text","text":"minimum size). Setting the resize handler overrides any previous handler."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)","required":true},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AppBackend","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","abstract":[{"text":"A backend that can be used to run an app. Usually built on top of an","type":"text"},{"text":" ","type":"text"},{"text":"existing UI framework.","type":"text"}],"title":"AppBackend","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppBackend","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/appbackend"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Window":{"abstract":[],"url":"\/documentation\/swiftcrossui\/appbackend\/window","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window","required":true,"type":"topic","title":"Window","kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Window","kind":"identifier"}],"role":"symbol"}}}