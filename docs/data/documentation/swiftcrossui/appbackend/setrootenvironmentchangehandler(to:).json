{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setRootEnvironmentChangeHandler","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/appbackend\/setrootenvironmentchangehandler(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setRootEnvironmentChangeHandler(to:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"]]},"metadata":{"symbolKind":"method","modules":[{"name":"SwiftCrossUI"}],"externalID":"s:12SwiftCrossUI10AppBackendP31setRootEnvironmentChangeHandler2toyyyc_tF","title":"setRootEnvironmentChangeHandler(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setRootEnvironmentChangeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","required":true,"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L183","fileName":"AppBackend.swift"},"role":"symbol"},"abstract":[{"text":"Sets the handler to be notified when the root environment may have to get","type":"text"},{"text":" ","type":"text"},{"text":"recomputed. This is intended to only be called once. Calling it more than once","type":"text"},{"text":" ","type":"text"},{"text":"may or may not override the previous handler.","type":"text"}],"sections":[],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","role":"collection","url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"type":"topic","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend":{"title":"AppBackend","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A backend that can be used to run an app. Usually built on top of an"},{"type":"text","text":" "},{"type":"text","text":"existing UI framework."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AppBackend"}],"url":"\/documentation\/swiftcrossui\/appbackend","navigatorTitle":[{"kind":"identifier","text":"AppBackend"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setRootEnvironmentChangeHandler(to:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setRootEnvironmentChangeHandler(to:)","role":"symbol","abstract":[{"text":"Sets the handler to be notified when the root environment may have to get","type":"text"},{"text":" ","type":"text"},{"text":"recomputed. This is intended to only be called once. Calling it more than once","type":"text"},{"text":" ","type":"text"},{"text":"may or may not override the previous handler.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/appbackend\/setrootenvironmentchangehandler(to:)","required":true,"title":"setRootEnvironmentChangeHandler(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setRootEnvironmentChangeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}]}}}