{"kind":"symbol","identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/cancellable"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/init(closure:)"],"anchor":"Initializers","title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/cancel()"],"anchor":"Instance-Methods","title":"Instance Methods"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"metadata":{"navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"symbolKind":"class","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/Cancellable.swift#L3","fileName":"Cancellable.swift"},"externalID":"s:12SwiftCrossUI11CancellableC","modules":[{"name":"SwiftCrossUI"}],"role":"symbol","title":"Cancellable","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"kind":"symbol","title":"Publisher","url":"\/documentation\/swiftcrossui\/publisher","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable/cancel()":{"url":"\/documentation\/swiftcrossui\/cancellable\/cancel()","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/cancel()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cancel","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Runs the cancel action and ensures that it can’t be called a second time.","type":"text"}],"type":"topic","title":"cancel()"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable","title":"Cancellable","abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","role":"symbol","title":"ObservableObject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}],"title":"State","url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"topic","title":"Published","url":"\/documentation\/swiftcrossui\/published","role":"symbol","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable/init(closure:)":{"kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Creates a new cancellable.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/init(closure:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"closure","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/swiftcrossui\/cancellable\/init(closure:)","title":"init(closure:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","role":"symbol","kind":"symbol","title":"Binding","url":"\/documentation\/swiftcrossui\/binding","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","role":"collection","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic"}}}