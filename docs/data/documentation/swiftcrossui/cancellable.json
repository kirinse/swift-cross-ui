{"sections":[],"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/init(closure:)"]},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/cancel()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"},"abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/cancellable"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"]}],"metadata":{"symbolKind":"class","modules":[{"name":"SwiftCrossUI"}],"externalID":"s:12SwiftCrossUI11CancellableC","roleHeading":"Class","role":"symbol","title":"Cancellable","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"remoteSource":{"fileName":"Cancellable.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/Cancellable.swift#L3"}},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"url":"\/documentation\/swiftcrossui\/cancellable","title":"Cancellable","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable/cancel()":{"kind":"symbol","abstract":[{"text":"Runs the cancel action and ensures that it can’t be called a second time.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancel"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/cancel()","title":"cancel()","url":"\/documentation\/swiftcrossui\/cancellable\/cancel()","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable/init(closure:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"closure"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new cancellable."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable\/init(closure:)","url":"\/documentation\/swiftcrossui\/cancellable\/init(closure:)","title":"init(closure:)","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"title":"Binding","url":"\/documentation\/swiftcrossui\/binding","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"kind":"symbol","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"title":"Publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","url":"\/documentation\/swiftcrossui\/publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","kind":"symbol","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":", its ","type":"text"},{"type":"codeVoice","code":"didChange"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"url":"\/documentation\/swiftcrossui\/published","type":"topic","role":"symbol","title":"Published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"navigatorTitle":[{"kind":"identifier","text":"State"}],"url":"\/documentation\/swiftcrossui\/state","title":"State"}}}