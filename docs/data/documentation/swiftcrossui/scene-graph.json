{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Implementation-details"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "role" : "collectionGroup",
    "roleHeading" : "API Collection",
    "title" : "Scene graph"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"
      ]
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroupNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode10"
      ]
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/scene-graph"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget": {
  "abstract" : [
    {
      "text" : "A type-erased widget which can be stored without having to propagate",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the selected backend type through the type system of the whole view graph",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "system of types, which would leak it back into user view implementations",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "making the backend hard to switch for developers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "role" : "symbol",
  "title" : "AnyWidget",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anywidget"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty": {
  "abstract" : [
    {
      "text" : "A property wrapper updated by the view graph before each access to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body-2j1pw",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Conforming types should use internal mutability (see ",
      "type" : "text"
    },
    {
      "code" : "Box",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to implement this protocol’s non-mutable methods if required. This",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "protocol avoids mutation to allow state properties and such to be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "captured even though views are structs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DynamicProperty"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DynamicProperty"
    }
  ],
  "role" : "symbol",
  "title" : "DynamicProperty",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/dynamicproperty"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support if\/else conditional statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "role" : "symbol",
  "title" : "EitherView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/eitherview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView": {
  "abstract" : [
    {
      "text" : "A placeholder view used by elementary ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations which don’t have bodies. Fatally",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "crashes if rendered.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView": {
  "abstract" : [
    {
      "text" : "A view which attempts to persist the state of its view subtree even",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "when the subtree’s structure changes. Uses state serialization (via",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "view graph snapshotting) to persist view state even when a child",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "view’s implementation gets swapped out with an implementation from",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a newly-loaded dylib (this is what makes this useful for hot reloading).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HotReloadableView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HotReloadableView"
    }
  ],
  "role" : "symbol",
  "title" : "HotReloadableView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hotreloadableview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Implementation-details": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Implementation-details",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Implementation details",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/implementation-details"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LayoutSystem"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LayoutSystem"
    }
  ],
  "role" : "symbol",
  "title" : "LayoutSystem",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/layoutsystem"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observableobject"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support non-exhaustive if statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "role" : "symbol",
  "title" : "OptionalView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/optionalview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the wrapped value is ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "also be forwarded to the wrapper’s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "role" : "symbol",
  "title" : "Published",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/published"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values nested within an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will only have their changes published by the parent ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "if marked with this marker protocol. This avoids uncertainty around which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "properties will or will not have their changes published by the parent.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For clarity reasons, you shouldn’t conform your own types to this protocol.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Instead, apply the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " property wrapper when needed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PublishedMarkerProtocol"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PublishedMarkerProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "PublishedMarkerProtocol",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publishedmarkerprotocol"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/SceneGraphNode": {
  "abstract" : [
    {
      "text" : "A persistent representation of a scene that maintains its state even when the scene",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "itself gets recomputed. Required to store view graphs and widget handles etc.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SceneGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SceneGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "SceneGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scenegraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene10": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleScene9": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleScene9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleScene9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleScene9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleScene9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescene9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode10": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode2": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode3": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode4": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode5": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode6": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode7": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode8": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleSceneNode9": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleSceneNode9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleSceneNode9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleSceneNode9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tuplescenenode9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View": {
  "abstract" : [
    {
      "text" : "A view that can be rendered by any backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "role" : "symbol",
  "title" : "View",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "View graph",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view-graph"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body-2j1pw": {
  "abstract" : [
    {
      "text" : "The view’s contents.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "body"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI4ViewP7ContentQa",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body-2j1pw",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "body",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view\/body-2j1pw"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder": {
  "abstract" : [
    {
      "text" : "A result builder used to compose views together into composite views in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a declarative manner.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "ViewBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize": {
  "abstract" : [
    {
      "text" : "The size of a view. Includes ideal size, and minimum\/maximum width and height",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "along with the size you’d expect.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewSize"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewSize"
    }
  ],
  "role" : "symbol",
  "title" : "ViewSize",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewsize"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewUpdateResult"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewUpdateResult"
    }
  ],
  "role" : "symbol",
  "title" : "ViewUpdateResult",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewupdateresult"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowGroup": {
  "abstract" : [
    {
      "text" : "A scene that presents a group of identically structured windows. Currently",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "only supports having a single instance of the window but will eventually",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "support duplicating the window.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowGroup"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowGroup"
    }
  ],
  "role" : "symbol",
  "title" : "WindowGroup",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowgroup"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/WindowGroupNode": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/SceneGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " corresponding to a ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroup",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " scene. Holds",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the scene’s view graph and window handle.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WindowGroupNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/WindowGroupNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WindowGroupNode"
    }
  ],
  "role" : "symbol",
  "title" : "WindowGroupNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/windowgroupnode"
}
}
}