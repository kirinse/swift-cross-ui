{"topicSections":[{"title":"Structures","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/LayoutableChild"],"generated":true,"anchor":"Structures"},{"title":"Type Methods","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)"],"generated":true,"anchor":"Type-Methods"}],"kind":"symbol","identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/layoutsystem"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"title":"LayoutSystem","symbolKind":"enum","role":"symbol","modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Enumeration","externalID":"s:12SwiftCrossUI12LayoutSystemO","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/LayoutSystem.swift#L1","fileName":"LayoutSystem.swift"},"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}]},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"kind":"symbol","title":"LayoutSystem","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/layoutsystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","type":"topic","abstract":[],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"title":"ViewSize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"url":"\/documentation\/swiftcrossui\/published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"type":"topic","kind":"symbol","title":"DynamicProperty","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","role":"symbol","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"role":"symbol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" values nested within an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" property wrapper when needed.","type":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"title":"PublishedMarkerProtocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"kind":"symbol","navigatorTitle":[{"text":"View","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"topic","url":"\/documentation\/swiftcrossui\/view","title":"View","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"abstract":[],"url":"\/documentation\/swiftcrossui\/view-graph","kind":"article","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","title":"View graph","role":"collectionGroup"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"title":"OptionalView","url":"\/documentation\/swiftcrossui\/optionalview","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},{"type":"text","text":" to support non-exhaustive if statements."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateStackLayout"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Backend"},{"kind":"text","text":">("},{"kind":"externalParam","text":"container"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Backend"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Widget","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WidgetQa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"children"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"LayoutSystem","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"LayoutableChild","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO15LayoutableChildV"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"proposedSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"environment"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnvironmentValues","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"backend"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Backend"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dryRun"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inheritStackLayoutParticipation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ViewUpdateResult","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/layoutsystem\/updatestacklayout(container:children:proposedsize:environment:backend:dryrun:inheritstacklayoutparticipation:)","abstract":[],"type":"topic","title":"updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"kind":"symbol","title":"EmptyView","url":"\/documentation\/swiftcrossui\/emptyview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"reference"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"topic","url":"\/documentation\/swiftcrossui\/observableobject","kind":"symbol","role":"symbol","title":"ObservableObject","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ObservableObject","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","role":"symbol","abstract":[{"type":"text","text":"The view’s contents."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content"}],"required":true,"type":"topic","title":"body","url":"\/documentation\/swiftcrossui\/view\/body","defaultImplementations":1},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"title":"Scene graph","type":"topic","abstract":[],"url":"\/documentation\/swiftcrossui\/scene-graph","role":"collectionGroup","kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem/LayoutableChild":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/LayoutableChild","url":"\/documentation\/swiftcrossui\/layoutsystem\/layoutablechild","kind":"symbol","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutableChild"}],"navigatorTitle":[{"kind":"identifier","text":"LayoutableChild"}],"title":"LayoutSystem.LayoutableChild"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","url":"\/documentation\/swiftcrossui","title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"title":"ViewUpdateResult","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"type":"topic","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","kind":"symbol","url":"\/documentation\/swiftcrossui\/viewupdateresult"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"title":"AnyWidget","kind":"symbol","url":"\/documentation\/swiftcrossui\/anywidget","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"kind":"symbol","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"title":"ViewBuilder","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"url":"\/documentation\/swiftcrossui\/eitherview","kind":"symbol","role":"symbol","title":"EitherView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder"},{"type":"text","text":" to support if\/else conditional statements."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"kind":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","type":"topic","url":"\/documentation\/swiftcrossui\/hotreloadableview","title":"HotReloadableView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}]}}}