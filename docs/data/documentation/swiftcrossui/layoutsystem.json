{"kind":"symbol","identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftCrossUI"}],"title":"LayoutSystem","externalID":"s:12SwiftCrossUI12LayoutSystemO","symbolKind":"enum","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"remoteSource":{"fileName":"LayoutSystem.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/LayoutSystem.swift#L1"},"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/swiftcrossui\/layoutsystem"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"topicSections":[{"title":"Structures","anchor":"Structures","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/LayoutableChild"]},{"title":"Type Methods","anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)"]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem/LayoutableChild":{"abstract":[],"kind":"symbol","title":"LayoutSystem.LayoutableChild","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutableChild","kind":"identifier"}],"navigatorTitle":[{"text":"LayoutableChild","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/LayoutableChild","role":"symbol","url":"\/documentation\/swiftcrossui\/layoutsystem\/layoutablechild"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"url":"\/documentation\/swiftcrossui\/dynamicproperty","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"title":"DynamicProperty","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"type":"codeVoice","code":"Box"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic","role":"collectionGroup","kind":"article","title":"Scene graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","title":"LayoutSystem","abstract":[],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/layoutsystem"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"url":"\/documentation\/swiftcrossui\/emptyview","type":"topic","role":"symbol","title":"EmptyView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"reference","isActive":true},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","role":"symbol","title":"ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"url":"\/documentation\/swiftcrossui\/eitherview","type":"topic","title":"EitherView","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","url":"\/documentation\/swiftcrossui\/anywidget","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"title":"AnyWidget"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"title":"Published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"type":"topic","url":"\/documentation\/swiftcrossui\/published","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"kind":"identifier","text":"OptionalView"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/optionalview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","title":"OptionalView","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","abstract":[],"title":"ViewUpdateResult","url":"\/documentation\/swiftcrossui\/viewupdateresult","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol","type":"topic","title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"type":"topic","title":"View graph","abstract":[],"kind":"article","url":"\/documentation\/swiftcrossui\/view-graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","role":"collectionGroup"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ViewBuilder","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","url":"\/documentation\/swiftcrossui\/view","role":"symbol","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"View"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"type":"text","text":" values nested within an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"text":" property wrapper when needed.","type":"text"}],"title":"PublishedMarkerProtocol","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"abstract":[{"type":"text","text":"The view’s contents."}],"url":"\/documentation\/swiftcrossui\/view\/body","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"type":"topic","required":true,"defaultImplementations":1,"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","title":"ViewSize","url":"\/documentation\/swiftcrossui\/viewsize"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateStackLayout","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Backend","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"container","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Widget","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI10AppBackendP6WidgetQa"},{"text":", ","kind":"text"},{"text":"children","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"LayoutSystem","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO"},{"text":".","kind":"text"},{"text":"LayoutableChild","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI12LayoutSystemO15LayoutableChildV"},{"text":"], ","kind":"text"},{"text":"proposedSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"environment","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV"},{"text":", ","kind":"text"},{"text":"backend","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Backend","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"dryRun","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"inheritStackLayoutParticipation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"ViewUpdateResult","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI16ViewUpdateResultV"}],"type":"topic","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem\/updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)","role":"symbol","kind":"symbol","url":"\/documentation\/swiftcrossui\/layoutsystem\/updatestacklayout(container:children:proposedsize:environment:backend:dryrun:inheritstacklayoutparticipation:)","title":"updateStackLayout(container:children:proposedSize:environment:backend:dryRun:inheritStackLayoutParticipation:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"url":"\/documentation\/swiftcrossui\/hotreloadableview","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"title":"HotReloadableView","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"}}}