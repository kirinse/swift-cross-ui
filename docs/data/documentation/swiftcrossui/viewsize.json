{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/SwiftCrossUI\/SQ"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"anchor":"Instance-Properties"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"anchor":"Type-Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"anchor":"Default-Implementations"}],"variants":[{"paths":["\/documentation\/swiftcrossui\/viewsize"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"The width and height components of the view’s minimum and maximum sizes are","type":"text"},{"text":" ","type":"text"},{"text":"stored separately to make it extra clear that they don’t always form some","type":"text"},{"text":" ","type":"text"},{"text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds","type":"text"},{"text":" ","type":"text"},{"text":"may only be achievable along a single axis at a time.","type":"text"}]}]}],"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"]}],"sections":[],"kind":"symbol","metadata":{"role":"symbol","externalID":"s:12SwiftCrossUI8ViewSizeV","symbolKind":"struct","modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Structure","title":"ViewSize","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8","fileName":"ViewSize.swift"}},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","url":"\/documentation\/swiftcrossui\/anywidget","title":"AnyWidget","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"title":"PublishedMarkerProtocol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" values nested within an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" object"},{"type":"text","text":" "},{"type":"text","text":"will only have their changes published by the parent "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" "},{"type":"text","text":"if marked with this marker protocol. This avoids uncertainty around which"},{"type":"text","text":" "},{"type":"text","text":"properties will or will not have their changes published by the parent."},{"type":"text","text":" "},{"type":"text","text":"For clarity reasons, you shouldn’t conform your own types to this protocol."},{"type":"text","text":" "},{"type":"text","text":"Instead, apply the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" property wrapper when needed."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"along with the size you’d expect."}],"navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","title":"ViewSize","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"navigatorTitle":[{"text":"Published","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/published","title":"Published","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"kind":"symbol","type":"topic","title":"OptionalView","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/optionalview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"kind":"symbol","type":"topic","abstract":[{"text":"The height that the view ideally wants to take up assuming that the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"proposed width doesn’t change. Only really differs from "},{"code":"idealSize","type":"codeVoice"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"code":"Text","type":"codeVoice"},{"type":"text","text":")."}],"title":"idealHeightForProposedWidth","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"topic","url":"\/documentation\/swiftcrossui\/view\/body","kind":"symbol","abstract":[{"type":"text","text":"The view’s contents."}],"required":true,"title":"body","defaultImplementations":1,"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"kind":"article","title":"View graph","url":"\/documentation\/swiftcrossui\/view-graph","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/eitherview","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"type":"text","text":" to support if\/else conditional statements."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"role":"symbol","title":"EitherView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","title":"ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"role":"symbol","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/observableobject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","abstract":[{"type":"text","text":"Whether the view should participate in stack layouts when empty."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty","title":"participateInStackLayoutsWhenEmpty","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","title":"maximumWidth","abstract":[{"type":"text","text":"The maximum width that the view can take (if its height remains the same)."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"url":"\/documentation\/swiftcrossui\/viewsize\/size","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","role":"symbol","title":"size","abstract":[{"type":"text","text":"The size that the view now takes up."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The minimum height that the view can take (if its width remains the same)."}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","title":"minimumHeight","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"abstract":[{"text":"The minimum width that the view can take (if its height remains the same).","type":"text"}],"title":"minimumWidth","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimumWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"kind":"symbol","title":"DynamicProperty","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true,"type":"reference"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","kind":"article","title":"Scene graph","type":"topic","url":"\/documentation\/swiftcrossui\/scene-graph","role":"collectionGroup","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","type":"topic","abstract":[{"text":"The view update result for a hidden view. Differs from ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty"},{"text":" ","type":"text"},{"text":"by stopping hidden views from participating in stack layouts (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"getting spacing between the previous child and the hidden child).","type":"text"}],"role":"symbol","title":"hidden","url":"\/documentation\/swiftcrossui\/viewsize\/hidden"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"role":"symbol","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"title":"View","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","url":"\/documentation\/swiftcrossui\/view","type":"topic","navigatorTitle":[{"kind":"identifier","text":"View"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","url":"\/documentation\/swiftcrossui\/viewsize\/empty","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"empty","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ViewSize","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"}],"abstract":[{"text":"The view update result for an empty view.","type":"text"}],"role":"symbol","title":"empty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"abstract":[{"type":"text","text":"The size that the view ideally wants to take up."}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealsize","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","type":"topic","title":"idealSize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"role":"symbol","kind":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","type":"topic","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"title":"HotReloadableView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"url":"\/documentation\/swiftcrossui\/viewbuilder","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"title":"ViewBuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"role":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"type":"topic","title":"LayoutSystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"url":"\/documentation\/swiftcrossui\/layoutsystem","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","type":"topic","title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"minimumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maximumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"abstract":[{"type":"text","text":"The view’s ideal aspect ratio, computed from "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","type":"reference","isActive":true},{"type":"text","text":". If"},{"type":"text","text":" "},{"type":"text","text":"either of the view’s ideal dimensions are 0, then the aspect ratio"},{"type":"text","text":" "},{"type":"text","text":"defaults to 1."}],"role":"symbol","title":"idealAspectRatio","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealAspectRatio"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"kind":"article","url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fixedSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">)"}],"type":"topic","title":"init(fixedSize:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","abstract":[]},"doc://SwiftCrossUI/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/SwiftCrossUI\/SQ","type":"unresolvable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight","abstract":[{"type":"text","text":"The maximum height that the view can take (if its width remains the same)."}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","title":"maximumHeight","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight","abstract":[{"type":"text","text":"The width that the view ideally wants to take up assuming that the"},{"type":"text","text":" "},{"text":"proposed height doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"views that have a trade-off between width and height (such as ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":").","type":"text"}],"title":"idealWidthForProposedHeight","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}],"title":"ViewUpdateResult","url":"\/documentation\/swiftcrossui\/viewupdateresult","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","url":"\/documentation\/swiftcrossui\/emptyview","title":"EmptyView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"kind":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}]}}}