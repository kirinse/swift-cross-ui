{"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/SQ"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewsize"]}],"metadata":{"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"remoteSource":{"fileName":"ViewSize.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8"},"modules":[{"name":"SwiftCrossUI"}],"symbolKind":"struct","roleHeading":"Structure","externalID":"s:12SwiftCrossUI8ViewSizeV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"role":"symbol","title":"ViewSize"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"generated":true,"title":"Instance Properties"},{"anchor":"Type-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"generated":true,"title":"Type Properties"},{"anchor":"Default-Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"The width and height components of the view’s minimum and maximum sizes are","type":"text"},{"text":" ","type":"text"},{"text":"stored separately to make it extra clear that they don’t always form some","type":"text"},{"text":" ","type":"text"},{"text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds","type":"text"},{"text":" ","type":"text"},{"text":"may only be achievable along a single axis at a time.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","kind":"symbol","type":"topic","title":"maximumHeight","abstract":[{"type":"text","text":"The maximum height that the view can take (if its width remains the same)."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximumHeight","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","abstract":[{"text":"The minimum width that the view can take (if its height remains the same).","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","title":"minimumWidth","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimumWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","abstract":[{"text":"The height that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"text":"proposed width doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"views that have a trade-off between width and height (such as ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":").","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealHeightForProposedWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"idealHeightForProposedWidth","url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size","url":"\/documentation\/swiftcrossui\/viewsize\/size","type":"topic","title":"size","abstract":[{"type":"text","text":"The size that the view now takes up."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"abstract":[{"text":"The view update result for a hidden view. Differs from ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"by stopping hidden views from participating in stack layouts (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"getting spacing between the previous child and the hidden child).","type":"text"}],"title":"hidden","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/hidden","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"defaultImplementations":1,"role":"symbol","title":"body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","url":"\/documentation\/swiftcrossui\/view\/body","abstract":[{"type":"text","text":"The view’s contents."}],"required":true},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"minimumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maximumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","type":"topic","role":"symbol","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","title":"ObservableObject","role":"symbol","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"topic","kind":"symbol","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"title":"ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"type":"topic","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"title":"PublishedMarkerProtocol","abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" values nested within an ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealWidthForProposedHeight","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"abstract":[{"text":"The width that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"text":"proposed height doesn’t change. Only really differs from ","type":"text"},{"type":"codeVoice","code":"idealSize"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"views that have a trade-off between width and height (such as ","type":"text"},{"type":"codeVoice","code":"Text"},{"text":").","type":"text"}],"title":"idealWidthForProposedHeight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"url":"\/documentation\/swiftcrossui\/dynamicproperty","title":"DynamicProperty","abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"EitherView","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference","isActive":true},{"type":"text","text":" to support if\/else conditional statements."}],"url":"\/documentation\/swiftcrossui\/eitherview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","type":"topic","abstract":[{"type":"text","text":"A type-erased widget which can be stored without having to propagate"},{"type":"text","text":" "},{"type":"text","text":"the selected backend type through the type system of the whole view graph"},{"type":"text","text":" "},{"type":"text","text":"system of types, which would leak it back into user view implementations"},{"type":"text","text":" "},{"type":"text","text":"making the backend hard to switch for developers."}],"url":"\/documentation\/swiftcrossui\/anywidget","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}],"title":"AnyWidget","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"role":"symbol","type":"topic","title":"init(fixedSize:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fixedSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SIMD2","preciseIdentifier":"s:s5SIMD2V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"kind":"symbol","abstract":[{"text":"A view used by ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"text":" to support non-exhaustive if statements.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","url":"\/documentation\/swiftcrossui\/optionalview","type":"topic","title":"OptionalView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","url":"\/documentation\/swiftcrossui\/viewsize\/idealsize","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"The size that the view ideally wants to take up."}],"title":"idealSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"title":"Published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","title":"HotReloadableView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight","type":"topic","abstract":[{"type":"text","text":"The minimum height that the view can take (if its width remains the same)."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","kind":"symbol","role":"symbol","title":"minimumHeight","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"abstract":[],"role":"collectionGroup","kind":"article","title":"View graph","url":"\/documentation\/swiftcrossui\/view-graph","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"},"doc://SwiftCrossUI/SQ":{"identifier":"doc:\/\/SwiftCrossUI\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"abstract":[],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LayoutSystem"}],"title":"LayoutSystem","navigatorTitle":[{"kind":"identifier","text":"LayoutSystem"}],"role":"symbol","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","kind":"symbol","title":"ViewSize","role":"symbol","type":"topic","navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","title":"participateInStackLayoutsWhenEmpty","url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty","abstract":[{"text":"Whether the view should participate in stack layouts when empty.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"type":"topic","role":"symbol","kind":"symbol","title":"idealAspectRatio","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","abstract":[{"text":"The view’s ideal aspect ratio, computed from ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","type":"reference","isActive":true},{"text":". If","type":"text"},{"text":" ","type":"text"},{"text":"either of the view’s ideal dimensions are 0, then the aspect ratio","type":"text"},{"text":" ","type":"text"},{"text":"defaults to 1.","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealAspectRatio","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","role":"symbol","navigatorTitle":[{"text":"View","kind":"identifier"}],"type":"topic","kind":"symbol","title":"View","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"url":"\/documentation\/swiftcrossui\/view"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","role":"collectionGroup","kind":"article","url":"\/documentation\/swiftcrossui\/scene-graph","type":"topic","title":"Scene graph","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"role":"symbol","title":"EmptyView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","kind":"symbol","url":"\/documentation\/swiftcrossui\/emptyview","abstract":[{"text":"A placeholder view used by elementary ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"text":" implementations which don’t have bodies. Fatally","type":"text"},{"text":" ","type":"text"},{"text":"crashes if rendered.","type":"text"}],"type":"topic","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","url":"\/documentation\/swiftcrossui\/viewsize\/empty","abstract":[{"text":"The view update result for an empty view.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"title":"empty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","abstract":[{"type":"text","text":"The maximum width that the view can take (if its height remains the same)."}],"title":"maximumWidth","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","title":"Equatable Implementations","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations","kind":"article"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"role":"symbol","navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","type":"topic","abstract":[],"title":"ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","role":"collection"}}}