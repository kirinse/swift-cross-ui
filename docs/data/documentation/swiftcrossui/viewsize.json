{"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SwiftCrossUI\/SQ"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The width and height components of the view’s minimum and maximum sizes are"},{"type":"text","text":" "},{"type":"text","text":"stored separately to make it extra clear that they don’t always form some"},{"type":"text","text":" "},{"type":"text","text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds"},{"type":"text","text":" "},{"type":"text","text":"may only be achievable along a single axis at a time."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/viewsize"]}],"sections":[],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"generated":true},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"generated":true}],"metadata":{"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"modules":[{"name":"SwiftCrossUI"}],"role":"symbol","externalID":"s:12SwiftCrossUI8ViewSizeV","roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"title":"ViewSize","remoteSource":{"fileName":"ViewSize.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8"}},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"url":"\/documentation\/swiftcrossui\/viewsize\/size","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"size","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SIMD2","preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size","kind":"symbol","title":"size","abstract":[{"text":"The size that the view now takes up.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","abstract":[{"text":"The maximum width that the view can take (if its height remains the same).","type":"text"}],"type":"topic","title":"maximumWidth","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumWidth"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}]},"doc://SwiftCrossUI/SQ":{"identifier":"doc:\/\/SwiftCrossUI\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","type":"topic","title":"idealSize","kind":"symbol","abstract":[{"type":"text","text":"The size that the view ideally wants to take up."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/idealsize","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealSize","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5SIMD2V","text":"SIMD2","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyWidget","kind":"identifier"}],"navigatorTitle":[{"text":"AnyWidget","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/anywidget","role":"symbol","title":"AnyWidget","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","title":"idealAspectRatio","abstract":[{"type":"text","text":"The view’s ideal aspect ratio, computed from "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","isActive":true,"type":"reference"},{"type":"text","text":". If"},{"type":"text","text":" "},{"type":"text","text":"either of the view’s ideal dimensions are 0, then the aspect ratio"},{"type":"text","text":" "},{"type":"text","text":"defaults to 1."}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealAspectRatio"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"url":"\/documentation\/swiftcrossui\/published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","navigatorTitle":[{"text":"PublishedMarkerProtocol","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublishedMarkerProtocol","kind":"identifier"}],"role":"symbol","title":"PublishedMarkerProtocol","url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","abstract":[{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":" values nested within an ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference","isActive":true},{"text":" property wrapper when needed.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"size","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">, ","kind":"text"},{"text":"idealSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"idealWidthForProposedHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"idealHeightForProposedWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"minimumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"minimumHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maximumWidth","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"maximumHeight","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"participateInStackLayoutsWhenEmpty","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"kind":"symbol","title":"LayoutSystem","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/layoutsystem","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","type":"topic","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"kind":"symbol","title":"ViewBuilder","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","url":"\/documentation\/swiftcrossui\/viewbuilder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"abstract":[{"type":"text","text":"The view update result for an empty view."}],"type":"topic","role":"symbol","title":"empty","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","url":"\/documentation\/swiftcrossui\/viewsize\/empty","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","kind":"symbol","abstract":[{"type":"text","text":"The height that the view ideally wants to take up assuming that the"},{"type":"text","text":" "},{"type":"text","text":"proposed width doesn’t change. Only really differs from "},{"type":"codeVoice","code":"idealSize"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"type":"codeVoice","code":"Text"},{"type":"text","text":")."}],"title":"idealHeightForProposedWidth"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/optionalview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","kind":"symbol","title":"OptionalView","abstract":[{"type":"text","text":"A view used by "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true},{"type":"text","text":" to support non-exhaustive if statements."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","url":"\/documentation\/swiftcrossui\/view","navigatorTitle":[{"kind":"identifier","text":"View"}],"type":"topic","abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"kind":"symbol","title":"View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"type":"topic","kind":"symbol","title":"participateInStackLayoutsWhenEmpty","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty","abstract":[{"type":"text","text":"Whether the view should participate in stack layouts when empty."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol","title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EitherView","kind":"identifier"}],"navigatorTitle":[{"text":"EitherView","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"type":"text","text":" to support if\/else conditional statements."}],"url":"\/documentation\/swiftcrossui\/eitherview","title":"EitherView","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"defaultImplementations":1,"abstract":[{"text":"The view’s contents.","type":"text"}],"url":"\/documentation\/swiftcrossui\/view\/body","role":"symbol","title":"body","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","text":"Content"}],"kind":"symbol","type":"topic","required":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"title":"init(fixedSize:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"fixedSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SIMD2","kind":"typeIdentifier","preciseIdentifier":"s:s5SIMD2V"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":">)","kind":"text"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","isActive":true},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmptyView","kind":"identifier"}],"type":"topic","title":"EmptyView","url":"\/documentation\/swiftcrossui\/emptyview","role":"symbol","navigatorTitle":[{"text":"EmptyView","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"idealWidthForProposedHeight","abstract":[{"type":"text","text":"The width that the view ideally wants to take up assuming that the"},{"type":"text","text":" "},{"text":"proposed height doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"views that have a trade-off between width and height (such as "},{"code":"Text","type":"codeVoice"},{"type":"text","text":")."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","kind":"article","title":"View graph","url":"\/documentation\/swiftcrossui\/view-graph","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximumHeight","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"title":"maximumHeight","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","abstract":[{"type":"text","text":"The maximum height that the view can take (if its width remains the same)."}],"url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight","kind":"symbol","type":"topic","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"role":"symbol","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}],"title":"HotReloadableView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"url":"\/documentation\/swiftcrossui\/hotreloadableview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"type":"topic","title":"Scene graph","kind":"article","url":"\/documentation\/swiftcrossui\/scene-graph","role":"collectionGroup","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"abstract":[{"text":"The minimum width that the view can take (if its height remains the same).","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","role":"symbol","title":"minimumWidth","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimumWidth","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewSize","preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV"}],"abstract":[{"text":"The view update result for a hidden view. Differs from ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"by stopping hidden views from participating in stack layouts (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"getting spacing between the previous child and the hidden child).","type":"text"}],"kind":"symbol","title":"hidden","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","url":"\/documentation\/swiftcrossui\/viewsize\/hidden"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"title":"DynamicProperty","navigatorTitle":[{"text":"DynamicProperty","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","url":"\/documentation\/swiftcrossui\/dynamicproperty","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicProperty","kind":"identifier"}],"abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference","isActive":true},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","abstract":[{"text":"The minimum height that the view can take (if its width remains the same).","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","title":"minimumHeight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"abstract":[],"kind":"symbol","title":"ViewUpdateResult","type":"topic","url":"\/documentation\/swiftcrossui\/viewupdateresult","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewUpdateResult"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewUpdateResult"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"abstract":[{"text":"The size of a view. Includes ideal size, and minimum\/maximum width and height","type":"text"},{"text":" ","type":"text"},{"text":"along with the size you’d expect.","type":"text"}],"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","role":"symbol","kind":"symbol","type":"topic","title":"ViewSize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewsize"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"role":"collectionGroup","type":"topic","kind":"article","abstract":[],"title":"Equatable Implementations","url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"}}}