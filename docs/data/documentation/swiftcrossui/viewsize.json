{"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize"},"abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SwiftCrossUI\/SQ"],"kind":"relationships"}],"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size"],"generated":true},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations"],"generated":true}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}],"roleHeading":"Structure","externalID":"s:12SwiftCrossUI8ViewSizeV","navigatorTitle":[{"kind":"identifier","text":"ViewSize"}],"title":"ViewSize","symbolKind":"struct","remoteSource":{"fileName":"ViewSize.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Layout\/ViewSize.swift#L8"},"role":"symbol","modules":[{"name":"SwiftCrossUI"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewSize"}]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The width and height components of the view’s minimum and maximum sizes are"},{"type":"text","text":" "},{"type":"text","text":"stored separately to make it extra clear that they don’t always form some"},{"type":"text","text":" "},{"type":"text","text":"sort of achievable minimum\/maximum size. The provided minimum\/maximum bounds"},{"type":"text","text":" "},{"type":"text","text":"may only be achievable along a single axis at a time."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swiftcrossui\/viewsize"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/participateInStackLayoutsWhenEmpty":{"url":"\/documentation\/swiftcrossui\/viewsize\/participateinstacklayoutswhenempty","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/participateInStackLayoutsWhenEmpty","title":"participateInStackLayoutsWhenEmpty","abstract":[{"text":"Whether the view should participate in stack layouts when empty.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"type":"topic","title":"SwiftCrossUI","role":"collection","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"title":"Published","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/published"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealAspectRatio":{"title":"idealAspectRatio","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealAspectRatio","abstract":[{"text":"The view’s ideal aspect ratio, computed from ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize"},{"text":". If","type":"text"},{"text":" ","type":"text"},{"text":"either of the view’s ideal dimensions are 0, then the aspect ratio","type":"text"},{"text":" ","type":"text"},{"text":"defaults to 1.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealAspectRatio"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/idealaspectratio","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealSize":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealSize","type":"topic","abstract":[{"text":"The size that the view ideally wants to take up.","type":"text"}],"title":"idealSize","url":"\/documentation\/swiftcrossui\/viewsize\/idealsize","role":"symbol","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealWidthForProposedHeight":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"idealWidthForProposedHeight","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/swiftcrossui\/viewsize\/idealwidthforproposedheight","abstract":[{"text":"The width that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"text":"proposed height doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"views that have a trade-off between width and height (such as ","type":"text"},{"type":"codeVoice","code":"Text"},{"text":").","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealWidthForProposedHeight","type":"topic","kind":"symbol","role":"symbol","title":"idealWidthForProposedHeight"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"title":"View","navigatorTitle":[{"text":"View","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/view","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumWidth":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumWidth","url":"\/documentation\/swiftcrossui\/viewsize\/maximumwidth","title":"maximumWidth","kind":"symbol","role":"symbol","abstract":[{"text":"The maximum width that the view can take (if its height remains the same).","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem","title":"LayoutSystem","abstract":[],"role":"symbol","navigatorTitle":[{"text":"LayoutSystem","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LayoutSystem","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/layoutsystem","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyWidget"}],"navigatorTitle":[{"kind":"identifier","text":"AnyWidget"}],"type":"topic","url":"\/documentation\/swiftcrossui\/anywidget","abstract":[{"text":"A type-erased widget which can be stored without having to propagate","type":"text"},{"text":" ","type":"text"},{"text":"the selected backend type through the type system of the whole view graph","type":"text"},{"text":" ","type":"text"},{"text":"system of types, which would leak it back into user view implementations","type":"text"},{"text":" ","type":"text"},{"text":"making the backend hard to switch for developers.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget","title":"AnyWidget"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/empty":{"role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize\/empty","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"empty"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"abstract":[{"text":"The view update result for an empty view.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty","title":"empty","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/idealHeightForProposedWidth":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"abstract":[{"text":"The height that the view ideally wants to take up assuming that the","type":"text"},{"text":" ","type":"text"},{"text":"proposed width doesn’t change. Only really differs from ","type":"text"},{"code":"idealSize","type":"codeVoice"},{"text":" for","type":"text"},{"text":" ","type":"text"},{"text":"views that have a trade-off between width and height (such as ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":").","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/idealHeightForProposedWidth","role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/viewsize\/idealheightforproposedwidth","title":"idealHeightForProposedWidth","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","abstract":[],"kind":"symbol","role":"symbol","title":"init(size:idealSize:idealWidthForProposedHeight:idealHeightForProposedWidth:minimumWidth:minimumHeight:maximumWidth:maximumHeight:participateInStackLayoutsWhenEmpty:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"idealWidthForProposedHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"idealHeightForProposedWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"minimumWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minimumHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maximumWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"maximumHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"participateInStackLayoutsWhenEmpty"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftcrossui\/viewsize\/init(size:idealsize:idealwidthforproposedheight:idealheightforproposedwidth:minimumwidth:minimumheight:maximumwidth:maximumheight:participateinstacklayoutswhenempty:)","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumHeight":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumHeight","abstract":[{"text":"The minimum height that the view can take (if its width remains the same).","type":"text"}],"kind":"symbol","role":"symbol","title":"minimumHeight","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/swiftcrossui\/viewsize\/minimumheight","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/size":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/size","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"size"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">"}],"type":"topic","title":"size","abstract":[{"text":"The size that the view now takes up.","type":"text"}],"url":"\/documentation\/swiftcrossui\/viewsize\/size"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView":{"type":"topic","navigatorTitle":[{"text":"OptionalView","kind":"identifier"}],"kind":"symbol","title":"OptionalView","role":"symbol","abstract":[{"type":"text","text":"A view used by "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","isActive":true,"type":"reference"},{"type":"text","text":" to support non-exhaustive if statements."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/optionalview"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View-graph":{"kind":"article","abstract":[],"url":"\/documentation\/swiftcrossui\/view-graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph","role":"collectionGroup","type":"topic","title":"View graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/init(fixedSize:)":{"url":"\/documentation\/swiftcrossui\/viewsize\/init(fixedsize:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/init(fixedSize:)","abstract":[],"title":"init(fixedSize:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fixedSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s5SIMD2V","kind":"typeIdentifier","text":"SIMD2"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">)"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView":{"url":"\/documentation\/swiftcrossui\/emptyview","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A placeholder view used by elementary "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"},{"type":"text","text":" implementations which don’t have bodies. Fatally"},{"type":"text","text":" "},{"type":"text","text":"crashes if rendered."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmptyView"}],"navigatorTitle":[{"kind":"identifier","text":"EmptyView"}],"title":"EmptyView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","kind":"symbol","title":"HotReloadableView","role":"symbol","abstract":[{"text":"A view which attempts to persist the state of its view subtree even","type":"text"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HotReloadableView","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","type":"topic","navigatorTitle":[{"text":"HotReloadableView","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/maximumHeight":{"role":"symbol","abstract":[{"text":"The maximum height that the view can take (if its width remains the same).","type":"text"}],"kind":"symbol","type":"topic","title":"maximumHeight","url":"\/documentation\/swiftcrossui\/viewsize\/maximumheight","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/maximumHeight","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumHeight"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"}]},"doc://SwiftCrossUI/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwiftCrossUI\/SQ","title":"Swift.Equatable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/hidden":{"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"hidden"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12SwiftCrossUI8ViewSizeV","kind":"typeIdentifier","text":"ViewSize"}],"role":"symbol","abstract":[{"text":"The view update result for a hidden view. Differs from ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/empty"},{"text":" ","type":"text"},{"text":"by stopping hidden views from participating in stack layouts (i.e.","type":"text"},{"text":" ","type":"text"},{"text":"getting spacing between the previous child and the hidden child).","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/hidden","title":"hidden","url":"\/documentation\/swiftcrossui\/viewsize\/hidden"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ViewBuilder"}],"type":"topic","url":"\/documentation\/swiftcrossui\/viewbuilder","abstract":[{"type":"text","text":"A result builder used to compose views together into composite views in"},{"type":"text","text":" "},{"type":"text","text":"a declarative manner."}],"title":"ViewBuilder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewBuilder"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize":{"navigatorTitle":[{"text":"ViewSize","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize","role":"symbol","url":"\/documentation\/swiftcrossui\/viewsize","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewSize","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ViewSize","abstract":[{"type":"text","text":"The size of a view. Includes ideal size, and minimum\/maximum width and height"},{"type":"text","text":" "},{"type":"text","text":"along with the size you’d expect."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph":{"kind":"article","role":"collectionGroup","abstract":[],"type":"topic","title":"Scene graph","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph","url":"\/documentation\/swiftcrossui\/scene-graph"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult":{"role":"symbol","title":"ViewUpdateResult","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewUpdateResult","kind":"identifier"}],"navigatorTitle":[{"text":"ViewUpdateResult","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewupdateresult","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol":{"abstract":[{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":" values nested within an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"will only have their changes published by the parent ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":" ","type":"text"},{"text":"if marked with this marker protocol. This avoids uncertainty around which","type":"text"},{"text":" ","type":"text"},{"text":"properties will or will not have their changes published by the parent.","type":"text"},{"text":" ","type":"text"},{"text":"For clarity reasons, you shouldn’t conform your own types to this protocol.","type":"text"},{"text":" ","type":"text"},{"text":"Instead, apply the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"reference"},{"text":" property wrapper when needed.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedMarkerProtocol"}],"url":"\/documentation\/swiftcrossui\/publishedmarkerprotocol","navigatorTitle":[{"kind":"identifier","text":"PublishedMarkerProtocol"}],"role":"symbol","title":"PublishedMarkerProtocol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","url":"\/documentation\/swiftcrossui\/viewsize\/equatable-implementations","abstract":[],"kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/Equatable-Implementations","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"title":"DynamicProperty","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}],"url":"\/documentation\/swiftcrossui\/dynamicproperty","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body"},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa","kind":"typeIdentifier","text":"Content"}],"url":"\/documentation\/swiftcrossui\/view\/body","title":"body","kind":"symbol","type":"topic","defaultImplementations":1,"required":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","abstract":[{"type":"text","text":"The view’s contents."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView":{"navigatorTitle":[{"kind":"identifier","text":"EitherView"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EitherView"}],"kind":"symbol","role":"symbol","title":"EitherView","url":"\/documentation\/swiftcrossui\/eitherview","abstract":[{"text":"A view used by ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"reference"},{"text":" to support if\/else conditional statements.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize/minimumWidth":{"role":"symbol","title":"minimumWidth","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimumWidth"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/swiftcrossui\/viewsize\/minimumwidth","abstract":[{"text":"The minimum width that the view can take (if its height remains the same).","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize\/minimumWidth","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"title":"ObservableObject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"url":"\/documentation\/swiftcrossui\/observableobject"}}}