{"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"],"type":"conformingTypes","kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/observableobject"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"topicSections":[{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"title":"Instance Properties"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The default implementation only publishes changes made to properties that","type":"text"},{"text":" ","type":"text"},{"text":"have been wrapped with the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" property wrapper. Even properties","type":"text"},{"text":" ","type":"text"},{"text":"that themselves conform to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":" must be wrapped with the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"text":" property wrapper for clarity.","type":"text"}]},{"code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"sections":[],"metadata":{"symbolKind":"protocol","modules":[{"name":"SwiftCrossUI"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"title":"ObservableObject","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L34","fileName":"ObservableObject.swift"},"externalID":"s:12SwiftCrossUI16ObservableObjectP"},"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"url":"\/documentation\/swiftcrossui\/observableobject","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol","title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","url":"\/documentation\/swiftcrossui","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"url":"\/documentation\/swiftcrossui\/published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"title":"Cancellable","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","url":"\/documentation\/swiftcrossui\/cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"kind":"symbol","title":"State","navigatorTitle":[{"kind":"identifier","text":"State"}],"url":"\/documentation\/swiftcrossui\/state","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"topic","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"role":"symbol","url":"\/documentation\/swiftcrossui\/binding","title":"Binding","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"}],"required":true,"defaultImplementations":1,"title":"didChange","kind":"symbol","url":"\/documentation\/swiftcrossui\/observableobject\/didchange","role":"symbol","abstract":[{"text":"A publisher which publishes changes made to the object. Only publishes changes made to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" properties by default.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","title":"Publisher","type":"topic","navigatorTitle":[{"text":"Publisher","kind":"identifier"}]}}}