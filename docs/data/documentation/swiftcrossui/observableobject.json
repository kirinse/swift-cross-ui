{"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/observableobject"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"},{"text":" : AnyObject","kind":"text"}]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The default implementation only publishes changes made to properties that","type":"text"},{"text":" ","type":"text"},{"text":"have been wrapped with the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper. Even properties","type":"text"},{"text":" ","type":"text"},{"text":"that themselves conform to ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":" must be wrapped with the","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" property wrapper for clarity.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use an observable object as part of a view’s state, use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"},{"type":"text","text":" property"},{"type":"text","text":" "},{"type":"text","text":"wrapper. It’ll detect that it’s been given an observable and will forward any"},{"type":"text","text":" "},{"type":"text","text":"observations published by the object’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"},{"type":"text","text":" publisher."}]},{"type":"codeListing","syntax":"swift","code":["class CounterState: ObservableObject {","    @Published var count = 0","}","","struct CounterView: View {","    @State var state = CounterState()","","    var body: some View {","        HStack {","            Button(\"-\") {","                state.count -= 1","            }","            Text(\"Count: \\(state.count)\")","            Button(\"+\") {","                state.count += 1","            }","        }","    }","}"]}],"kind":"content"}],"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"metadata":{"externalID":"s:12SwiftCrossUI16ObservableObjectP","role":"symbol","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L60","fileName":"ObservableObject.swift"},"title":"ObservableObject","modules":[{"name":"SwiftCrossUI"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"generated":true}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"]}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","interfaceLanguage":"swift"},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"defaultImplementations":1,"required":true,"abstract":[{"type":"text","text":"A publisher which publishes changes made to the object. Only publishes changes made to"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" properties by default."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"}],"url":"\/documentation\/swiftcrossui\/observableobject\/didchange","kind":"symbol","type":"topic","title":"didChange","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"url":"\/documentation\/swiftcrossui\/binding","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"type":"topic","title":"Binding","abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","navigatorTitle":[{"text":"Binding","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"navigatorTitle":[{"text":"State","kind":"identifier"}],"role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"role":"symbol","title":"Published","kind":"symbol","type":"topic","navigatorTitle":[{"text":"Published","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/published","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"text":", its ","type":"text"},{"type":"codeVoice","code":"didChange"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","role":"symbol","abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"title":"Cancellable","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","type":"topic","title":"Publisher","navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"url":"\/documentation\/swiftcrossui\/publisher","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"}}}