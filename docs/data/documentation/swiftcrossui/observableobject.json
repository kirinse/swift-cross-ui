{"topicSections":[{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"]}],"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"roleHeading":"Protocol","externalID":"s:12SwiftCrossUI16ObservableObjectP","modules":[{"name":"SwiftCrossUI"}],"title":"ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L34","fileName":"ObservableObject.swift"},"symbolKind":"protocol"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"relationshipsSections":[{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/observableobject"]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default implementation only publishes changes made to properties that"},{"type":"text","text":" "},{"type":"text","text":"have been wrapped with the "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper. Even properties"},{"type":"text","text":" "},{"type":"text","text":"that themselves conform to "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":" must be wrapped with the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true},{"type":"text","text":" property wrapper for clarity."}]},{"syntax":"swift","type":"codeListing","code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"]}]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"url":"\/documentation\/swiftcrossui","role":"collection","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}],"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"url":"\/documentation\/swiftcrossui\/state","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","title":"State"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"url":"\/documentation\/swiftcrossui\/binding","abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"type":"topic","title":"Binding","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","role":"symbol","navigatorTitle":[{"text":"Binding","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"title":"Publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","url":"\/documentation\/swiftcrossui\/publisher","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"url":"\/documentation\/swiftcrossui\/observableobject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"kind":"symbol","title":"ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","defaultImplementations":1,"kind":"symbol","abstract":[{"text":"A publisher which publishes changes made to the object. Only publishes changes made to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","isActive":true,"type":"reference"},{"text":" properties by default.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"didChange"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Publisher","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"}],"required":true,"type":"topic","role":"symbol","title":"didChange","url":"\/documentation\/swiftcrossui\/observableobject\/didchange"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"topic","title":"Published","role":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"navigatorTitle":[{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"url":"\/documentation\/swiftcrossui\/cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","type":"topic","kind":"symbol","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"title":"Cancellable"}}}