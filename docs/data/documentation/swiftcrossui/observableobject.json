{"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"},{"text":" : AnyObject","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The default implementation only publishes changes made to properties that"},{"type":"text","text":" "},{"type":"text","text":"have been wrapped with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" property wrapper. Even properties"},{"type":"text","text":" "},{"type":"text","text":"that themselves conform to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":" must be wrapped with the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" property wrapper for clarity."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["class NestedState: ObservableObject {","    \/\/ Both `startIndex` and `endIndex` will have their changes published to `NestedState`'s","    \/\/ `didChange` publisher.","    @Published","    var startIndex = 0","","    @Published","    var endIndex = 0","}","","class CounterState: ObservableObject {","    \/\/ Only changes to `count` will be published (it is the only property with `@Published`)","    @Published","    var count = 0","","    var otherCount = 0","","    \/\/ Even though `nested` is `ObservableObject`, its changes won't be","    \/\/ published because if you could have observed properties without","    \/\/ `@Published` things would get pretty messy and you'd always have to","    \/\/ check the definition of the type of each property to know exactly","    \/\/ what would and wouldn't cause updates.","    var nested = NestedState()","}"]},{"inlineContent":[{"text":"To use an observable object as part of a view’s state, use the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"},{"text":" property","type":"text"},{"text":" ","type":"text"},{"text":"wrapper. It’ll detect that it’s been given an observable and will forward any","type":"text"},{"text":" ","type":"text"},{"text":"observations published by the object’s ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"},{"text":" publisher.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["class CounterState: ObservableObject {","    @Published var count = 0","}","","struct CounterView: View {","    @State var state = CounterState()","","    var body: some View {","        HStack {","            Button(\"-\") {","                state.count -= 1","            }","            Text(\"Count: \\(state.count)\")","            Button(\"+\") {","                state.count += 1","            }","        }","    }","}"]}]}],"topicSections":[{"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange"],"generated":true}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"metadata":{"symbolKind":"protocol","modules":[{"name":"SwiftCrossUI"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"remoteSource":{"fileName":"ObservableObject.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/ObservableObject.swift#L60"},"externalID":"s:12SwiftCrossUI16ObservableObjectP","roleHeading":"Protocol","role":"symbol","title":"ObservableObject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/observableobject"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"],"type":"conformingTypes"}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"title":"SwiftCrossUI","kind":"symbol","role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"url":"\/documentation\/swiftcrossui\/observableobject","title":"ObservableObject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","kind":"symbol","type":"topic","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/cancellable","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","title":"Cancellable","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","title":"Publisher","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"kind":"symbol","url":"\/documentation\/swiftcrossui\/published","type":"topic","title":"Published","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"navigatorTitle":[{"kind":"identifier","text":"Published"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject/didChange":{"defaultImplementations":1,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didChange","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Publisher","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9PublisherC"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject\/didChange","kind":"symbol","title":"didChange","required":true,"abstract":[{"type":"text","text":"A publisher which publishes changes made to the object. Only publishes changes made to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published"},{"type":"text","text":" properties by default."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject\/didchange","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"State","kind":"identifier"}],"abstract":[],"url":"\/documentation\/swiftcrossui\/state","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","title":"State"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","title":"Binding","kind":"symbol","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/binding","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}]}}}