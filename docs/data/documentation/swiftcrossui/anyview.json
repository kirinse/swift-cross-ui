{"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView\/init(_:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView\/body"],"anchor":"Instance-Properties","generated":true,"title":"Instance Properties"},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView\/View-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/anyview"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView"},"kind":"symbol","abstract":[{"type":"text","text":"A view which erases the type of its child. Useful in dynamic"},{"type":"text","text":" "},{"type":"text","text":"use-cases such as hot reloading, but not recommended if there"},{"type":"text","text":" "},{"type":"text","text":"are alternate strongly-typed solutions to your problem since"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView"},{"type":"text","text":" has significantly more overhead than strongly"},{"type":"text","text":" "},{"type":"text","text":"typed views."}],"metadata":{"roleHeading":"Structure","modules":[{"name":"SwiftCrossUI"}],"externalID":"s:12SwiftCrossUI7AnyViewV","navigatorTitle":[{"kind":"identifier","text":"AnyView"}],"remoteSource":{"fileName":"AnyView.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/AnyView.swift#L8"},"role":"symbol","symbolKind":"struct","title":"AnyView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyView"}]},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VStack","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HorizontalAlignment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HStack","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VerticalAlignment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ZStack","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Color","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Divider","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Spacer","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Group","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ScrollView"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyView","kind":"identifier"}],"languages":["swift"]}]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"url":"\/documentation\/swiftcrossui","role":"collection","type":"topic","title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"url":"\/documentation\/swiftcrossui\/view","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"View"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"title":"View","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ZStack":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZStack"}],"title":"ZStack","url":"\/documentation\/swiftcrossui\/zstack","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ZStack","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"ZStack"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyView":{"url":"\/documentation\/swiftcrossui\/anyview","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A view which erases the type of its child. Useful in dynamic"},{"type":"text","text":" "},{"type":"text","text":"use-cases such as hot reloading, but not recommended if there"},{"type":"text","text":" "},{"type":"text","text":"are alternate strongly-typed solutions to your problem since"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView","isActive":true},{"type":"text","text":" has significantly more overhead than strongly"},{"type":"text","text":" "},{"type":"text","text":"typed views."}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyView"}],"title":"AnyView","navigatorTitle":[{"kind":"identifier","text":"AnyView"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HStack":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HStack","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HStack","kind":"symbol","navigatorTitle":[{"text":"HStack","kind":"identifier"}],"title":"HStack","abstract":[{"type":"text","text":"A view that arranges its subviews horizontally."}],"url":"\/documentation\/swiftcrossui\/hstack"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Image":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image","navigatorTitle":[{"text":"Image","kind":"identifier"}],"title":"Image","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Image","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/image","abstract":[{"type":"text","text":"A view that displays an image."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ForEach":{"url":"\/documentation\/swiftcrossui\/foreach","type":"topic","title":"ForEach","navigatorTitle":[{"kind":"identifier","text":"ForEach"}],"abstract":[{"type":"text","text":"A view that displays a variable amount of children."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEach"}],"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HorizontalAlignment":{"url":"\/documentation\/swiftcrossui\/horizontalalignment","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HorizontalAlignment","abstract":[{"type":"text","text":"Alignment of items layed out along the horizontal axis."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HorizontalAlignment","kind":"identifier"}],"navigatorTitle":[{"text":"HorizontalAlignment","kind":"identifier"}],"role":"symbol","type":"topic","title":"HorizontalAlignment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/VerticalAlignment":{"title":"VerticalAlignment","type":"topic","abstract":[{"type":"text","text":"Alignment of items layed out along the vertical axis."}],"role":"symbol","url":"\/documentation\/swiftcrossui\/verticalalignment","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VerticalAlignment","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"VerticalAlignment","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VerticalAlignment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Group":{"type":"topic","title":"Group","role":"symbol","abstract":[{"type":"text","text":"A view that groups views together without affecting their layout (allowing"},{"type":"text","text":" "},{"type":"text","text":"modifiers to be applied to a whole group of views at once)."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Group","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Group","url":"\/documentation\/swiftcrossui\/group","kind":"symbol","navigatorTitle":[{"text":"Group","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewBuilder","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewbuilder","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder","type":"topic","abstract":[{"text":"A result builder used to compose views together into composite views in","type":"text"},{"text":" ","type":"text"},{"text":"a declarative manner.","type":"text"}],"navigatorTitle":[{"text":"ViewBuilder","kind":"identifier"}],"kind":"symbol","title":"ViewBuilder","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Color":{"type":"topic","abstract":[{"text":"An RGBA representation of a color.","type":"text"}],"url":"\/documentation\/swiftcrossui\/color","title":"Color","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Color","kind":"identifier"}],"navigatorTitle":[{"text":"Color","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Color","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyView/View-Implementations":{"title":"View Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"url":"\/documentation\/swiftcrossui\/anyview\/view-implementations","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView\/View-Implementations"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/VStack":{"navigatorTitle":[{"text":"VStack","kind":"identifier"}],"type":"topic","title":"VStack","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/VStack","url":"\/documentation\/swiftcrossui\/vstack","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A view that arranges its subviews vertically."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VStack","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Divider":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Divider","navigatorTitle":[{"kind":"identifier","text":"Divider"}],"abstract":[{"text":"A divider that expands along the minor axis of the containing stack layout","type":"text"},{"text":" ","type":"text"},{"text":"(or horizontally otherwise). In dark mode it’s white with 10% opacity, and","type":"text"},{"text":" ","type":"text"},{"text":"in light mode it’s black with 10% opacity.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/divider","type":"topic","title":"Divider","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Divider"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyView/body":{"abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI9EmptyViewV","text":"EmptyView"}],"url":"\/documentation\/swiftcrossui\/anyview\/body","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView\/body","role":"symbol","kind":"symbol","title":"body","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ScrollView":{"kind":"symbol","role":"symbol","title":"ScrollView","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScrollView"}],"navigatorTitle":[{"kind":"identifier","text":"ScrollView"}],"url":"\/documentation\/swiftcrossui\/scrollview","abstract":[{"text":"A view that is scrollable when it would otherwise overflow available space. Use the","type":"text"},{"text":" ","type":"text"},{"code":"View\/frame","type":"codeVoice"},{"text":" modifier to constrain height if necessary.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ScrollView"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Spacer":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Spacer","type":"topic","title":"Spacer","abstract":[{"text":"A flexible space that expands along the major axis of its containing","type":"text"},{"text":" ","type":"text"},{"text":"stack layout, or on both axes if not contained in a stack.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Spacer"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Spacer"}],"url":"\/documentation\/swiftcrossui\/spacer"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Text":{"title":"Text","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Text","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/text","navigatorTitle":[{"text":"Text","kind":"identifier"}],"abstract":[{"type":"text","text":"A text view."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyView/init(_:)":{"abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyView\/init(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","url":"\/documentation\/swiftcrossui\/anyview\/init(_:)","type":"topic"}}}