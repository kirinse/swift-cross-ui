{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Implementation-details"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View-graph"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "role" : "collectionGroup",
    "roleHeading" : "API Collection",
    "title" : "View graph"
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph"
      ]
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNode",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphSnapshotter",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNodeTransformer",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewChildren",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView10",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren2",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren6",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren8",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren10"
      ]
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/view-graph"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyViewGraphNode": {
  "abstract" : [
    {
      "text" : "A type-erased ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Used by implementations of ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to avoid leaking the selected backend into ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations (which would be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "an annoying complexity for users of the library and it worth the slight sacrifice",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "in performance and strong-typing). The user never sees such type-erased wrappers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "AnyViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anyviewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AnyWidget": {
  "abstract" : [
    {
      "text" : "A type-erased widget which can be stored without having to propagate",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the selected backend type through the type system of the whole view graph",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "system of types, which would leak it back into user view implementations",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "making the backend hard to switch for developers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AnyWidget",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyWidget"
    }
  ],
  "role" : "symbol",
  "title" : "AnyWidget",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/anywidget"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty": {
  "abstract" : [
    {
      "text" : "A property wrapper updated by the view graph before each access to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body-2j1pw",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". Conforming types should use internal mutability (see ",
      "type" : "text"
    },
    {
      "code" : "Box",
      "type" : "codeVoice"
    },
    {
      "text" : ")",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to implement this protocolâ€™s non-mutable methods if required. This",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "protocol avoids mutation to allow state properties and such to be",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "captured even though views are structs.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DynamicProperty"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DynamicProperty"
    }
  ],
  "role" : "symbol",
  "title" : "DynamicProperty",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/dynamicproperty"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EitherView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support if\/else conditional statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EitherView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EitherView"
    }
  ],
  "role" : "symbol",
  "title" : "EitherView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/eitherview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyView": {
  "abstract" : [
    {
      "text" : "A placeholder view used by elementary ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " implementations which donâ€™t have bodies. Fatally",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "crashes if rendered.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyView"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/EmptyViewChildren": {
  "abstract" : [
    {
      "text" : "The children of a node with no children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EmptyViewChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/EmptyViewChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EmptyViewChildren"
    }
  ],
  "role" : "symbol",
  "title" : "EmptyViewChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/emptyviewchildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ErasedViewGraphNode": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ErasedViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/erasedviewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ErasedViewGraphNodeTransformer": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNodeTransformer"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ErasedViewGraphNodeTransformer",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ErasedViewGraphNodeTransformer"
    }
  ],
  "role" : "symbol",
  "title" : "ErasedViewGraphNodeTransformer",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/erasedviewgraphnodetransformer"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ForEach": {
  "abstract" : [
    {
      "text" : "A view that displays a variable amount of children.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ForEach"
    }
  ],
  "role" : "symbol",
  "title" : "ForEach",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/foreach"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView": {
  "abstract" : [
    {
      "text" : "A view which attempts to persist the state of its view subtree even",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "when the subtreeâ€™s structure changes. Uses state serialization (via",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "view graph snapshotting) to persist view state even when a child",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "viewâ€™s implementation gets swapped out with an implementation from",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a newly-loaded dylib (this is what makes this useful for hot reloading).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "HotReloadableView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "HotReloadableView"
    }
  ],
  "role" : "symbol",
  "title" : "HotReloadableView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/hotreloadableview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Implementation-details": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Implementation-details",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Implementation details",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/implementation-details"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/LayoutSystem": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "LayoutSystem"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/LayoutSystem",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "LayoutSystem"
    }
  ],
  "role" : "symbol",
  "title" : "LayoutSystem",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/layoutsystem"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observableobject"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/OptionalView": {
  "abstract" : [
    {
      "text" : "A view used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to support non-exhaustive if statements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/OptionalView",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OptionalView"
    }
  ],
  "role" : "symbol",
  "title" : "OptionalView",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/optionalview"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the wrapped value is ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "also be forwarded to the wrapperâ€™s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "role" : "symbol",
  "title" : "Published",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/published"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/PublishedMarkerProtocol": {
  "abstract" : [
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " values nested within an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " object",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "will only have their changes published by the parent ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "if marked with this marker protocol. This avoids uncertainty around which",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "properties will or will not have their changes published by the parent.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "For clarity reasons, you shouldnâ€™t conform your own types to this protocol.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Instead, apply the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " property wrapper when needed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PublishedMarkerProtocol"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/PublishedMarkerProtocol",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PublishedMarkerProtocol"
    }
  ],
  "role" : "symbol",
  "title" : "PublishedMarkerProtocol",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publishedmarkerprotocol"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene-graph": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene-graph",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Scene graph",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scene-graph"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView1": {
  "abstract" : [
    {
      "text" : "A view with exactly 1 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView1"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView10": {
  "abstract" : [
    {
      "text" : "A view with exactly 10 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView2": {
  "abstract" : [
    {
      "text" : "A view with exactly 2 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView3": {
  "abstract" : [
    {
      "text" : "A view with exactly 3 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView4": {
  "abstract" : [
    {
      "text" : "A view with exactly 4 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView5": {
  "abstract" : [
    {
      "text" : "A view with exactly 5 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView6": {
  "abstract" : [
    {
      "text" : "A view with exactly 6 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView7": {
  "abstract" : [
    {
      "text" : "A view with exactly 7 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView8": {
  "abstract" : [
    {
      "text" : "A view with exactly 8 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleView9": {
  "abstract" : [
    {
      "text" : "A view with exactly 9 children. Autogenerated as an alternative to Swiftâ€™s not yet",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "production ready variadic generics.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleView9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleView9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleView9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleview9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren1": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 1 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren1"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren1",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren1"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren1",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren10": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 10 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView10",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren10"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren10",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren10"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren10",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren10"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren2": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 2 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren2"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren2",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren2"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren2",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren2"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren3": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 3 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView3",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren3"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren3",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren3"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren3",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren4": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 4 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView4",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren4"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren4",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren4"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren4",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren5": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 5 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView5",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren5"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren5",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren5"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren5",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren6": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 6 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView6",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren6"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren6",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren6"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren6",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren6"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren7": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 7 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView7",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren7"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren7",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren7"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren7",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren8": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 8 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView8",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren8"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren8",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren8"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren8",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren8"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TupleViewChildren9": {
  "abstract" : [
    {
      "text" : "A fixed-length strongly-typed collection of 9 child nodes. A counterpart to",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView9",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren9"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleViewChildren9",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TupleViewChildren9"
    }
  ],
  "role" : "symbol",
  "title" : "TupleViewChildren9",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/tupleviewchildren9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View": {
  "abstract" : [
    {
      "text" : "A view that can be rendered by any backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "View"
    }
  ],
  "role" : "symbol",
  "title" : "View",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body-2j1pw": {
  "abstract" : [
    {
      "text" : "The viewâ€™s contents.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "body"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI4ViewP7ContentQa",
      "text" : "Content"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body-2j1pw",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "body",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view\/body-2j1pw"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewBuilder": {
  "abstract" : [
    {
      "text" : "A result builder used to compose views together into composite views in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a declarative manner.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewBuilder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewBuilder"
    }
  ],
  "role" : "symbol",
  "title" : "ViewBuilder",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewbuilder"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraph": {
  "abstract" : [
    {
      "text" : "The root of the view graph which shadows a root viewâ€™s structure with extra metadata,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "cross-update state persistence, and behind the scenes backend widget handling.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraph",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraph"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraph",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraph"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode": {
  "abstract" : [
    {
      "text" : "A view graph node storing a view, its widget, and its children (likely a collection of more nodes).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNodeChildren": {
  "abstract" : [
    {
      "text" : "The children of a view graph node. This is implemented by a few different",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "types for various purposes. E.g. variable length with same-typed elements",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "(",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ForEach",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : "), and fixed length with distinctly-typed elements (",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView1",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ",",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TupleView2",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", etc).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNodeChildren",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNodeChildren"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNodeChildren",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnodechildren"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphSnapshotter": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphSnapshotter"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphSnapshotter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphSnapshotter"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphSnapshotter",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphsnapshotter"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewSize": {
  "abstract" : [
    {
      "text" : "The size of a view. Includes ideal size, and minimum\/maximum width and height",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "along with the size youâ€™d expect.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewSize"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewSize",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewSize"
    }
  ],
  "role" : "symbol",
  "title" : "ViewSize",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewsize"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewUpdateResult": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewUpdateResult"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewUpdateResult",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewUpdateResult"
    }
  ],
  "role" : "symbol",
  "title" : "ViewUpdateResult",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewupdateresult"
}
}
}