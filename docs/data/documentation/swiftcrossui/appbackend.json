{
  "abstract" : [
    {
      "text" : "A backend that can be used to run an app (e.g. Gtk or Qt).",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:12SwiftCrossUI10AppBackendP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AppBackend"
      }
    ],
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AppBackend"
      }
    ],
    "remoteSource" : {
      "fileName" : "AppBackend.swift",
      "url" : "https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Backend\/AppBackend.swift#L42"
    },
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "AppBackend"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AppBackend"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Default placeholder implementations are available for all non-essential",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "app lifecycle methods. These implementations will fatally crash when called",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and are simply intended to allow incremental implementation of backends,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "not a production-ready fallback for views that cannot be represented by a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "given backend. The methods you need to implemented up-front (which don’t",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "have default implementations) are: ",
              "type" : "text"
            },
            {
              "code" : "AppBackend\/createRootWindow(withDefaultSize:_:)",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setTitle(ofWindow:to:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizability(ofWindow:to:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setChild(ofWindow:to:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/show(window:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "AppBackend\/runMainLoop()",
              "type" : "codeVoice"
            },
            {
              "text" : ", ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runInMainThread(action:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/isWindowProgrammaticallyResizable(_:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/show(widget:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "Many of these can simply be given dummy implementations until you’re ready",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to implement them properly.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you need to modify the children of a widget after creation but there",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "aren’t update methods available, this is an intentional limitation to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "reduce the complexity of maintaining a multitude of backends – nest",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "another container, such as a VStack, inside the container to allow you",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to change its children on demand.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For interactive controls with values, the method for setting the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "control’s value is always separate from the method for updating the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "control’s properties (e.g. its minimum value, or placeholder label etc).",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "This is because it’s very common for view implementations to either",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "update a control’s properties without updating its value (in the case",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "of an unbound control), or update a control’s value only if it doesn’t",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "match its current value (to prevent infinite loops).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Many views have both a ",
              "type" : "text"
            },
            {
              "code" : "create",
              "type" : "codeVoice"
            },
            {
              "text" : " and an ",
              "type" : "text"
            },
            {
              "code" : "update",
              "type" : "codeVoice"
            },
            {
              "text" : " method. The ",
              "type" : "text"
            },
            {
              "code" : "create",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "method should only have parameters for properties which don’t have",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "sensible defaults (e.g. under some backends, image widgets can’t be",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "created without an underlying image being selected up-front, so the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "create",
              "type" : "codeVoice"
            },
            {
              "text" : " method requires a ",
              "type" : "text"
            },
            {
              "code" : "filePath",
              "type" : "codeVoice"
            },
            {
              "text" : " and will overlap with the ",
              "type" : "text"
            },
            {
              "code" : "update",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "method). This design choice was made to reduce the amount of repeated",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "code between the ",
              "type" : "text"
            },
            {
              "code" : "create",
              "type" : "codeVoice"
            },
            {
              "text" : " and ",
              "type" : "text"
            },
            {
              "code" : "update",
              "type" : "codeVoice"
            },
            {
              "text" : " methods of the various widgets",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(since the ",
              "type" : "text"
            },
            {
              "code" : "update",
              "type" : "codeVoice"
            },
            {
              "text" : " method is always called between calling ",
              "type" : "text"
            },
            {
              "code" : "create",
              "type" : "codeVoice"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and actually displaying the widget anyway).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Alert",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Menu",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Widget",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window"
      ],
      "title" : "Associated Types"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/init()"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultPaddingAmount",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultTableCellVerticalPadding",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultTableRowContentHeight",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultToggleStyle",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/requiresToggleSwitchSpacer",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/scrollBarWidth"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/activate(window:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/addChild(_:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/computeRootEnvironment(defaultEnvironment:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createAlert()-1lm92",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createButton()-3d182",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createClickTarget(wrapping:)-ibj9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createColorableRectangle()-2zngl",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createContainer()",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createImageView()-1ap9w",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createPicker()-70yve",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createPopoverMenu()-88em5",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createProgressBar()-8rygo",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createProgressSpinner()-7impu",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createScrollContainer(for:)-1q6bx",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createSlider()-24c8w",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createSplitView(leadingChild:trailingChild:)-3iqgg",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createSwitch()-2f7xv",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTable()-3xtll",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTextField()-6jp68",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTextView()",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTextView(content:shouldWrap:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createToggle()-814v1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createWindow(withDefaultSize:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/dismissAlert(_:window:)-7rv6o",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/getContent(ofTextField:)-755gm",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/isWindowProgrammaticallyResizable(_:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/naturalSize(of:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/openExternalURL(_:)-59ruj",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/removeAllChildren(of:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/removeChild(_:from:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runInMainThread(action:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runMainLoop(_:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setApplicationMenu(_:)-9pswa",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setCells(ofTable:to:withRowHeights:)-74ru1",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setChild(ofWindow:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setColor(ofColorableRectangle:to:)-48g9t",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setColumnLabels(ofTable:to:environment:)-5znlm",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setContent(ofTextField:to:)-21686",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setCornerRadius(of:to:)-8esk3",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setIncomingURLHandler(to:)-5515d",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setMinimumSize(ofWindow:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setPosition(ofChildAt:in:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizability(ofWindow:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofSplitView:to:)-8py41",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setRootEnvironmentChangeHandler(to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setRowCount(ofTable:to:)-28yce",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setScrollBarPresence(ofScrollContainer:hasVerticalScrollBar:hasHorizontalScrollBar:)-htuo",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSelectedOption(ofPicker:to:)-2b5qx",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSidebarWidthBounds(ofSplitView:minimum:maximum:)-7gspe",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSize(of:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSize(ofWindow:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setState(ofSwitch:to:)-70pzc",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setState(ofToggle:to:)-5y479",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setTitle(ofWindow:to:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setValue(ofSlider:to:)-9cjjs",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/show(widget:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/show(window:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showAlert(_:window:responseHandler:)-9iu82",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showOpenDialog(fileDialogOptions:openDialogOptions:window:resultHandler:)-8cgw",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showPopoverMenu(_:at:relativeTo:closeHandler:)-u69a",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showSaveDialog(fileDialogOptions:saveDialogOptions:window:resultHandler:)-6dk1p",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/sidebarWidth(ofSplitView:)-3dz2f",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/size(of:whenDisplayedIn:proposedFrame:environment:)-7w5de",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/size(ofWindow:)",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/tag(widget:as:)-6ohtd",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateAlert(_:title:actionLabels:environment:)-8tkm4",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateButton(_:label:action:environment:)-w9qd",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateClickTarget(_:clickHandler:)-6hfh7",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateImageView(_:rgbaData:width:height:targetWidth:targetHeight:dataHasChanged:)-69rlk",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updatePicker(_:options:environment:onChange:)-23us",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updatePopoverMenu(_:content:environment:)-6o9qa",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateProgressBar(_:progressFraction:environment:)-6qqia",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateSlider(_:minimum:maximum:decimalPlaces:onChange:)-8we73",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateSwitch(_:onChange:)-9nbu9",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateTextField(_:placeholder:environment:onChange:onSubmit:)-43yir",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateTextView(_:content:environment:)-3p9mh",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateToggle(_:label:onChange:)-4usuo"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/appbackend"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend": {
  "abstract" : [
    {
      "text" : "A backend that can be used to run an app (e.g. Gtk or Qt).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AppBackend"
    }
  ],
  "role" : "symbol",
  "title" : "AppBackend",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Alert": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Alert"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Alert",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Alert",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/alert"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Menu": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Menu"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Menu",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Menu",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/menu"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Widget": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Widget",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Widget",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/widget"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/Window": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Window"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/Window",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "Window",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/window"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/activate(window:)": {
  "abstract" : [
    {
      "text" : "Brings a window to the front if possible. Called when the window",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "receives an external URL or file to handle from the desktop environment.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "May be used in other circumstances eventually.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "activate"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "window"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/activate(window:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "activate(window:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/activate(window:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/addChild(_:to:)": {
  "abstract" : [
    {
      "text" : "Adds a child to a given container at an exact position.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "addChild"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/addChild(_:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "addChild(_:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/addchild(_:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/computeRootEnvironment(defaultEnvironment:)": {
  "abstract" : [
    {
      "text" : "Computes the root environment for an app (e.g. by checking the system’s current",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "theme). May fall back on the provided defaults where reasonable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "computeRootEnvironment"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "defaultEnvironment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/computeRootEnvironment(defaultEnvironment:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "computeRootEnvironment(defaultEnvironment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/computerootenvironment(defaultenvironment:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createAlert()-1lm92": {
  "abstract" : [
    {
      "text" : "Creates an alert object (without showing it yet). Alerts contain a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "title, an optional body, and a set of action buttons. They also",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "prevent users from interacting with the parent window until dimissed.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createAlert"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP5AlertQa",
      "text" : "Alert"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createAlert()-1lm92",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createAlert()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createalert()-1lm92"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createButton()-3d182": {
  "abstract" : [
    {
      "text" : "Creates a labelled button with an action triggered on click. Predominantly used",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Button",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createButton"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createButton()-3d182",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createButton()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createbutton()-3d182"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createClickTarget(wrapping:)-ibj9": {
  "abstract" : [
    {
      "text" : "Wraps a view in a container that can receive click events. Some",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "backends may not have to wrap the child, in which case they have the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "freedom to just return the child as is.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createClickTarget"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "wrapping"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createClickTarget(wrapping:)-ibj9",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createClickTarget(wrapping:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createclicktarget(wrapping:)-ibj9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createColorableRectangle()-2zngl": {
  "abstract" : [
    {
      "text" : "Creates a rectangular widget with configurable color.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createColorableRectangle"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createColorableRectangle()-2zngl",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createColorableRectangle()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createcolorablerectangle()-2zngl"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createContainer()": {
  "abstract" : [
    {
      "text" : "Creates a container in which children can be layed out by SwiftCrossUI using exact",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "pixel positions.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createContainer"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createContainer()",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createContainer()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createcontainer()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createImageView()-1ap9w": {
  "abstract" : [
    {
      "text" : "Creates an image view from an image file (specified by path). Predominantly used",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createImageView"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createImageView()-1ap9w",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createImageView()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createimageview()-1ap9w"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createPicker()-70yve": {
  "abstract" : [
    {
      "text" : "Creates a picker for selecting from a finite set of options (e.g. a radio button group,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a drop-down, a picker wheel). Predominantly used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Picker",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ". The change handler is",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "called whenever a selection is made (even if the same option is picked again).",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createPicker"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createPicker()-70yve",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createPicker()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createpicker()-70yve"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createPopoverMenu()-88em5": {
  "abstract" : [
    {
      "text" : "Creates a popover menu (the sort you often see when right clicking on",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "apps). The menu won’t be visible until you call",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showPopoverMenu(_:at:relativeTo:closeHandler:)-u69a",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createPopoverMenu"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP4MenuQa",
      "text" : "Menu"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createPopoverMenu()-88em5",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createPopoverMenu()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createpopovermenu()-88em5"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createProgressBar()-8rygo": {
  "abstract" : [
    {
      "text" : "Creates a progress bar.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createProgressBar"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createProgressBar()-8rygo",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createProgressBar()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createprogressbar()-8rygo"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createProgressSpinner()-7impu": {
  "abstract" : [
    {
      "text" : "Creates an indeterminate progress spinner.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createProgressSpinner"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createProgressSpinner()-7impu",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createProgressSpinner()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createprogressspinner()-7impu"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createScrollContainer(for:)-1q6bx": {
  "abstract" : [
    {
      "text" : "Creates a scrollable single-child container wrapping the given widget.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createScrollContainer"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createScrollContainer(for:)-1q6bx",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createScrollContainer(for:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createscrollcontainer(for:)-1q6bx"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createSlider()-24c8w": {
  "abstract" : [
    {
      "text" : "Creates a slider for choosing a numerical value from a range. Predominantly used",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Slider",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createSlider"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createSlider()-24c8w",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createSlider()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createslider()-24c8w"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createSplitView(leadingChild:trailingChild:)-3iqgg": {
  "abstract" : [
    {
      "text" : "Creates a split view containing two children visible side by side.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createSplitView"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "leadingChild"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "trailingChild"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createSplitView(leadingChild:trailingChild:)-3iqgg",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createSplitView(leadingChild:trailingChild:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createsplitview(leadingchild:trailingchild:)-3iqgg"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createSwitch()-2f7xv": {
  "abstract" : [
    {
      "text" : "Creates a switch that is either on or off. Predominantly used by ",
      "type" : "text"
    },
    {
      "code" : "Switch",
      "type" : "codeVoice"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createSwitch"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createSwitch()-2f7xv",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createSwitch()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createswitch()-2f7xv"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createTable()-3xtll": {
  "abstract" : [
    {
      "text" : "Creates an empty table.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createTable"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTable()-3xtll",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createTable()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createtable()-3xtll"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createTextField()-6jp68": {
  "abstract" : [
    {
      "text" : "Creates an editable text field with a placeholder label and change handler. The",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "change handler is called whenever the displayed value changes. Predominantly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TextField",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createTextField"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTextField()-6jp68",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createTextField()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createtextfield()-6jp68"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createTextView()": {
  "abstract" : [
    {
      "text" : "Creates a non-editable text view with optional text wrapping. Predominantly used",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".`",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createTextView"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTextView()",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createTextView()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createtextview()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createTextView(content:shouldWrap:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createTextView"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "content"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "shouldWrap"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createTextView(content:shouldWrap:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "createTextView(content:shouldWrap:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createtextview(content:shouldwrap:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createToggle()-814v1": {
  "abstract" : [
    {
      "text" : "Creates a labelled toggle that is either on or off. Predominantly used by",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Toggle",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createToggle"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createToggle()-814v1",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createToggle()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createtoggle()-814v1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/createWindow(withDefaultSize:)": {
  "abstract" : [
    {
      "text" : "Creates a new window. For some backends it may make sense for this",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "method to return the application’s root window the first time its",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "called, and only create new windows on subsequent invocations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createWindow"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "withDefaultSize"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/createWindow(withDefaultSize:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "createWindow(withDefaultSize:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/createwindow(withdefaultsize:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/defaultPaddingAmount": {
  "abstract" : [
    {
      "text" : "The default amount of padding used when a user uses the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/padding(_:_:)",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "modifier.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultPaddingAmount"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultPaddingAmount",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "defaultPaddingAmount",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/defaultpaddingamount"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/defaultTableCellVerticalPadding": {
  "abstract" : [
    {
      "text" : "The default vertical padding to apply to table cells. This is a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "recommendation by the backend that SwiftCrossUI won’t necessarily",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "follow in all cases. This is the amount of padding added above and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "below each cell, not the total amount added along the vertical axis.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultTableCellVerticalPadding"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultTableCellVerticalPadding",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "defaultTableCellVerticalPadding",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/defaulttablecellverticalpadding"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/defaultTableRowContentHeight": {
  "abstract" : [
    {
      "text" : "The default height of a table row excluding cell padding. This is a",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "recommendation by the backend that SwiftCrossUI won’t necessarily",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "follow in all cases.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultTableRowContentHeight"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultTableRowContentHeight",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "defaultTableRowContentHeight",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/defaulttablerowcontentheight"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/defaultToggleStyle": {
  "abstract" : [
    {
      "text" : "The default style for toggles.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "defaultToggleStyle"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI11ToggleStyleO",
      "text" : "ToggleStyle"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/defaultToggleStyle",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "defaultToggleStyle",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/defaulttogglestyle"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/dismissAlert(_:window:)-7rv6o": {
  "abstract" : [
    {
      "text" : "Dismisses an alert programmatically without invoking the response",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "handler. Must only be called after",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showAlert(_:window:responseHandler:)-9iu82",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "dismissAlert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP5AlertQa",
      "text" : "Alert"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "window"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/dismissAlert(_:window:)-7rv6o",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "dismissAlert(_:window:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/dismissalert(_:window:)-7rv6o"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/getContent(ofTextField:)-755gm": {
  "abstract" : [
    {
      "text" : "Gets the value of an editable text field.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "getContent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofTextField"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/getContent(ofTextField:)-755gm",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "getContent(ofTextField:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/getcontent(oftextfield:)-755gm"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/init()": {
  "abstract" : [
    {
      "text" : "Creates an instance of the backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/init()",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/init()"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/isWindowProgrammaticallyResizable(_:)": {
  "abstract" : [
    {
      "text" : "Check whether a window is programmatically resizable. This value does not necessarily",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "reflect whether the window is resizable by the user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isWindowProgrammaticallyResizable"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/isWindowProgrammaticallyResizable(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "isWindowProgrammaticallyResizable(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/iswindowprogrammaticallyresizable(_:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/naturalSize(of:)": {
  "abstract" : [
    {
      "text" : "Gets the natural size of a given widget. E.g. the natural size of a button may be the size",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the label (without line wrapping) plus a bit of padding and a border.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "naturalSize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/naturalSize(of:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "naturalSize(of:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/naturalsize(of:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/openExternalURL(_:)-59ruj": {
  "abstract" : [
    {
      "text" : "Opens an external URL in the system browser or app registered for the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "URL’s protocol.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "openExternalURL"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/openExternalURL(_:)-59ruj",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "openExternalURL(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/openexternalurl(_:)-59ruj"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/removeAllChildren(of:)": {
  "abstract" : [
    {
      "text" : "Removes all children of the given container.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeAllChildren"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/removeAllChildren(of:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "removeAllChildren(of:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/removeallchildren(of:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/removeChild(_:from:)": {
  "abstract" : [
    {
      "text" : "Removes a child widget from a container (if the child is a direct child of the container).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeChild"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/removeChild(_:from:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "removeChild(_:from:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/removechild(_:from:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/requiresToggleSwitchSpacer": {
  "abstract" : [
    {
      "text" : "If ",
      "type" : "text"
    },
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : ", a toggle in the ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ToggleStyle\/switch",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " style grows to fill its parent container.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "requiresToggleSwitchSpacer"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/requiresToggleSwitchSpacer",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "requiresToggleSwitchSpacer",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/requirestoggleswitchspacer"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/runInMainThread(action:)": {
  "abstract" : [
    {
      "text" : "Runs an action in the app’s main thread if required to perform UI updates",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "by the backend. Predominantly used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " to publish changes to a thread",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "compatible with dispatching UI updates. Can be synchronous or asynchronous (for now).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "runInMainThread"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "action"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runInMainThread(action:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "runInMainThread(action:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/runinmainthread(action:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/runMainLoop(_:)": {
  "abstract" : [
    {
      "text" : "Often in UI frameworks (such as Gtk), code is run in a callback",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "after starting the app, and hence this generic root window creation",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "API must reflect that. This is always the first method to be called",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and is where boilerplate app setup should happen.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "runMainLoop"
    },
    {
      "kind" : "text",
      "text" : "(() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/runMainLoop(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "runMainLoop(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/runmainloop(_:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/scrollBarWidth": {
  "abstract" : [
    {
      "text" : "Gets the layout width of a backend’s scroll bars. Assumes that the width",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is the same for both vertical and horizontal scroll bars (where the width",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of a horizontal scroll bar is what pedants may call its height). If the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "backend uses overlay scroll bars then this width should be 0.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scrollBarWidth"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/scrollBarWidth",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "scrollBarWidth",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/scrollbarwidth"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setApplicationMenu(_:)-9pswa": {
  "abstract" : [
    {
      "text" : "Sets the application’s global menu. Some backends may make use of the host",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "platform’s global menu bar (such as macOS’s menu bar), and others may render their",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "own menu bar within the application.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setApplicationMenu"
    },
    {
      "kind" : "text",
      "text" : "(["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI12ResolvedMenuV",
      "text" : "ResolvedMenu"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI12ResolvedMenuV7SubmenuV",
      "text" : "Submenu"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setApplicationMenu(_:)-9pswa",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setApplicationMenu(_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setapplicationmenu(_:)-9pswa"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setCells(ofTable:to:withRowHeights:)-74ru1": {
  "abstract" : [
    {
      "text" : "Sets the contents of the table as a flat array of cells in order of and grouped by row. Also",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "sets the height of each row’s content.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setCells"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofTable"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "withRowHeights"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "])"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setCells(ofTable:to:withRowHeights:)-74ru1",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setCells(ofTable:to:withRowHeights:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setcells(oftable:to:withrowheights:)-74ru1"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setChild(ofWindow:to:)": {
  "abstract" : [
    {
      "text" : "Sets the root child of a window (replaces the previous child if any).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setChild"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setChild(ofWindow:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setChild(ofWindow:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setchild(ofwindow:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setColor(ofColorableRectangle:to:)-48g9t": {
  "abstract" : [
    {
      "text" : "Sets the color of a colorable rectangle.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setColor"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofColorableRectangle"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI5ColorV",
      "text" : "Color"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setColor(ofColorableRectangle:to:)-48g9t",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setColor(ofColorableRectangle:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setcolor(ofcolorablerectangle:to:)-48g9t"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setColumnLabels(ofTable:to:environment:)-5znlm": {
  "abstract" : [
    {
      "text" : "Sets the labels of a table’s columns. Also sets the number of columns of the table to the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "number of labels provided.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setColumnLabels"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofTable"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setColumnLabels(ofTable:to:environment:)-5znlm",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setColumnLabels(ofTable:to:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setcolumnlabels(oftable:to:environment:)-5znlm"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setContent(ofTextField:to:)-21686": {
  "abstract" : [
    {
      "text" : "Sets the value of an editable text field.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setContent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofTextField"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setContent(ofTextField:to:)-21686",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setContent(ofTextField:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setcontent(oftextfield:to:)-21686"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setCornerRadius(of:to:)-8esk3": {
  "abstract" : [
    {
      "text" : "Sets the corner radius of a widget (any widget). Should affect the view’s border radius",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as well.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setCornerRadius"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setCornerRadius(of:to:)-8esk3",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setCornerRadius(of:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setcornerradius(of:to:)-8esk3"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setIncomingURLHandler(to:)-5515d": {
  "abstract" : [
    {
      "text" : "Sets the handler for URLs directed to the application (e.g. URLs",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "associated with a custom URL scheme).",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setIncomingURLHandler"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setIncomingURLHandler(to:)-5515d",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setIncomingURLHandler(to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setincomingurlhandler(to:)-5515d"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setMinimumSize(ofWindow:to:)": {
  "abstract" : [
    {
      "text" : "Sets the minimum width and height of the window. Prevents the user from making the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "window any smaller than the given size.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setMinimumSize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setMinimumSize(ofWindow:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setMinimumSize(ofWindow:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setminimumsize(ofwindow:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setPosition(ofChildAt:in:to:)": {
  "abstract" : [
    {
      "text" : "Sets the position of the specified child in a container.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setPosition"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofChildAt"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "in"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setPosition(ofChildAt:in:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setPosition(ofChildAt:in:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setposition(ofchildat:in:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setResizability(ofWindow:to:)": {
  "abstract" : [
    {
      "text" : "Sets the resizability of a window. Even if resizable, the window",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "shouldn’t be allowed to become smaller than its content.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setResizability"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizability(ofWindow:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setResizability(ofWindow:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setresizability(ofwindow:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setResizeHandler(ofSplitView:to:)-8py41": {
  "abstract" : [
    {
      "text" : "Sets the function to be called when the split view’s panes get resized.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setResizeHandler"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofSplitView"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofSplitView:to:)-8py41",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setResizeHandler(ofSplitView:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofsplitview:to:)-8py41"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setResizeHandler(ofWindow:to:)": {
  "abstract" : [
    {
      "text" : "Sets the handler for the window’s resizing events. ",
      "type" : "text"
    },
    {
      "code" : "action",
      "type" : "codeVoice"
    },
    {
      "text" : " takes the proposed size",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of the window and returns the final size for the window (which allows SwiftCrossUI",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "to implement features such as dynamic minimum window sizes based off the content’s",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "minimum size). Setting the resize handler overrides any previous handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setResizeHandler"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setResizeHandler(ofWindow:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setResizeHandler(ofWindow:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setresizehandler(ofwindow:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setRootEnvironmentChangeHandler(to:)": {
  "abstract" : [
    {
      "text" : "Sets the handler to be notified when the root environment may have to get",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "recomputed. This is intended to only be called once. Calling it more than once",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "may or may not override the previous handler.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setRootEnvironmentChangeHandler"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setRootEnvironmentChangeHandler(to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setRootEnvironmentChangeHandler(to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setrootenvironmentchangehandler(to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setRowCount(ofTable:to:)-28yce": {
  "abstract" : [
    {
      "text" : "Sets the number of rows of a table. Existing rows outside of the new bounds should",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "be deleted.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setRowCount"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofTable"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setRowCount(ofTable:to:)-28yce",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setRowCount(ofTable:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setrowcount(oftable:to:)-28yce"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setScrollBarPresence(ofScrollContainer:hasVerticalScrollBar:hasHorizontalScrollBar:)-htuo": {
  "abstract" : [
    {
      "text" : "Sets the presence of scroll bars along each axis of a scroll container.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setScrollBarPresence"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofScrollContainer"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "hasVerticalScrollBar"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "hasHorizontalScrollBar"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setScrollBarPresence(ofScrollContainer:hasVerticalScrollBar:hasHorizontalScrollBar:)-htuo",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setScrollBarPresence(ofScrollContainer:hasVerticalScrollBar:hasHorizontalScrollBar:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setscrollbarpresence(ofscrollcontainer:hasverticalscrollbar:hashorizontalscrollbar:)-htuo"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setSelectedOption(ofPicker:to:)-2b5qx": {
  "abstract" : [
    {
      "text" : "Sets the index of the selected option of a picker.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setSelectedOption"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofPicker"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?)"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSelectedOption(ofPicker:to:)-2b5qx",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setSelectedOption(ofPicker:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setselectedoption(ofpicker:to:)-2b5qx"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setSidebarWidthBounds(ofSplitView:minimum:maximum:)-7gspe": {
  "abstract" : [
    {
      "text" : "Sets the minimum and maximum width of a split view’s sidebar.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setSidebarWidthBounds"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofSplitView"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "minimum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "maximum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSidebarWidthBounds(ofSplitView:minimum:maximum:)-7gspe",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setSidebarWidthBounds(ofSplitView:minimum:maximum:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setsidebarwidthbounds(ofsplitview:minimum:maximum:)-7gspe"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setSize(of:to:)": {
  "abstract" : [
    {
      "text" : "Sets the size of a widget.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setSize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSize(of:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setSize(of:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setsize(of:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setSize(ofWindow:to:)": {
  "abstract" : [
    {
      "text" : "Sets the size of the given window in pixels.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setSize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">)"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setSize(ofWindow:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setSize(ofWindow:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setsize(ofwindow:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setState(ofSwitch:to:)-70pzc": {
  "abstract" : [
    {
      "text" : "Sets the state of the switch to active or not.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setState"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofSwitch"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setState(ofSwitch:to:)-70pzc",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setState(ofSwitch:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setstate(ofswitch:to:)-70pzc"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setState(ofToggle:to:)-5y479": {
  "abstract" : [
    {
      "text" : "Sets the state of the button to active or not.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setState"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofToggle"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setState(ofToggle:to:)-5y479",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setState(ofToggle:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setstate(oftoggle:to:)-5y479"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setTitle(ofWindow:to:)": {
  "abstract" : [
    {
      "text" : "Sets the title of a window.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setTitle"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setTitle(ofWindow:to:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setTitle(ofWindow:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/settitle(ofwindow:to:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/setValue(ofSlider:to:)-9cjjs": {
  "abstract" : [
    {
      "text" : "Sets the selected value of a slider.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "setValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofSlider"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/setValue(ofSlider:to:)-9cjjs",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "setValue(ofSlider:to:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/setvalue(ofslider:to:)-9cjjs"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/show(widget:)": {
  "abstract" : [
    {
      "text" : "Shows a widget after it has been created or updated (may be unnecessary",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for some backends). Predominantly used by ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " after",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "propagating updates.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "show"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "widget"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/show(widget:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "show(widget:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/show(widget:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/show(window:)": {
  "abstract" : [
    {
      "text" : "Shows a window after it has been created or updated (may be unnecessary",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for some backends). Predominantly used by window-based ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "implementations after propagating updates.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "show"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "window"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/show(window:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "show(window:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/show(window:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/showAlert(_:window:responseHandler:)-9iu82": {
  "abstract" : [
    {
      "text" : "Shows an alert as a modal on top of or within the given window.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Users should be unable to interact with the parent window until the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "alert gets dismissed. ",
      "type" : "text"
    },
    {
      "code" : "handleResponse",
      "type" : "codeVoice"
    },
    {
      "text" : " must get called once an action",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "button is selected, with its sole argument representing the index of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the action selected (as per the ",
      "type" : "text"
    },
    {
      "code" : "actionLabels",
      "type" : "codeVoice"
    },
    {
      "text" : " array). The alert will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "have been hidden by the time the response handler gets called.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "showAlert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP5AlertQa",
      "text" : "Alert"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "window"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "responseHandler"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showAlert(_:window:responseHandler:)-9iu82",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "showAlert(_:window:responseHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/showalert(_:window:responsehandler:)-9iu82"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/showOpenDialog(fileDialogOptions:openDialogOptions:window:resultHandler:)-8cgw": {
  "abstract" : [
    {
      "text" : "Presents an ‘Open file’ dialog to the user for selecting files or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "folders.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "showOpenDialog"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17FileDialogOptionsV",
      "text" : "FileDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "openDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17OpenDialogOptionsV",
      "text" : "OpenDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "window"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "resultHandler"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI12DialogResultO",
      "text" : "DialogResult"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : "]>) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showOpenDialog(fileDialogOptions:openDialogOptions:window:resultHandler:)-8cgw",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "showOpenDialog(fileDialogOptions:openDialogOptions:window:resultHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/showopendialog(filedialogoptions:opendialogoptions:window:resulthandler:)-8cgw"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/showPopoverMenu(_:at:relativeTo:closeHandler:)-u69a": {
  "abstract" : [
    {
      "text" : "Shows the popover menu at a position relative to the given widget.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "showPopoverMenu"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP4MenuQa",
      "text" : "Menu"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "at"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "relativeTo"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "closeHandler"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showPopoverMenu(_:at:relativeTo:closeHandler:)-u69a",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "showPopoverMenu(_:at:relativeTo:closeHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/showpopovermenu(_:at:relativeto:closehandler:)-u69a"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/showSaveDialog(fileDialogOptions:saveDialogOptions:window:resultHandler:)-6dk1p": {
  "abstract" : [
    {
      "text" : "Presents a ‘Save file’ dialog to the user for selecting a file save",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "destination.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "showSaveDialog"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "fileDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17FileDialogOptionsV",
      "text" : "FileDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "saveDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17SaveDialogOptionsV",
      "text" : "SaveDialogOptions"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "window"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "resultHandler"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI12DialogResultO",
      "text" : "DialogResult"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/showSaveDialog(fileDialogOptions:saveDialogOptions:window:resultHandler:)-6dk1p",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "showSaveDialog(fileDialogOptions:saveDialogOptions:window:resultHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/showsavedialog(filedialogoptions:savedialogoptions:window:resulthandler:)-6dk1p"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/sidebarWidth(ofSplitView:)-3dz2f": {
  "abstract" : [
    {
      "text" : "Gets the width of a split view’s sidebar.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sidebarWidth"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofSplitView"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/sidebarWidth(ofSplitView:)-3dz2f",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "sidebarWidth(ofSplitView:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/sidebarwidth(ofsplitview:)-3dz2f"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/size(of:whenDisplayedIn:proposedFrame:environment:)-7w5de": {
  "abstract" : [
    {
      "text" : "Gets the size that the given text would have if it were layed out attempting to stay",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "within the proposed frame (most backends only use the proposed width and ignore the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "proposed height). The size returned by this function will be upheld by the layout",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "system; child views always get the final say on their own size, parents just choose how",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the children get layed out.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "size"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "whenDisplayedIn"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "proposedFrame"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">?, "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/size(of:whenDisplayedIn:proposedFrame:environment:)-7w5de",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "size(of:whenDisplayedIn:proposedFrame:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/size(of:whendisplayedin:proposedframe:environment:)-7w5de"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/size(ofWindow:)": {
  "abstract" : [
    {
      "text" : "Gets the size of the given window in pixels.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "size"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "ofWindow"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WindowQa",
      "text" : "Window"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5SIMD2V",
      "text" : "SIMD2"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/size(ofWindow:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "size(ofWindow:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/size(ofwindow:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/tag(widget:as:)-6ohtd": {
  "abstract" : [
    {
      "text" : "Adds a short tag to a widget to assist during debugging if the backend supports",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "such a feature. Some backends may only apply tags under particular conditions",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "such as when being built in debug mode.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "tag"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "widget"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "as"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/tag(widget:as:)-6ohtd",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "tag(widget:as:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/tag(widget:as:)-6ohtd"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateAlert(_:title:actionLabels:environment:)-8tkm4": {
  "abstract" : [
    {
      "text" : "Updates the content and appearance of an alert. Can only be called once.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateAlert"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP5AlertQa",
      "text" : "Alert"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "title"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "actionLabels"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateAlert(_:title:actionLabels:environment:)-8tkm4",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateAlert(_:title:actionLabels:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatealert(_:title:actionlabels:environment:)-8tkm4"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateButton(_:label:action:environment:)-w9qd": {
  "abstract" : [
    {
      "text" : "Sets a button’s label and action. The action replaces any existing actions.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateButton"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "label"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "action"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateButton(_:label:action:environment:)-w9qd",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateButton(_:label:action:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatebutton(_:label:action:environment:)-w9qd"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateClickTarget(_:clickHandler:)-6hfh7": {
  "abstract" : [
    {
      "text" : "Update the click target with a new click handler. Replaces the old",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "click handler.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateClickTarget"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "clickHandler"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateClickTarget(_:clickHandler:)-6hfh7",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateClickTarget(_:clickHandler:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updateclicktarget(_:clickhandler:)-6hfh7"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateImageView(_:rgbaData:width:height:targetWidth:targetHeight:dataHasChanged:)-69rlk": {
  "abstract" : [
    {
      "text" : "Sets the image data to be displayed.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateImageView"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "rgbaData"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5UInt8V",
      "text" : "UInt8"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "width"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "height"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "targetWidth"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "targetHeight"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "dataHasChanged"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateImageView(_:rgbaData:width:height:targetWidth:targetHeight:dataHasChanged:)-69rlk",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateImageView(_:rgbaData:width:height:targetWidth:targetHeight:dataHasChanged:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updateimageview(_:rgbadata:width:height:targetwidth:targetheight:datahaschanged:)-69rlk"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updatePicker(_:options:environment:onChange:)-23us": {
  "abstract" : [
    {
      "text" : "Sets the options for a picker to display, along with a change handler for when its",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "selected option changes. The change handler replaces any existing change handlers and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is called whenever a selection is made (even if the same option is picked again).",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updatePicker"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "options"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onChange"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updatePicker(_:options:environment:onChange:)-23us",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updatePicker(_:options:environment:onChange:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatepicker(_:options:environment:onchange:)-23us"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updatePopoverMenu(_:content:environment:)-6o9qa": {
  "abstract" : [
    {
      "text" : "Updates a popover menu’s content and appearance.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updatePopoverMenu"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP4MenuQa",
      "text" : "Menu"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "content"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI12ResolvedMenuV",
      "text" : "ResolvedMenu"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updatePopoverMenu(_:content:environment:)-6o9qa",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updatePopoverMenu(_:content:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatepopovermenu(_:content:environment:)-6o9qa"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateProgressBar(_:progressFraction:environment:)-6qqia": {
  "abstract" : [
    {
      "text" : "Updates a progress bar to reflect the given progress (between 0 and 1), and the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "current view environment.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateProgressBar"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "progressFraction"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateProgressBar(_:progressFraction:environment:)-6qqia",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateProgressBar(_:progressFraction:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updateprogressbar(_:progressfraction:environment:)-6qqia"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateSlider(_:minimum:maximum:decimalPlaces:onChange:)-8we73": {
  "abstract" : [
    {
      "text" : "Sets the minimum and maximum selectable value of a slider (inclusive), the number of decimal",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "places displayed by the slider, and the slider’s change handler (replaces any existing",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "change handlers).",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateSlider"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "minimum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "maximum"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "decimalPlaces"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onChange"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateSlider(_:minimum:maximum:decimalPlaces:onChange:)-8we73",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateSlider(_:minimum:maximum:decimalPlaces:onChange:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updateslider(_:minimum:maximum:decimalplaces:onchange:)-8we73"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateSwitch(_:onChange:)-9nbu9": {
  "abstract" : [
    {
      "text" : "Sets the change handler of a switch (replaces any existing change handlers).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The change handler is called whenever the button is toggled on or off.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateSwitch"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onChange"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateSwitch(_:onChange:)-9nbu9",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateSwitch(_:onChange:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updateswitch(_:onchange:)-9nbu9"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateTextField(_:placeholder:environment:onChange:onSubmit:)-43yir": {
  "abstract" : [
    {
      "text" : "Sets the placeholder label and change handler of an editable text field. The new",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "change handler replaces any existing change handlers, and is called whenever the",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "displayed value changes. ",
      "type" : "text"
    },
    {
      "code" : "onSubmit",
      "type" : "codeVoice"
    },
    {
      "text" : " gets called when the user hits Enter\/Return,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "or whatever the backend decides counts as submission of the field.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateTextField"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "placeholder"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onChange"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onSubmit"
    },
    {
      "kind" : "text",
      "text" : ": () -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateTextField(_:placeholder:environment:onChange:onSubmit:)-43yir",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateTextField(_:placeholder:environment:onChange:onSubmit:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatetextfield(_:placeholder:environment:onchange:onsubmit:)-43yir"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateTextView(_:content:environment:)-3p9mh": {
  "abstract" : [
    {
      "text" : "Sets the content and wrapping mode of a non-editable text view.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateTextView"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "content"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "environment"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI17EnvironmentValuesV",
      "text" : "EnvironmentValues"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateTextView(_:content:environment:)-3p9mh",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateTextView(_:content:environment:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatetextview(_:content:environment:)-3p9mh"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/AppBackend/updateToggle(_:label:onChange:)-4usuo": {
  "abstract" : [
    {
      "text" : "Sets the label and change handler of a toggle (replaces any existing change handlers).",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The change handler is called whenever the button is toggled on or off.",
      "type" : "text"
    }
  ],
  "defaultImplementations" : 1,
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateToggle"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI10AppBackendP6WidgetQa",
      "text" : "Widget"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "label"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "onChange"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/AppBackend\/updateToggle(_:label:onChange:)-4usuo",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "updateToggle(_:label:onChange:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/appbackend\/updatetoggle(_:label:onchange:)-4usuo"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Button": {
  "abstract" : [
    {
      "text" : "A control that initiates an action.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Button"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Button",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Button"
    }
  ],
  "role" : "symbol",
  "title" : "Button",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/button"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Image": {
  "abstract" : [
    {
      "text" : "A view that displays an image.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Image"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Image",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Image"
    }
  ],
  "role" : "symbol",
  "title" : "Image",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/image"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Picker": {
  "abstract" : [
    {
      "text" : "A control for selecting from a set of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Picker"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Picker",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Picker"
    }
  ],
  "role" : "symbol",
  "title" : "Picker",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/picker"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher": {
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "role" : "symbol",
  "title" : "Publisher",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Scene": {
  "abstract" : [
    {
      "text" : "A scene wraps a root view and dictates how it is displayed (e.g. in a window or",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a menu bar). Scenes can also be a composition of multiple child scenes instead",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "of wrapping a root view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Scene"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Scene",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Scene"
    }
  ],
  "role" : "symbol",
  "title" : "Scene",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/scene"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Slider": {
  "abstract" : [
    {
      "text" : "A control for selecting a value from a bounded range of numerical values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Slider"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Slider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Slider"
    }
  ],
  "role" : "symbol",
  "title" : "Slider",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/slider"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Text": {
  "abstract" : [
    {
      "text" : "A text view.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Text",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "role" : "symbol",
  "title" : "Text",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/text"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/TextField": {
  "abstract" : [
    {
      "text" : "A control that displays an editable text interface.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "TextField"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/TextField",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "TextField"
    }
  ],
  "role" : "symbol",
  "title" : "TextField",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/textfield"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Toggle": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Toggle"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Toggle",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Toggle"
    }
  ],
  "role" : "symbol",
  "title" : "Toggle",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/toggle"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ToggleStyle/switch": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "`switch`"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ToggleStyle\/switch",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ToggleStyle.switch",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/togglestyle\/switch"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/padding(_:_:)": {
  "abstract" : [
    {
      "text" : "Adds padding to a view. If ",
      "type" : "text"
    },
    {
      "code" : "amount",
      "type" : "codeVoice"
    },
    {
      "text" : " is ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : ", then a backend-specific default value",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is used.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "padding"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI4EdgeO",
      "text" : "Edge"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI4EdgeO3SetV",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:12SwiftCrossUI4ViewP",
      "text" : "View"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/padding(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "padding(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/view\/padding(_:_:)"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode": {
  "abstract" : [
    {
      "text" : "A view graph node storing a view, its widget, and its children (likely a collection of more nodes).",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ViewGraphNode"
    }
  ],
  "role" : "symbol",
  "title" : "ViewGraphNode",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/viewgraphnode"
}
}
}