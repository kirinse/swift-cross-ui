{"metadata":{"symbolKind":"method","extendedModule":"SwiftCrossUI","roleHeading":"Instance Method","modules":[{"name":"SwiftCrossUI"}],"title":"onSubmit(perform:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onSubmit"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier","text":"View"}],"remoteSource":{"fileName":"OnSubmitModifier.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Handlers\/OnSubmitModifier.swift#L7"},"externalID":"s:12SwiftCrossUI4ViewPAAE8onSubmit7performQryyc_tF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV"},"abstract":[{"type":"text","text":"Adds an action to perform when the user submits a text field within this"},{"type":"text","text":" "},{"type":"text","text":"view (generally via pressing the Enter\/Return key). Outer "},{"type":"codeVoice","code":"onSubmit"},{"type":"text","text":" "},{"type":"text","text":"handlers get called before inner "},{"type":"codeVoice","code":"onSubmit"},{"type":"text","text":" handlers. To prevent"},{"type":"text","text":" "},{"type":"text","text":"submissions from propagating upwards, use "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/submitScope()","type":"reference"},{"type":"text","text":" after"},{"type":"text","text":" "},{"type":"text","text":"adding the handler."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onSubmit"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onSubmit(perform:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/onsubmit(perform:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/submitScope()":{"role":"symbol","title":"submitScope()","kind":"symbol","url":"\/documentation\/swiftcrossui\/view\/submitscope()","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/submitScope()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"submitScope"},{"kind":"text","text":"() -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP","text":"View"}],"type":"topic","abstract":[{"type":"text","text":"Prevents text field submissions from propagating to this view’s"},{"type":"text","text":" "},{"type":"text","text":"ancestors."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","title":"HotReloadableView","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/onSubmit(perform:)":{"title":"onSubmit(perform:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onSubmit(perform:)","url":"\/documentation\/swiftcrossui\/hotreloadableview\/onsubmit(perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onSubmit","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier"}],"type":"topic","abstract":[{"text":"Adds an action to perform when the user submits a text field within this","type":"text"},{"text":" ","type":"text"},{"text":"view (generally via pressing the Enter\/Return key). Outer ","type":"text"},{"type":"codeVoice","code":"onSubmit"},{"text":" ","type":"text"},{"text":"handlers get called before inner ","type":"text"},{"type":"codeVoice","code":"onSubmit"},{"text":" handlers. To prevent","type":"text"},{"text":" ","type":"text"},{"text":"submissions from propagating upwards, use ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/submitScope()","type":"reference","isActive":true},{"text":" after","type":"text"},{"text":" ","type":"text"},{"text":"adding the handler.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"View"}],"title":"View","url":"\/documentation\/swiftcrossui\/view","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"type":"topic","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","kind":"symbol"}}}