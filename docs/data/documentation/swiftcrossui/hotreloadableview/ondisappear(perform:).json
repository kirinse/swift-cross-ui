{"abstract":[{"text":"Adds an action to be performed after this view disappears.","type":"text"}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onDisappear(perform:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"SwiftCrossUI","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDisappear","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier"}],"externalID":"s:12SwiftCrossUI4ViewPAAE11onDisappear7performQryyc_tF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV","modules":[{"name":"SwiftCrossUI"}],"remoteSource":{"fileName":"OnDisappearModifier.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Lifecycle\/OnDisappearModifier.swift#L7"},"roleHeading":"Instance Method","title":"onDisappear(perform:)","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDisappear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":" "},{"kind":"internalParam","text":"action"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","kind":"typeIdentifier","text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"},{"kind":"text","text":"\n"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"codeVoice","code":"onDisappear"},{"text":" actions on outermost views are called first and propagate","type":"text"},{"text":" ","type":"text"},{"text":"down to the leaf views due to essentially relying on the ","type":"text"},{"type":"codeVoice","code":"deinit"},{"text":" of the","type":"text"},{"text":" ","type":"text"},{"text":"modifier view’s ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","role":"collection","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"type":"topic","url":"\/documentation\/swiftcrossui\/view","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"identifier"}],"navigatorTitle":[{"text":"View","kind":"identifier"}],"abstract":[{"type":"text","text":"A view that can be rendered by any backend."}],"kind":"symbol","title":"View"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/onDisappear(perform:)":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDisappear","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"}],"abstract":[{"text":"Adds an action to be performed after this view disappears.","type":"text"}],"type":"topic","title":"onDisappear(perform:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onDisappear(perform:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewGraphNode"}],"navigatorTitle":[{"kind":"identifier","text":"ViewGraphNode"}],"abstract":[{"text":"A view graph node storing a view, its widget, and its children (likely a collection of more nodes).","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode","role":"symbol","url":"\/documentation\/swiftcrossui\/viewgraphnode","title":"ViewGraphNode","kind":"symbol","type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"url":"\/documentation\/swiftcrossui\/hotreloadableview","kind":"symbol","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"title":"HotReloadableView"}}}