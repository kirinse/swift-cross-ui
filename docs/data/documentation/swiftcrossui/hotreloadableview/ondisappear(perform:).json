{"sections":[],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","title":"onDisappear(perform:)","extendedModule":"SwiftCrossUI","remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/Views\/Modifiers\/Lifecycle\/OnDisappearModifier.swift#L7","fileName":"OnDisappearModifier.swift"},"modules":[{"name":"SwiftCrossUI"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDisappear"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP"}],"externalID":"s:12SwiftCrossUI4ViewPAAE11onDisappear7performQryyc_tF::SYNTHESIZED::s:12SwiftCrossUI17HotReloadableViewV"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onDisappear(perform:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDisappear","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","text":"View","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP"},{"text":"\n","kind":"text"}]}]},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":" actions on outermost views are called first and propagate"},{"type":"text","text":" "},{"type":"text","text":"down to the leaf views due to essentially relying on the "},{"type":"codeVoice","code":"deinit"},{"type":"text","text":" of the"},{"type":"text","text":" "},{"type":"text","text":"modifier view’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView"]]},"abstract":[{"text":"Adds an action to be performed after this view disappears.","type":"text"}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView/onDisappear(perform:)":{"url":"\/documentation\/swiftcrossui\/hotreloadableview\/ondisappear(perform:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Adds an action to be performed after this view disappears."}],"title":"onDisappear(perform:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDisappear","kind":"identifier"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:12SwiftCrossUI4ViewP","kind":"typeIdentifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView\/onDisappear(perform:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"View"}],"title":"View","url":"\/documentation\/swiftcrossui\/view","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"type":"topic","abstract":[{"text":"A view that can be rendered by any backend.","type":"text"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ViewGraphNode":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ViewGraphNode","title":"ViewGraphNode","navigatorTitle":[{"text":"ViewGraphNode","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewGraphNode","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/viewgraphnode","kind":"symbol","role":"symbol","abstract":[{"text":"A view graph node storing a view, its widget, and its children (likely a collection of more nodes).","type":"text"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","url":"\/documentation\/swiftcrossui","title":"SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/HotReloadableView":{"kind":"symbol","role":"symbol","url":"\/documentation\/swiftcrossui\/hotreloadableview","navigatorTitle":[{"kind":"identifier","text":"HotReloadableView"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HotReloadableView"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/HotReloadableView","title":"HotReloadableView","abstract":[{"type":"text","text":"A view which attempts to persist the state of its view subtree even"},{"type":"text","text":" "},{"type":"text","text":"when the subtree’s structure changes. Uses state serialization (via"},{"type":"text","text":" "},{"type":"text","text":"view graph snapshotting) to persist view state even when a child"},{"type":"text","text":" "},{"type":"text","text":"view’s implementation gets swapped out with an implementation from"},{"type":"text","text":" "},{"type":"text","text":"a newly-loaded dylib (this is what makes this useful for hot reloading)."}],"type":"topic"}}}