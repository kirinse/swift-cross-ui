{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"},"sections":[],"seeAlsoSections":[{"generated":true,"title":"State","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"],"anchor":"State"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"These concepts form the foundation of SwiftCrossUI’s reactivity.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"reference","isActive":true},{"text":" property wrapper to store state within your apps, scenes,","type":"text"},{"text":" ","type":"text"},{"text":"and views. State generally trickles down through your view hierarchies. Variables","type":"text"},{"text":" ","type":"text"},{"text":"without the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"reference","isActive":true},{"text":" annotation aren’t reactive.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For situations where you need data to trickle back up again, use "},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","isActive":true},{"type":"text","text":" "},{"type":"text","text":"(think mutable references to state)."}]}]}],"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/state-basics"]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"metadata":{"roleHeading":"API Collection","modules":[{"name":"SwiftCrossUI"}],"role":"collectionGroup","title":"State basics"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"article","references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","role":"symbol","title":"ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"url":"\/documentation\/swiftcrossui\/observableobject","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","title":"Published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"title":"Publisher","kind":"symbol","url":"\/documentation\/swiftcrossui\/publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"navigatorTitle":[{"kind":"identifier","text":"Publisher"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"kind":"article","title":"Environment","url":"\/documentation\/swiftcrossui\/environment","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","role":"collectionGroup","abstract":[],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"title":"Binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/binding","type":"topic","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"url":"\/documentation\/swiftcrossui\/cancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","role":"symbol","type":"topic","title":"Cancellable","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","title":"SwiftCrossUI","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"role":"collection","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"url":"\/documentation\/swiftcrossui\/state","type":"topic","abstract":[],"title":"State","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"navigatorTitle":[{"text":"State","kind":"identifier"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences","kind":"article","url":"\/documentation\/swiftcrossui\/preferences","type":"topic","abstract":[],"role":"collectionGroup","title":"Preferences"}}}