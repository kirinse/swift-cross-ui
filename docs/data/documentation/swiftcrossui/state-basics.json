{"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"anchor":"Topics"}],"metadata":{"roleHeading":"API Collection","title":"State basics","modules":[{"name":"SwiftCrossUI"}],"role":"collectionGroup"},"seeAlsoSections":[{"generated":true,"title":"State","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"],"anchor":"State"}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"These concepts form the foundation of SwiftCrossUI’s reactivity."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Use the "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"type":"text","text":" property wrapper to store state within your apps, scenes,"},{"type":"text","text":" "},{"type":"text","text":"and views. State generally trickles down through your view hierarchies. Variables"},{"type":"text","text":" "},{"type":"text","text":"without the "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"type":"text","text":" annotation aren’t reactive."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For situations where you need data to trickle back up again, use "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"(think mutable references to state)."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"variants":[{"paths":["\/documentation\/swiftcrossui\/state-basics"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"title":"ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"role":"symbol","title":"Binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","kind":"symbol","url":"\/documentation\/swiftcrossui\/binding","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Binding"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"kind":"article","role":"collectionGroup","type":"topic","title":"Environment","url":"\/documentation\/swiftcrossui\/environment","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"url":"\/documentation\/swiftcrossui\/preferences","kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences","role":"collectionGroup","title":"Preferences","abstract":[],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"type":"topic","abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"url":"\/documentation\/swiftcrossui\/cancellable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"title":"Cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","role":"collection","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","kind":"symbol","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"title":"Publisher","url":"\/documentation\/swiftcrossui\/publisher","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"kind":"symbol","navigatorTitle":[{"text":"State","kind":"identifier"}],"title":"State","role":"symbol","type":"topic","url":"\/documentation\/swiftcrossui\/state","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"url":"\/documentation\/swiftcrossui\/published","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","title":"Published","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Published"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"role":"symbol","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}]}}}