{"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These concepts form the foundation of SwiftCrossUI’s reactivity."}]},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" property wrapper to store state within your apps, scenes,","type":"text"},{"text":" ","type":"text"},{"text":"and views. State generally trickles down through your view hierarchies. Variables","type":"text"},{"text":" ","type":"text"},{"text":"without the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" annotation aren’t reactive.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For situations where you need data to trickle back up again, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},{"type":"text","text":" "},{"type":"text","text":"(think mutable references to state)."}]}],"kind":"content"}],"kind":"article","variants":[{"paths":["\/documentation\/swiftcrossui\/state-basics"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"},"metadata":{"title":"State basics","modules":[{"name":"SwiftCrossUI"}],"role":"collectionGroup","roleHeading":"API Collection"},"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"sections":[],"seeAlsoSections":[{"title":"State","anchor":"State","generated":true,"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"]}],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"kind":"article","url":"\/documentation\/swiftcrossui\/preferences","role":"collectionGroup","abstract":[],"title":"Preferences","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"State","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"kind":"symbol","abstract":[],"title":"State","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"abstract":[{"type":"text","text":"An object that can be observed for changes."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"title":"ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"url":"\/documentation\/swiftcrossui\/publisher","title":"Publisher","type":"topic","navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","role":"symbol","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"type":"topic","kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"title":"Cancellable","abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"kind":"symbol","role":"symbol","title":"Published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference","isActive":true},{"type":"text","text":", its "},{"code":"didChange","type":"codeVoice"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"url":"\/documentation\/swiftcrossui\/published","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","navigatorTitle":[{"text":"Published","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"title":"Environment","role":"collectionGroup","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/swiftcrossui\/environment","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftcrossui\/binding","title":"Binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"type":"topic"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"role":"collection","title":"SwiftCrossUI","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic","url":"\/documentation\/swiftcrossui"}}}