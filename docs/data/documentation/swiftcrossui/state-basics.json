{"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","seeAlsoSections":[{"title":"State","generated":true,"anchor":"State","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"]}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/state-basics"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"These concepts form the foundation of SwiftCrossUI’s reactivity.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" property wrapper to store state within your apps, scenes,","type":"text"},{"text":" ","type":"text"},{"text":"and views. State generally trickles down through your view hierarchies. Variables","type":"text"},{"text":" ","type":"text"},{"text":"without the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" annotation aren’t reactive.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For situations where you need data to trickle back up again, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},{"type":"text","text":" "},{"type":"text","text":"(think mutable references to state)."}]}]}],"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"State basics","modules":[{"name":"SwiftCrossUI"}]},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"url":"\/documentation\/swiftcrossui","title":"SwiftCrossUI","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"role":"collection"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","navigatorTitle":[{"text":"ObservableObject","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","role":"symbol","title":"ObservableObject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableObject","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/observableobject"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"title":"Environment","abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/swiftcrossui\/environment","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"type":"topic","title":"Cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swiftcrossui\/cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"title":"State","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","type":"topic","role":"symbol","url":"\/documentation\/swiftcrossui\/state","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"State"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"title":"Published","url":"\/documentation\/swiftcrossui\/published","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","navigatorTitle":[{"text":"Published","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","isActive":true,"type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"url":"\/documentation\/swiftcrossui\/preferences","role":"collectionGroup","title":"Preferences","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Publisher","kind":"identifier"}],"url":"\/documentation\/swiftcrossui\/publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","title":"Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"title":"Binding","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"type":"topic","abstract":[{"text":"A value that can read and write a value owned by a source of truth. Can be thought of","type":"text"},{"text":" ","type":"text"},{"text":"as a writable reference to the value.","type":"text"}],"url":"\/documentation\/swiftcrossui\/binding","kind":"symbol","role":"symbol"}}}