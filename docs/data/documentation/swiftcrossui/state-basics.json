{
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "SwiftCrossUI"
      }
    ],
    "role" : "collectionGroup",
    "roleHeading" : "API Collection",
    "title" : "State basics"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "These concepts form the foundation of SwiftCrossUI’s reactivity.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " property wrapper to store state within your apps, scenes,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and views. State generally trickles down through your view hierarchies. Variables",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "without the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " annotation aren’t reactive.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For situations where you need data to trickle back up again, use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(think mutable references to state).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"
      ],
      "title" : "State"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
        "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"
      ]
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/swiftcrossui\/state-basics"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://SwiftCrossUI/documentation/SwiftCrossUI": {
  "abstract" : [
    {
      "text" : "Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "SwiftCrossUI",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding": {
  "abstract" : [
    {
      "text" : "A value that can read and write a value owned by a source of truth. Can be thought of",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as a writable reference to the value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Binding"
    }
  ],
  "role" : "symbol",
  "title" : "Binding",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/binding"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable": {
  "abstract" : [
    {
      "text" : "Will run a ‘cancel’ action when the cancellable falls out of scope (gets",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "deinit’d by ARC). Protects against calling the action twice.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Cancellable"
    }
  ],
  "role" : "symbol",
  "title" : "Cancellable",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/cancellable"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Environment",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/environment"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject": {
  "abstract" : [
    {
      "text" : "An object that can be observed for changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/observableobject"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Preferences",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/preferences"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published": {
  "abstract" : [
    {
      "text" : "A wrapper which publishes a change whenever the wrapped value is set. If",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "the wrapped value is ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : ", its ",
      "type" : "text"
    },
    {
      "code" : "didChange",
      "type" : "codeVoice"
    },
    {
      "text" : " publisher will",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "also be forwarded to the wrapper’s publisher.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Published"
    }
  ],
  "role" : "symbol",
  "title" : "Published",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/published"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher": {
  "abstract" : [
    {
      "text" : "A type that produces valueless observations.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Publisher"
    }
  ],
  "role" : "symbol",
  "title" : "Publisher",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/publisher"
},
"doc://SwiftCrossUI/documentation/SwiftCrossUI/State": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "identifier" : "doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "State"
    }
  ],
  "role" : "symbol",
  "title" : "State",
  "type" : "topic",
  "url" : "\/documentation\/swiftcrossui\/state"
}
}
}