{"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State-basics","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftcrossui\/state-basics"]}],"topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"]}],"kind":"article","metadata":{"roleHeading":"API Collection","title":"State basics","role":"collectionGroup","modules":[{"name":"SwiftCrossUI"}]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"inlineContent":[{"text":"These concepts form the foundation of SwiftCrossUI’s reactivity.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" property wrapper to store state within your apps, scenes,","type":"text"},{"text":" ","type":"text"},{"text":"and views. State generally trickles down through your view hierarchies. Variables","type":"text"},{"text":" ","type":"text"},{"text":"without the ","type":"text"},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","isActive":true,"type":"reference"},{"text":" annotation aren’t reactive.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For situations where you need data to trickle back up again, use "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding"},{"type":"text","text":" "},{"type":"text","text":"(think mutable references to state)."}],"type":"paragraph"}]}],"sections":[],"seeAlsoSections":[{"anchor":"State","title":"State","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences"],"generated":true}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"navigatorTitle":[{"kind":"identifier","text":"State"}],"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","url":"\/documentation\/swiftcrossui\/state","abstract":[],"title":"State","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"kind":"symbol","title":"ObservableObject","url":"\/documentation\/swiftcrossui\/observableobject","abstract":[{"type":"text","text":"An object that can be observed for changes."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"type":"topic","url":"\/documentation\/swiftcrossui\/binding","title":"Binding","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Binding"}],"abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Environment":{"title":"Environment","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Environment","abstract":[],"url":"\/documentation\/swiftcrossui\/environment","type":"topic","role":"collectionGroup","kind":"article"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Preferences":{"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Preferences","kind":"article","url":"\/documentation\/swiftcrossui\/preferences","role":"collectionGroup","title":"Preferences","abstract":[]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"kind":"symbol","url":"\/documentation\/swiftcrossui\/publisher","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"title":"Publisher","type":"topic","abstract":[{"type":"text","text":"A type that produces valueless observations."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","kind":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftcrossui\/cancellable","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}],"title":"Cancellable"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"type":"topic","kind":"symbol","title":"SwiftCrossUI","role":"collection","url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","url":"\/documentation\/swiftcrossui\/published","kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":", its ","type":"text"},{"code":"didChange","type":"codeVoice"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"title":"Published","type":"topic"}}}