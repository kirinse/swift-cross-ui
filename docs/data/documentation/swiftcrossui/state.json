{"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)"],"title":"Initializers"},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue"],"title":"Instance Properties"},{"generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)"],"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/swiftcrossui\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"navigatorTitle":[{"text":"State","kind":"identifier"}],"modules":[{"name":"SwiftCrossUI"}],"title":"State","symbolKind":"struct","externalID":"s:12SwiftCrossUI5StateV","role":"symbol","roleHeading":"Structure","remoteSource":{"fileName":"State.swift","url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/State.swift#L4"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"},"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"abstract":[{"type":"text","text":"A property wrapper updated by the view graph before each access to"},{"type":"text","text":" "},{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","type":"reference","isActive":true},{"type":"text","text":". Conforming types should use internal mutability (see "},{"type":"codeVoice","code":"Box"},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"to implement this protocol’s non-mutable methods if required. This"},{"type":"text","text":" "},{"type":"text","text":"protocol avoids mutation to allow state properties and such to be"},{"type":"text","text":" "},{"type":"text","text":"captured even though views are structs."}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","title":"DynamicProperty","url":"\/documentation\/swiftcrossui\/dynamicproperty","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"title":"State","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"navigatorTitle":[{"kind":"identifier","text":"State"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/swiftcrossui\/state"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/init(wrappedValue:)":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)","type":"topic","abstract":[],"role":"symbol","title":"init(wrappedValue:)","kind":"symbol","url":"\/documentation\/swiftcrossui\/state\/init(wrappedvalue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"title":"ObservableObject","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"url":"\/documentation\/swiftcrossui\/observableobject","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Binding"}],"navigatorTitle":[{"kind":"identifier","text":"Binding"}],"url":"\/documentation\/swiftcrossui\/binding","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}],"type":"topic","title":"Binding"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"url":"\/documentation\/swiftcrossui\/publisher","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","abstract":[{"text":"A type that produces valueless observations.","type":"text"}],"title":"Publisher","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"type":"topic","url":"\/documentation\/swiftcrossui\/cancellable","abstract":[{"type":"text","text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets"},{"type":"text","text":" "},{"type":"text","text":"deinit’d by ARC). Protects against calling the action twice."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cancellable","kind":"identifier"}],"title":"Cancellable","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","kind":"symbol","navigatorTitle":[{"text":"Cancellable","kind":"identifier"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/wrappedValue":{"url":"\/documentation\/swiftcrossui\/state\/wrappedvalue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"}],"title":"wrappedValue","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue","type":"topic","abstract":[],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"url":"\/documentation\/swiftcrossui\/view\/body","abstract":[{"text":"The view’s contents.","type":"text"}],"type":"topic","title":"body","defaultImplementations":1,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Content","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"required":true,"kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/update(with:previousValue:)":{"title":"update(with:previousValue:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"update"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EnvironmentValues","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"previousValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State","preciseIdentifier":"s:12SwiftCrossUI5StateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">?)"}],"abstract":[],"type":"topic","url":"\/documentation\/swiftcrossui\/state\/update(with:previousvalue:)"},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"kind":"symbol","role":"collection","url":"\/documentation\/swiftcrossui","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","abstract":[{"text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS.","type":"text"}],"type":"topic","title":"SwiftCrossUI"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"url":"\/documentation\/swiftcrossui\/published","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","type":"topic","title":"Published","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Published","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Published","kind":"identifier"}],"abstract":[{"text":"A wrapper which publishes a change whenever the wrapped value is set. If","type":"text"},{"text":" ","type":"text"},{"text":"the wrapped value is ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","type":"reference"},{"text":", its ","type":"text"},{"type":"codeVoice","code":"didChange"},{"text":" publisher will","type":"text"},{"text":" ","type":"text"},{"text":"also be forwarded to the wrapper’s publisher.","type":"text"}],"role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/projectedValue":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI7BindingC","text":"Binding"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"url":"\/documentation\/swiftcrossui\/state\/projectedvalue","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","type":"topic","title":"projectedValue","abstract":[],"kind":"symbol","role":"symbol"}}}