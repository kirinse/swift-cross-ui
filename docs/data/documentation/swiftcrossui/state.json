{"topicSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"]}]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty"],"title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/swiftcrossui\/state"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI"]]},"metadata":{"remoteSource":{"url":"https:\/\/github.com\/stackotter\/swift-cross-ui\/blob\/main\/Sources\/SwiftCrossUI\/State\/State.swift#L8","fileName":"State.swift"},"externalID":"s:12SwiftCrossUI5StateV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"role":"symbol","symbolKind":"struct","navigatorTitle":[{"text":"State","kind":"identifier"}],"roleHeading":"Structure","modules":[{"name":"SwiftCrossUI"}],"title":"State"},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"references":{"doc://SwiftCrossUI/documentation/SwiftCrossUI/DynamicProperty":{"url":"\/documentation\/swiftcrossui\/dynamicproperty","navigatorTitle":[{"kind":"identifier","text":"DynamicProperty"}],"role":"symbol","title":"DynamicProperty","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/DynamicProperty","kind":"symbol","abstract":[{"text":"A property wrapper updated by the view graph before each access to","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","isActive":true},{"text":". Conforming types should use internal mutability (see ","type":"text"},{"code":"Box","type":"codeVoice"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"to implement this protocol’s non-mutable methods if required. This","type":"text"},{"text":" ","type":"text"},{"text":"protocol avoids mutation to allow state properties and such to be","type":"text"},{"text":" ","type":"text"},{"text":"captured even though views are structs.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicProperty"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI":{"abstract":[{"type":"text","text":"Create cross-platform desktop apps for macOS, Linux, Windows, iOS and tvOS."}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI","type":"topic","kind":"symbol","role":"collection","title":"SwiftCrossUI","url":"\/documentation\/swiftcrossui"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/ObservableObject":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject","title":"ObservableObject","role":"symbol","url":"\/documentation\/swiftcrossui\/observableobject","kind":"symbol","abstract":[{"text":"An object that can be observed for changes.","type":"text"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Publisher":{"abstract":[{"type":"text","text":"A type that produces valueless observations."}],"url":"\/documentation\/swiftcrossui\/publisher","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"type":"topic","title":"Publisher","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Publisher","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Publisher"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/update(with:previousValue:)":{"url":"\/documentation\/swiftcrossui\/state\/update(with:previousvalue:)","title":"update(with:previousValue:)","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/update(with:previousValue:)","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"update","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EnvironmentValues","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI17EnvironmentValuesV"},{"text":", ","kind":"text"},{"text":"previousValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI5StateV"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">?)","kind":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/projectedValue":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/projectedValue","kind":"symbol","role":"symbol","title":"projectedValue","url":"\/documentation\/swiftcrossui\/state\/projectedvalue","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:12SwiftCrossUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Published":{"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Published","abstract":[{"type":"text","text":"A wrapper which publishes a change whenever the wrapped value is set. If"},{"type":"text","text":" "},{"type":"text","text":"the wrapped value is "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/ObservableObject"},{"type":"text","text":", its "},{"type":"codeVoice","code":"didChange"},{"type":"text","text":" publisher will"},{"type":"text","text":" "},{"type":"text","text":"also be forwarded to the wrapper’s publisher."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Published"}],"title":"Published","navigatorTitle":[{"kind":"identifier","text":"Published"}],"role":"symbol","url":"\/documentation\/swiftcrossui\/published","type":"topic","kind":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/init(wrappedValue:)":{"url":"\/documentation\/swiftcrossui\/state\/init(wrappedvalue:)","type":"topic","title":"init(wrappedValue:)","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/init(wrappedValue:)","kind":"symbol","abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"wrappedValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Binding":{"title":"Binding","navigatorTitle":[{"text":"Binding","kind":"identifier"}],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Binding","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Binding","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/swiftcrossui\/binding","abstract":[{"type":"text","text":"A value that can read and write a value owned by a source of truth. Can be thought of"},{"type":"text","text":" "},{"type":"text","text":"as a writable reference to the value."}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State/wrappedValue":{"url":"\/documentation\/swiftcrossui\/state\/wrappedvalue","abstract":[],"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"wrappedValue","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/View/body":{"title":"body","url":"\/documentation\/swiftcrossui\/view\/body","type":"topic","defaultImplementations":1,"identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/View\/body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Content","kind":"typeIdentifier","preciseIdentifier":"s:12SwiftCrossUI4ViewP7ContentQa"}],"required":true,"abstract":[{"type":"text","text":"The view’s contents."}],"kind":"symbol","role":"symbol"},"doc://SwiftCrossUI/documentation/SwiftCrossUI/Cancellable":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/Cancellable","url":"\/documentation\/swiftcrossui\/cancellable","navigatorTitle":[{"kind":"identifier","text":"Cancellable"}],"title":"Cancellable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cancellable"}],"abstract":[{"text":"Will run a ‘cancel’ action when the cancellable falls out of scope (gets","type":"text"},{"text":" ","type":"text"},{"text":"deinit’d by ARC). Protects against calling the action twice.","type":"text"}]},"doc://SwiftCrossUI/documentation/SwiftCrossUI/State":{"url":"\/documentation\/swiftcrossui\/state","abstract":[],"role":"symbol","title":"State","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"State"}],"navigatorTitle":[{"kind":"identifier","text":"State"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftCrossUI\/documentation\/SwiftCrossUI\/State"}}}